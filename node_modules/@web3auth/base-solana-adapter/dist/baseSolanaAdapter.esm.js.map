{"version":3,"file":"baseSolanaAdapter.esm.js","sources":["../src/baseSolanaAdapter.ts"],"sourcesContent":["import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    const accounts = await this.provider.request<never, string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<{ message: Uint8Array; display: string }, Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        bs58.encode(signedMessage as Uint8Array),\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<never, string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n"],"names":["BaseSolanaAdapter","BaseAdapter","init","_","chainConfig","getChainConfig","CHAIN_NAMESPACES","SOLANA","authenticateUser","provider","status","ADAPTER_STATUS","CONNECTED","WalletLoginError","notConnectedError","chainNamespace","chainId","accounts","request","method","length","existingToken","getSavedToken","name","isExpired","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","signChallenge","encodedMessage","TextEncoder","encode","signedMessage","params","message","display","verifySignedChallenge","bs58","sessionTime","clientId","web3AuthNetwork","saveToken","disconnectSession","checkDisconnectionRequirements","clearToken","disconnect","rehydrated","emit","ADAPTER_EVENTS","DISCONNECTED"],"mappings":";;;AAkBO,MAAeA,iBAAiB,SAAYC,WAAW,CAAI;EAChE,MAAMC,IAAIA,CAACC,CAAsB,EAAiB;AAChD,IAAA,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE,IAAI,CAACA,WAAW,GAAGC,cAAc,CAACC,gBAAgB,CAACC,MAAM,EAAE,CAAC,CAAC,CAAA;AACtF,GAAA;EAEA,MAAMC,gBAAgBA,GAA0B;AAC9C,IAAA,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,MAAM,KAAKC,cAAc,CAACC,SAAS,EAAE,MAAMC,gBAAgB,CAACC,iBAAiB,EAAE,CAAA;IAE1G,MAAM;MAAEC,cAAc;AAAEC,MAAAA,OAAAA;KAAS,GAAG,IAAI,CAACZ,WAAW,CAAA;IAEpD,MAAMa,QAAQ,GAAG,MAAM,IAAI,CAACR,QAAQ,CAACS,OAAO,CAAkB;AAC5DC,MAAAA,MAAM,EAAE,aAAA;AACV,KAAC,CAAC,CAAA;AACF,IAAA,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;AACnC,MAAA,MAAMC,aAAa,GAAGC,aAAa,CAACL,QAAQ,CAAC,CAAC,CAAC,EAAY,IAAI,CAACM,IAAI,CAAC,CAAA;AACrE,MAAA,IAAIF,aAAa,EAAE;AACjB,QAAA,MAAMG,SAAS,GAAGC,qBAAqB,CAACJ,aAAa,CAAC,CAAA;QACtD,IAAI,CAACG,SAAS,EAAE;UACd,OAAO;AAAEE,YAAAA,OAAO,EAAEL,aAAAA;WAAe,CAAA;AACnC,SAAA;AACF,OAAA;AAEA,MAAA,MAAMM,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;AAC9BC,QAAAA,GAAG,EAAEH,MAAM,CAACC,QAAQ,CAACG,IAAI;AACzBC,QAAAA,OAAO,EAAEjB,QAAQ,CAAC,CAAC,CAAC;AACpBD,QAAAA,OAAO,EAAEmB,QAAQ,CAACnB,OAAO,EAAE,EAAE,CAAC;AAC9BoB,QAAAA,OAAO,EAAE,GAAG;AACZC,QAAAA,KAAK,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;AAC1CC,QAAAA,QAAQ,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAC;OAClC,CAAA;MAED,MAAMC,SAAS,GAAG,MAAMC,aAAa,CAACnB,OAAO,EAAEZ,cAAc,CAAC,CAAA;MAC9D,MAAMgC,cAAc,GAAG,IAAIC,WAAW,EAAE,CAACC,MAAM,CAACJ,SAAS,CAAC,CAAA;MAC1D,MAAMK,aAAa,GAAG,MAAM,IAAI,CAACzC,QAAQ,CAACS,OAAO,CAAuD;AACtGC,QAAAA,MAAM,EAAE,aAAa;AACrBgC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAEL,cAAc;AACvBM,UAAAA,OAAO,EAAE,MAAA;AACX,SAAA;AACF,OAAC,CAAC,CAAA;AACF,MAAA,MAAM3B,OAAO,GAAG,MAAM4B,qBAAqB,CACzCvC,cAAc,EACdwC,IAAI,CAACN,MAAM,CAACC,aAA2B,CAAC,EACxCL,SAAS,EACT,IAAI,CAACtB,IAAI,EACT,IAAI,CAACiC,WAAW,EAChB,IAAI,CAACC,QAAQ,EACb,IAAI,CAACC,eACP,CAAC,CAAA;MACDC,SAAS,CAAC1C,QAAQ,CAAC,CAAC,CAAC,EAAY,IAAI,CAACM,IAAI,EAAEG,OAAO,CAAC,CAAA;MACpD,OAAO;AACLA,QAAAA,OAAAA;OACD,CAAA;AACH,KAAA;AACA,IAAA,MAAMb,gBAAgB,CAACC,iBAAiB,CAAC,uDAAuD,CAAC,CAAA;AACnG,GAAA;EAEA,MAAM8C,iBAAiBA,GAAkB;IACvC,KAAK,CAACC,8BAA8B,EAAE,CAAA;IACtC,MAAM5C,QAAQ,GAAG,MAAM,IAAI,CAACR,QAAQ,CAACS,OAAO,CAAkB;AAC5DC,MAAAA,MAAM,EAAE,aAAA;AACV,KAAC,CAAC,CAAA;AACF,IAAA,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;MACnC0C,UAAU,CAAC7C,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACM,IAAI,CAAC,CAAA;AACpC,KAAA;AACF,GAAA;EAEA,MAAMwC,UAAUA,GAAkB;IAChC,IAAI,CAACC,UAAU,GAAG,KAAK,CAAA;AACvB,IAAA,IAAI,CAACC,IAAI,CAACC,cAAc,CAACC,YAAY,CAAC,CAAA;AACxC,GAAA;AACF;;;;"}