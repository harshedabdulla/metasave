{"version":3,"file":"walletConnectV2Adapter.esm.js","sources":["../src/config.ts","../src/utils.ts","../src/walletConnectV2adapter.ts"],"sourcesContent":["import type { EngineTypes, ProposalTypes } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, ChainNamespaceType, IWalletConnectExtensionAdapter } from \"@web3auth/base\";\n\nimport { IAdapterSettings } from \"./interface\";\n\nexport const WALLET_CONNECT_EXTENSION_ADAPTERS: IWalletConnectExtensionAdapter[] = [\n  {\n    name: \"Rainbow\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-rainbow.svg\",\n    mobile: {\n      native: \"rainbow:\",\n      universal: \"https://rnbwapp.com\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"MetaMask\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-metamask.svg\",\n    mobile: {\n      native: \"metamask:\",\n      universal: \"https://metamask.app.link\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"Argent\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-argent.svg\",\n    mobile: {\n      native: \"argent://\",\n      universal: \"https://www.argent.xyz/app\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"Trust Wallet\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-trust.svg\",\n    mobile: {\n      native: \"trust:\",\n      universal: \"https://link.trustwallet.com\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"Zerion\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-zerion.svg\",\n    mobile: {\n      native: \"zerion://\",\n      universal: \"https://wallet.zerion.io\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n];\n\nexport enum DEFAULT_EIP155_METHODS {\n  ETH_SEND_TRANSACTION = \"eth_sendTransaction\",\n  ETH_SIGN = \"eth_sign\",\n  PERSONAL_SIGN = \"personal_sign\",\n  ETH_SIGN_TYPED_DATA = \"eth_signTypedData\",\n}\n\nexport enum DEFAULT_EIP_155_EVENTS {\n  ETH_CHAIN_CHANGED = \"chainChanged\",\n  ETH_ACCOUNTS_CHANGED = \"accountsChanged\",\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href)) || null;\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport const getNamespacesFromChains = (chains: string[]) => {\n  const supportedNamespaces: string[] = [];\n  chains.forEach((chainId) => {\n    const [namespace] = chainId.split(\":\");\n    if (!supportedNamespaces.includes(namespace)) {\n      supportedNamespaces.push(namespace);\n    }\n  });\n\n  return supportedNamespaces;\n};\n\nexport const getSupportedMethodsByNamespace = (namespace: string) => {\n  switch (namespace) {\n    case CHAIN_NAMESPACES.EIP155:\n      return Object.values(DEFAULT_EIP155_METHODS);\n    default:\n      throw new Error(`No default methods for namespace: ${namespace}`);\n  }\n};\n\nexport const getSupportedEventsByNamespace = (namespace: string) => {\n  switch (namespace) {\n    case CHAIN_NAMESPACES.EIP155:\n      return Object.values(DEFAULT_EIP_155_EVENTS);\n    default:\n      throw new Error(`No default events for namespace: ${namespace}`);\n  }\n};\nexport const getRequiredNamespaces = (chains: string[]): ProposalTypes.RequiredNamespaces => {\n  const selectedNamespaces = getNamespacesFromChains(chains);\n\n  return Object.fromEntries(\n    selectedNamespaces.map((namespace) => [\n      namespace,\n      {\n        methods: getSupportedMethodsByNamespace(namespace),\n        chains: chains.filter((chain) => chain.startsWith(namespace)),\n        events: getSupportedEventsByNamespace(namespace),\n      },\n    ])\n  );\n};\n\nexport const getWalletConnectV2Settings = async (\n  namespace: ChainNamespaceType,\n  chainIds: number[],\n  projectID: string\n): Promise<{\n  adapterSettings: IAdapterSettings;\n  loginSettings: EngineTypes.ConnectParams;\n}> => {\n  if (namespace === CHAIN_NAMESPACES.EIP155) {\n    const appMetadata = await getSiteMetadata();\n    const adapterSettings: IAdapterSettings = {\n      walletConnectInitOptions: {\n        projectId: projectID,\n        relayUrl: \"wss://relay.walletconnect.com\",\n        metadata: {\n          name: appMetadata.name,\n          description: appMetadata.name,\n          url: window.location.origin,\n          icons: [appMetadata.icon || \"\"],\n        },\n      },\n    };\n\n    const chainNamespaces = chainIds.map((chainId) => {\n      return `${namespace}:${chainId}`;\n    });\n\n    const loginSettings: EngineTypes.ConnectParams = {\n      optionalNamespaces: getRequiredNamespaces(chainNamespaces),\n    };\n    return {\n      adapterSettings,\n      loginSettings,\n    };\n  }\n  throw new Error(`Unsupported chain namespace: ${namespace}`);\n};\n","import type { EngineTypes } from \"@walletconnect/types\";\nimport type { ChainNamespaceType } from \"@web3auth/base\";\n\nexport const isChainIdSupported = (chainNamespace: ChainNamespaceType, chainID: number, loginSettings: EngineTypes.ConnectParams | undefined) => {\n  const supportedNamespaces = loginSettings?.requiredNamespaces || {};\n  const wcChainNamespace = `${chainNamespace}:${chainID}`;\n\n  if (!supportedNamespaces[chainNamespace].chains || supportedNamespaces[chainNamespace].chains?.length === 0) {\n    return false;\n  }\n  const isSupported = supportedNamespaces[chainNamespace].chains?.includes(wcChainNamespace);\n  return !!isSupported;\n};\n","import Client from \"@walletconnect/sign-client\";\nimport { SessionTypes } from \"@walletconnect/types\";\nimport { getSdkError, isValidArray } from \"@walletconnect/utils\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  IProvider,\n  log,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletConnectV2Data,\n  WalletInitializationError,\n  WalletLoginError,\n  WalletOperationsError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\nimport { WalletConnectV2Provider } from \"@web3auth/ethereum-provider\";\nimport merge from \"lodash.merge\";\n\nimport { getWalletConnectV2Settings, WALLET_CONNECT_EXTENSION_ADAPTERS } from \"./config\";\nimport { WalletConnectV2AdapterOptions } from \"./interface\";\nimport { isChainIdSupported } from \"./utils\";\n\nclass WalletConnectV2Adapter extends BaseEvmAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.WALLET_CONNECT_V2;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly adapterOptions: WalletConnectV2AdapterOptions;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public adapterData: WalletConnectV2Data = {\n    uri: \"\",\n    extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS,\n  };\n\n  public connector: Client | null = null;\n\n  public activeSession: SessionTypes.Struct | null = null;\n\n  private wcProvider: WalletConnectV2Provider | null = null;\n\n  constructor(options: WalletConnectV2AdapterOptions = {}) {\n    super(options);\n    this.adapterOptions = { ...options };\n  }\n\n  get connected(): boolean {\n    return !!this.activeSession;\n  }\n\n  get provider(): IProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.wcProvider) {\n      return this.wcProvider;\n    }\n    return null;\n  }\n\n  set provider(_: IProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    await super.init();\n    super.checkInitializationRequirements();\n    const projectId = this.adapterOptions.adapterSettings?.walletConnectInitOptions?.projectId;\n    if (!projectId) {\n      throw WalletInitializationError.invalidParams(\"Wallet connect project id is required in wallet connect v2 adapter\");\n    }\n\n    const wc2Settings = await getWalletConnectV2Settings(\n      this.chainConfig?.chainNamespace as ChainNamespaceType,\n      [parseInt(this.chainConfig?.chainId as string, 16)],\n      projectId\n    );\n    if (!this.adapterOptions.loginSettings) {\n      this.adapterOptions.loginSettings = wc2Settings.loginSettings;\n    }\n\n    this.adapterOptions.adapterSettings = merge(wc2Settings.adapterSettings, this.adapterOptions.adapterSettings);\n\n    const { adapterSettings } = this.adapterOptions;\n\n    this.connector = await Client.init(adapterSettings?.walletConnectInitOptions);\n    this.wcProvider = new WalletConnectV2Provider({ config: { chainConfig: this.chainConfig as CustomChainConfig }, connector: this.connector });\n\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V2);\n    this.status = ADAPTER_STATUS.READY;\n    log.debug(\"initializing wallet connect v2 adapter\");\n    if (options.autoConnect) {\n      await this.checkForPersistedSession();\n\n      if (this.connected) {\n        this.rehydrated = true;\n        try {\n          await this.onConnectHandler();\n        } catch (error) {\n          log.error(\"wallet auto connect\", error);\n          this.emit(ADAPTER_EVENTS.ERRORED, error);\n        }\n      } else {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.emit(ADAPTER_EVENTS.CACHE_CLEAR);\n      }\n    }\n  }\n\n  async connect(): Promise<IProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    try {\n      // if already connected\n      if (this.connected) {\n        await this.onConnectHandler();\n        return this.provider;\n      }\n\n      if (this.status !== ADAPTER_STATUS.CONNECTING) {\n        await this.createNewSession();\n      }\n      return this.provider;\n    } catch (error) {\n      log.error(\"Wallet connect v2 adapter error while connecting\", error);\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = true;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n\n      const finalError =\n        error instanceof Web3AuthError\n          ? error\n          : WalletLoginError.connectionError(`Failed to login with wallet connect: ${(error as Error)?.message || \"\"}`);\n      throw finalError;\n    }\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    if (!isChainIdSupported(this.currentChainNamespace, parseInt(chainConfig.chainId, 16), this.adapterOptions.loginSettings)) {\n      throw WalletOperationsError.chainIDNotAllowed(`Unsupported chainID: ${chainConfig.chainId}`);\n    }\n    await this.wcProvider?.addChain(chainConfig);\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    if (!isChainIdSupported(this.currentChainNamespace, parseInt(params.chainId, 16), this.adapterOptions.loginSettings)) {\n      throw WalletOperationsError.chainIDNotAllowed(`Unsupported chainID: ${params.chainId}`);\n    }\n    await this.wcProvider?.switchChain({ chainId: params.chainId });\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    const { cleanup } = options;\n    if (!this.connector || !this.connected || !this.activeSession?.topic) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    await this.connector.disconnect({ topic: this.activeSession?.topic, reason: getSdkError(\"USER_DISCONNECTED\") });\n    this.rehydrated = false;\n    if (cleanup) {\n      this.connector = null;\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.activeSession = null;\n    await super.disconnect();\n  }\n\n  private cleanupPendingPairings(): void {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const inactivePairings = this.connector.pairing.getAll({ active: false });\n\n    if (!isValidArray(inactivePairings)) return;\n\n    inactivePairings.forEach((pairing) => {\n      if (this.connector) {\n        this.connector.pairing.delete(pairing.topic, getSdkError(\"USER_DISCONNECTED\"));\n      }\n    });\n  }\n\n  private async checkForPersistedSession(): Promise<SessionTypes.Struct | null> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (this.connector.session.length) {\n      const lastKeyIndex = this.connector.session.keys.length - 1;\n      this.activeSession = this.connector.session.get(this.connector.session.keys[lastKeyIndex]);\n    }\n    return this.activeSession;\n  }\n\n  private async createNewSession(opts: { forceNewSession: boolean } = { forceNewSession: false }): Promise<void> {\n    try {\n      if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n      if (!this.adapterOptions.loginSettings) throw WalletInitializationError.notReady(\"login settings are not set yet\");\n\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V2 });\n      if (opts.forceNewSession && this.activeSession?.topic) {\n        await this.connector.disconnect({ topic: this.activeSession?.topic, reason: getSdkError(\"USER_DISCONNECTED\") });\n      }\n\n      log.debug(\"creating new session for web3auth wallet connect\");\n      const { uri, approval } = await this.connector.connect(this.adapterOptions.loginSettings);\n      const qrcodeModal = this.adapterOptions?.adapterSettings?.qrcodeModal;\n      // Open QRCode modal if a URI was returned (i.e. we're not connecting with an existing pairing).\n      if (uri) {\n        if (qrcodeModal) {\n          try {\n            await qrcodeModal.openModal({ uri });\n            log.debug(\"EVENT\", \"QR Code Modal closed\");\n            this.status = ADAPTER_STATUS.READY;\n            this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V2);\n          } catch (error) {\n            log.error(\"unable to open qr code modal\");\n          }\n        } else {\n          this.updateAdapterData({ uri, extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS } as WalletConnectV2Data);\n        }\n      }\n\n      log.info(\"awaiting session approval from wallet\");\n\n      // Await session approval from the wallet.\n      const session = await approval();\n      this.activeSession = session;\n      // Handle the returned session (e.g. update UI to \"connected\" state).\n      await this.onConnectHandler();\n      if (qrcodeModal) {\n        qrcodeModal.closeModal();\n      }\n    } catch (error: unknown) {\n      if ((error as Error).message?.toLowerCase().includes(\"proposal expired\")) {\n        // Retry if adapter status is still connecting\n        log.info(\"current adapter status: \", this.status);\n        if (this.status === ADAPTER_STATUS.CONNECTING) {\n          log.info(\"retrying to create new wallet connect session since proposal expired\");\n          return this.createNewSession({ forceNewSession: true });\n        }\n        if (this.status === ADAPTER_STATUS.READY) {\n          log.info(\"ignoring proposal expired error since some other adapter is connected\");\n          return;\n        }\n      }\n      log.error(\"error while creating new wallet connect session\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  private async onConnectHandler() {\n    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"Chain config is not set\");\n    if (this.adapterOptions.adapterSettings?.qrcodeModal) {\n      this.wcProvider = new WalletConnectV2Provider({\n        config: {\n          chainConfig: this.chainConfig as CustomChainConfig,\n          skipLookupNetwork: true,\n        },\n        connector: this.connector,\n      });\n    }\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents();\n    this.cleanupPendingPairings();\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V2, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n  }\n\n  private subscribeEvents(): void {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n\n    this.connector.events.on(\"session_update\", ({ topic, params }) => {\n      if (!this.connector) return;\n      const { namespaces } = params;\n      const _session = this.connector.session.get(topic);\n      // Overwrite the `namespaces` of the existing session with the incoming one.\n      const updatedSession = { ..._session, namespaces };\n      // Integrate the updated session state into your dapp state.\n      this.activeSession = updatedSession;\n    });\n\n    this.connector.events.on(\"session_delete\", () => {\n      // Session was deleted -> reset the dapp state, clean up from user session, etc.\n\n      this.disconnect();\n    });\n  }\n}\n\nexport { WalletConnectV2Adapter };\n"],"names":["WALLET_CONNECT_EXTENSION_ADAPTERS","name","chains","CHAIN_NAMESPACES","EIP155","logo","mobile","native","universal","desktop","DEFAULT_EIP155_METHODS","DEFAULT_EIP_155_EVENTS","getSiteName","window","document","siteName","querySelector","content","metaTitle","title","length","location","hostname","imgExists","url","Promise","resolve","reject","img","createElement","onload","onerror","src","e","getSiteIcon","icon","href","Array","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","getNamespacesFromChains","supportedNamespaces","forEach","chainId","namespace","split","includes","push","getSupportedMethodsByNamespace","Object","values","Error","getSupportedEventsByNamespace","getRequiredNamespaces","selectedNamespaces","fromEntries","map","methods","filter","chain","startsWith","events","getWalletConnectV2Settings","chainIds","projectID","appMetadata","adapterSettings","walletConnectInitOptions","projectId","relayUrl","metadata","description","origin","icons","chainNamespaces","loginSettings","optionalNamespaces","isChainIdSupported","chainNamespace","chainID","_supportedNamespaces$","_supportedNamespaces$2","requiredNamespaces","wcChainNamespace","isSupported","WalletConnectV2Adapter","BaseEvmAdapter","constructor","options","arguments","undefined","_defineProperty","WALLET_ADAPTERS","WALLET_CONNECT_V2","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","uri","extensionAdapters","adapterOptions","_objectSpread","connected","activeSession","provider","status","wcProvider","_","init","_this$adapterOptions$","_this$chainConfig","_this$chainConfig2","checkInitializationRequirements","WalletInitializationError","invalidParams","wc2Settings","chainConfig","parseInt","merge","connector","Client","WalletConnectV2Provider","config","emit","ADAPTER_EVENTS","READY","log","debug","autoConnect","checkForPersistedSession","rehydrated","onConnectHandler","error","ERRORED","CACHE_CLEAR","connect","checkConnectionRequirements","notReady","CONNECTING","createNewSession","finalError","Web3AuthError","WalletLoginError","connectionError","message","addChain","_this$wcProvider","checkAddChainRequirements","currentChainNamespace","WalletOperationsError","chainIDNotAllowed","addChainConfig","switchChain","params","_this$wcProvider2","checkSwitchChainRequirements","setAdapterSettings","getChainConfig","getUserInfo","notConnectedError","disconnect","_this$activeSession","_this$activeSession2","cleanup","disconnectSession","topic","reason","getSdkError","cleanupPendingPairings","inactivePairings","pairing","getAll","active","isValidArray","delete","session","lastKeyIndex","keys","get","opts","forceNewSession","_this$activeSession3","_this$adapterOptions","adapter","_this$activeSession4","approval","qrcodeModal","openModal","updateAdapterData","info","closeModal","_message","toLowerCase","_this$adapterOptions$2","skipLookupNetwork","setupProvider","subscribeEvents","CONNECTED","reconnected","on","_ref","namespaces","_session","updatedSession"],"mappings":"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"}