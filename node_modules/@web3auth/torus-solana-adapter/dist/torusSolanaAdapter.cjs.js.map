{"version":3,"file":"torusSolanaAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-solana-adapter/webpack/bootstrap","webpack://@web3auth/torus-solana-adapter/webpack/runtime/compat get default export","webpack://@web3auth/torus-solana-adapter/webpack/runtime/define property getters","webpack://@web3auth/torus-solana-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-solana-adapter/webpack/runtime/make namespace object","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@toruslabs/solana-embed\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@web3auth/base-solana-adapter\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/torus-solana-adapter/./src/solanaWalletAdapter.ts","webpack://@web3auth/torus-solana-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectSpread2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/solana-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-solana-adapter\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/solana-provider\");","import Torus, { NetworkInterface, TorusCtorArgs, TorusLoginParams, TorusParams } from \"@toruslabs/solana-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  IProvider,\n  log,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { ITorusWalletProvider, TorusInjectedProvider } from \"@web3auth/solana-provider\";\n\nexport interface SolanaWalletOptions extends BaseAdapterSettings {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: TorusLoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n}\n\nexport class SolanaWalletAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_SOLANA;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: TorusLoginParams = {};\n\n  private solanaProvider: TorusInjectedProvider | null = null;\n\n  constructor(params: SolanaWalletOptions = {}) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n  }\n\n  get provider(): IProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.solanaProvider) {\n      return this.solanaProvider;\n    }\n    return null;\n  }\n\n  set provider(_: IProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n    const network: NetworkInterface = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus solana adapter init\");\n    await this.torusInstance.init({ showTorusButton: false, ...this.initParams, network });\n\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig as CustomChainConfig,\n      },\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      log.debug(\"initializing torus solana adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<IProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_SOLANA });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      try {\n        const torusInpageProvider = this.torusInstance.provider as unknown as ITorusWalletProvider;\n        torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n        torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n        await this.solanaProvider.setupProvider(torusInpageProvider);\n      } catch (error: unknown) {\n        // some issue in solana wallet, always connecting to mainnet on init.\n        // fallback to change network if not connected to correct one on login.\n        if (error instanceof Web3AuthError && error.code === 5010) {\n          const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n          const network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n          await this.torusInstance.setProvider(network);\n        } else {\n          throw error;\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_SOLANA, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if (error instanceof Web3AuthError) throw error;\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    // await this.solanaProvider?.addChain(chainConfig);\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    const chainConfig = this.getChainConfig(params.chainId) as CustomChainConfig;\n    await this.torusInstance?.setProvider({\n      rpcTarget: chainConfig.rpcTarget,\n      chainId: chainConfig.chainId,\n      displayName: chainConfig.displayName,\n      blockExplorerUrl: chainConfig.blockExplorer,\n      ticker: chainConfig.ticker,\n      tickerName: chainConfig.tickerName,\n      logo: \"https://images.web3auth.io/login-torus-solana.svg\",\n    });\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n}\n","export * from \"./solanaWalletAdapter\";\n"],"names":["Torus","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseSolanaAdapter","TorusInjectedProvider","SolanaWalletAdapter","constructor","params","arguments","length","undefined","_defineProperty","TORUS_SOLANA","SOLANA","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","provider","status","solanaProvider","_","Error","init","options","checkInitializationRequirements","chainId","blockExplorer","displayName","rpcTarget","ticker","tickerName","chainConfig","network","blockExplorerUrl","logo","torusInstance","debug","_objectSpread","showTorusButton","config","READY","emit","autoConnect","rehydrated","connect","error","ERRORED","checkConnectionRequirements","notReady","CONNECTING","adapter","login","torusInpageProvider","sendTransaction","bind","signAllTransactions","signMessage","signTransaction","setupProvider","code","setProvider","CONNECTED","reconnected","connectionError","disconnect","cleanup","disconnectSession","logout","getUserInfo","notConnectedError","userInfo","addChain","checkAddChainRequirements","addChainConfig","switchChain","_this$torusInstance","checkSwitchChainRequirements","getChainConfig","setAdapterSettings"],"sourceRoot":""}