{"version":3,"file":"phantomAdapter.esm.js","sources":["../src/utils.ts","../src/phantomAdapter.ts"],"sourcesContent":["import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\ndeclare global {\n  interface Window {\n    solana: IPhantomWalletProvider & { isPhantom: boolean };\n  }\n}\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!window.solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return window.solana;\n  }\n  const isAvailable = await poll(() => window.solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return window.solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  IProvider,\n  log,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport type PhantomAdapterOptions = BaseAdapterSettings;\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): IProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.phantomProvider) {\n      return this.phantomProvider;\n    }\n    return null;\n  }\n\n  set provider(_: IProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<IProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<IProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) {\n              reject(WalletInitializationError.notInstalled());\n              return;\n            }\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      await super.disconnect();\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    this.phantomProvider?.addChain(chainConfig);\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    await this.phantomProvider?.switchChain(params);\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<IProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n"],"names":["poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","_window$solana","options","arguments","length","undefined","isPhantomAvailable","window","solana","isPhantom","isAvailable","_window$solana2","PhantomAdapter","BaseSolanaAdapter","constructor","_defineProperty","WALLET_ADAPTERS","PHANTOM","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","_wallet","off","_onDisconnect","rehydrated","status","CONNECTED","READY","emit","ADAPTER_EVENTS","DISCONNECTED","isWalletConnected","_this$_wallet","isConnected","provider","phantomProvider","_","Error","init","checkInitializationRequirements","WalletInitializationError","notInstalled","PhantomInjectedProvider","config","chainConfig","log","debug","autoConnect","connect","error","_this","checkConnectionRequirements","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","_len","args","Array","_key","apply","reason","Web3AuthError","WalletLoginError","connectionError","message","publicKey","on","ERRORED","disconnect","cleanup","disconnectSession","_this$_wallet2","disconnectionError","getUserInfo","notConnectedError","addChain","_this$phantomProvider","checkAddChainRequirements","addChainConfig","switchChain","params","_this$phantomProvider2","checkSwitchChainRequirements","setAdapterSettings","getChainConfig","chainId","injectedProvider","setupProvider","reconnected"],"mappings":"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"}