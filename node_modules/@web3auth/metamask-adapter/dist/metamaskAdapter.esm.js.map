{"version":3,"file":"metamaskAdapter.esm.js","sources":["../src/metamaskAdapter.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  IProvider,\n  log,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\ninterface EthereumProvider extends IProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport type MetamaskAdapterOptions = BaseAdapterSettings;\n\nclass MetamaskAdapter extends BaseEvmAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  get provider(): IProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.metamaskProvider) {\n      return this.metamaskProvider;\n    }\n    return null;\n  }\n\n  set provider(_: IProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true, silent: true, timeout: 1000 })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      log.debug(\"initializing metamask adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<IProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n    const { ethereum } = window as any;\n    const isPhantom = Boolean(\"isPhantom\" in ethereum);\n    // check which is the active provider\n    if (ethereum && ethereum.isMetaMask && isPhantom) {\n      // this means phantom is the active provider.\n      if (ethereum.providers && ethereum.providers.length > 0) {\n        const provider = ethereum.providers.find((p: any) => p.isMetaMask && !p.overrideIsMetaMask);\n\n        if (provider) {\n          ethereum.setProvider(provider);\n        }\n      }\n    } else if (ethereum && (ethereum.providers || []).length > 0) {\n      // this means that there are another providers than metamask (like coinbase).\n      const provider = ethereum.providers.find((p: any) => p.isMetaMask);\n      if (provider) {\n        ethereum.setSelectedProvider(provider);\n      }\n    }\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.addChain(this.chainConfig as CustomChainConfig, true);\n        await this.switchChain(this.chainConfig as CustomChainConfig, true);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      const disconnectHandler = () => {\n        // ready to be connected again\n        this.disconnect();\n        this.provider?.removeListener(\"disconnect\", disconnectHandler);\n      };\n      this.provider.on(\"disconnect\", disconnectHandler);\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if (error instanceof Web3AuthError) throw error;\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    await this.metamaskProvider?.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          chainId: chainConfig.chainId,\n          chainName: chainConfig.displayName,\n          rpcUrls: [chainConfig.rpcTarget],\n          blockExplorerUrls: [chainConfig.blockExplorer],\n          nativeCurrency: {\n            name: chainConfig.tickerName,\n            symbol: chainConfig.ticker,\n            decimals: chainConfig.decimals || 18,\n          },\n        },\n      ],\n    });\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    await this.metamaskProvider?.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: params.chainId }],\n    });\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n}\n\nexport { MetamaskAdapter };\n"],"names":["MetamaskAdapter","BaseEvmAdapter","constructor","arguments","_defineProperty","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","WALLET_ADAPTERS","METAMASK","ADAPTER_STATUS","NOT_READY","provider","status","metamaskProvider","_","Error","init","options","length","undefined","checkInitializationRequirements","detectEthereumProvider","mustBeMetaMask","silent","timeout","WalletInitializationError","notInstalled","READY","emit","ADAPTER_EVENTS","log","debug","autoConnect","rehydrated","connect","error","ERRORED","checkConnectionRequirements","WalletLoginError","notConnectedError","ethereum","window","isPhantom","Boolean","isMetaMask","providers","find","p","overrideIsMetaMask","setProvider","setSelectedProvider","CONNECTING","adapter","request","method","chainId","chainConfig","addChain","switchChain","CONNECTED","disconnectHandler","_this$provider","disconnect","removeListener","on","reconnected","Web3AuthError","connectionError","_this$provider2","cleanup","disconnectSession","removeAllListeners","getUserInfo","_this$metamaskProvide","checkAddChainRequirements","params","chainName","displayName","rpcUrls","rpcTarget","blockExplorerUrls","blockExplorer","nativeCurrency","name","tickerName","symbol","ticker","decimals","addChainConfig","_this$metamaskProvide2","checkSwitchChainRequirements","setAdapterSettings","getChainConfig"],"mappings":"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"}