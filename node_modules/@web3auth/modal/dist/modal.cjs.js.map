{"version":3,"file":"modal.cjs.js","mappings":";;;;;;;;;;;;;;;;AAAiF;AAI1E,MAAMG,4BAAiD,GAAG;EAC/DC,cAAc,EAAEJ,4DAAgB,CAACK,MAAM;EACvCC,QAAQ,EAAE;IACR,CAACJ,2DAAe,CAACK,YAAY,GAAG;MAC9BC,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB,CAAC;IACD,CAACT,2DAAe,CAACU,SAAS,GAAG;MAC3BJ,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB,CAAC;IACD,CAACT,2DAAe,CAACW,OAAO,GAAG;MACzBL,KAAK,EAAE,SAAS;MAChBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;AAEM,MAAMG,yBAA8C,GAAG;EAC5DV,cAAc,EAAEJ,4DAAgB,CAACe,MAAM;EACvCT,QAAQ,EAAE;IACR,CAACL,wDAAY,CAACe,SAAS,GAAG;MACxBR,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB,CAAC;IACD,CAACV,wDAAY,CAACgB,QAAQ,GAAG;MACvBT,KAAK,EAAE,UAAU;MACjBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB,CAAC;IACD,CAACV,wDAAY,CAACW,SAAS,GAAG;MACxBJ,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB,CAAC;IACD,CAACV,wDAAY,CAACiB,iBAAiB,GAAG;MAChCV,KAAK,EAAE,gBAAgB;MACvBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;AAEM,MAAMQ,8BAAmD,GAAG;EACjEf,cAAc,EAAEJ,4DAAgB,CAACK,MAAM;EACvCC,QAAQ,EAAE;IACR,CAACJ,2DAAe,CAACU,SAAS,GAAG;MAC3BJ,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;AAEM,MAAMS,2BAAgD,GAAG;EAC9DhB,cAAc,EAAEJ,4DAAgB,CAACe,MAAM;EACvCT,QAAQ,EAAE;IACR,CAACL,wDAAY,CAACW,SAAS,GAAG;MACxBJ,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;AAEM,MAAMU,uBAA4C,GAAG;EAC1DjB,cAAc,EAAEJ,4DAAgB,CAACsB,KAAK;EACtChB,QAAQ,EAAE;IACR,CAACL,wDAAY,CAACW,SAAS,GAAG;MACxBJ,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,aAAa,EAAE;IACjB;EACF;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;AC5FD,MAAM,6BAA4B;;;ACAlC,MAAM,8BAA4B;;;;;ACAlC,MAAM,6BAA4B;;ACAlC,MAAM,wBAA4B;;ACAlC,MAAM,kBAA4B;;;;;ACCkH;AACjF;AAG5D,eAAee,qBAAqBA,CAACC,WAA8B,EAAkC;EAC1G,IAAIA,WAAW,CAACvB,cAAc,KAAKJ,sBAAgB,CAACK,MAAM,EAAE;IAC1D,MAAM;MAAEuB;IAAyB,CAAC,GAAG,MAAM,8FAAmC;IAC9E,OAAO,IAAIA,wBAAwB,CAAC;MAAEC,MAAM,EAAE;QAAEF;MAAY;IAAE,CAAC,CAAC;EAClE,CAAC,MAAM,IAAIA,WAAW,CAACvB,cAAc,KAAKJ,sBAAgB,CAACe,MAAM,EAAE;IACjE,MAAM;MAAEe;IAA2B,CAAC,GAAG,MAAM,6FAAqC;IAClF,OAAO,IAAIA,0BAA0B,CAAC;MAAED,MAAM,EAAE;QAAEF;MAAY;IAAE,CAAC,CAAC;EACpE,CAAC,MAAM,IAAIA,WAAW,CAACvB,cAAc,KAAKJ,sBAAgB,CAACsB,KAAK,EAAE;IAChE;IACA;IACA,OAAO,IAAIG,sDAAwB,CAAC;MAAEI,MAAM,EAAE;QAAEF;MAAY;IAAE,CAAC,CAAC;EAClE;EACA,MAAM,IAAII,KAAK,CAAE,2BAA0BJ,WAAW,CAACvB,cAAe,mCAAkC,CAAC;AAC3G;;AAEA;AACO,MAAM4B,uBAAuB,GAAG,MAAOC,MAO7C,IAAiC;EAChC,MAAM;IAAEC,IAAI;IAAEC,iBAAiB;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGN,MAAM;EAC5F,IAAI,CAACO,MAAM,CAACC,MAAM,CAACzC,sBAAgB,CAAC,CAAC0C,QAAQ,CAACP,iBAAiB,CAAC/B,cAAc,CAAC,EAC7E,MAAM,IAAI2B,KAAK,CAAE,2BAA0BI,iBAAiB,CAAC/B,cAAe,EAAC,CAAC;EAChF,MAAMuC,gBAAgB,GAAAC,uBAAA,CAAAA,uBAAA,KAChBrB,wBAAc,CAACY,iBAAiB,CAAC/B,cAAc,EAAE+B,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEU,OAAO,CAAC,GAC5EV,iBAAiB,IAAI,CAAC,CAAC,CAC5B;EACD,IAAID,IAAI,KAAKV,qBAAe,CAACR,SAAS,EAAE;IACtC,MAAM;MAAE8B;IAAmB,CAAC,GAAG,MAAM,8FAAqC;IAC1E,MAAMC,OAAO,GAAG,IAAID,kBAAkB,CAAC;MAAEnB,WAAW,EAAEgB,gBAAgB;MAAEP,QAAQ;MAAEC,WAAW;MAAEC;IAAgB,CAAC,CAAC;IACjH,OAAOS,OAAO;EAChB,CAAC,MAAM,IAAIb,IAAI,KAAKV,qBAAe,CAACjB,YAAY,EAAE;IAChD,MAAM;MAAEyC;IAAoB,CAAC,GAAG,MAAM,4FAAwC;IAC9E,MAAMD,OAAO,GAAG,IAAIC,mBAAmB,CAAC;MAAErB,WAAW,EAAEgB,gBAAgB;MAAEP,QAAQ;MAAEC,WAAW;MAAEC;IAAgB,CAAC,CAAC;IAClH,OAAOS,OAAO;EAChB,CAAC,MAAM,IAAIb,IAAI,KAAKV,qBAAe,CAACP,QAAQ,EAAE;IAC5C,MAAM;MAAEgC;IAAgB,CAAC,GAAG,MAAM,8FAAoC;IACtE,MAAMF,OAAO,GAAG,IAAIE,eAAe,CAAC;MAAEtB,WAAW,EAAEgB,gBAAgB;MAAEP,QAAQ;MAAEC,WAAW;MAAEC;IAAgB,CAAC,CAAC;IAC9G,OAAOS,OAAO;EAChB,CAAC,MAAM,IAAIb,IAAI,KAAKV,qBAAe,CAACX,OAAO,EAAE;IAC3C,MAAM;MAAEqC;IAAe,CAAC,GAAG,MAAM,8FAAmC;IACpE,MAAMH,OAAO,GAAG,IAAIG,cAAc,CAAC;MAAEvB,WAAW,EAAEgB,gBAAgB;MAAEP,QAAQ;MAAEC,WAAW;MAAEC;IAAgB,CAAC,CAAC;IAC7G,OAAOS,OAAO;EAChB,CAAC,MAAM,IAAIb,IAAI,KAAKV,qBAAe,CAACN,iBAAiB,EAAE;IACrD,MAAM;MAAEiC;IAAuB,CAAC,GAAG,MAAM,8FAA6C;IACtF,MAAMJ,OAAO,GAAG,IAAII,sBAAsB,CAAC;MACzCxB,WAAW,EAAEgB,gBAAgB;MAC7BP,QAAQ;MACRC,WAAW;MACXC,eAAe;MACfc,eAAe,EAAE;QACfC,wBAAwB,EAAE;UACxB;UACAC,SAAS,EAAE;QACb;MACF;IACF,CAAC,CAAC;IACF,OAAOP,OAAO;EAChB,CAAC,MAAM,IAAIb,IAAI,KAAKV,qBAAe,CAACZ,SAAS,EAAE;IAC7C,MAAM;MAAE2C,gBAAgB;MAAEC;IAA2B,CAAC,GAAG,MAAM,8FAAqC;IAEpG,MAAMC,kBAAyC,GAAG,MAAM/B,qBAAqB,CAACiB,gBAAgB,CAAC;IAE/F,MAAMe,cAAc,GAAGF,0BAA0B,CAAC,CAAC;IACnD,MAAMT,OAAO,GAAG,IAAIQ,gBAAgB,CAAAX,uBAAA,CAAAA,uBAAA,KAC/Bc,cAAc;MACjBtB,QAAQ;MACRT,WAAW,EAAAiB,uBAAA,KAAOD,gBAAgB,CAAE;MACpCS,eAAe,EAAAR,uBAAA,CAAAA,uBAAA,KAAQc,cAAc,CAACN,eAAe;QAAuBhB,QAAQ;QAAEuB,OAAO,EAAErB,eAAe;QAAEsB,UAAU,EAAErB;MAAQ,EAAE;MACtIF,WAAW;MACXC,eAAe;MACfmB;IAAkB,EACnB,CAAC;IACF,OAAOV,OAAO;EAChB;EACA,MAAM,IAAIhB,KAAK,CAAC,6BAA6B,CAAC;AAChD,CAAC;;;;ACxEuB;AACqC;AACgB;AAEyD;AAQpH;AACyD;AAmBpE,MAAMyC,QAAQ,SAASN,wCAAe,CAA2B;EAOtEO,WAAWA,CAACC,OAAwB,EAAE;IACpC,KAAK,CAACA,OAAO,CAAC;IAACC,wBAAA;IAAAA,wBAAA;IAAAA,wBAAA,sBAH0B7D,wCAAyB;IAIlE,IAAI,CAAC4D,OAAO,GAAA9B,uBAAA,KAAQ8B,OAAO,CAAE;IAC7B,MAAME,mBAAmB,GAAG,IAAI,CAACF,OAAO,CAAC/C,WAAW;IACpD,IAAIiD,mBAAmB,CAACxE,cAAc,KAAKJ,sBAAgB,CAACK,MAAM,EAAE;MAClE,IAAIqE,OAAO,CAACG,QAAQ,KAAK,QAAQ,EAAE;QACjC;QACA,IAAI,CAACC,WAAW,GAAG3D,6CAA8B;MACnD,CAAC,MAAM;QACL;QACA,IAAI,CAAC2D,WAAW,GAAG3E,2CAA4B;MACjD;IACF,CAAC,MAAM,IAAIyE,mBAAmB,CAACxE,cAAc,KAAKJ,sBAAgB,CAACe,MAAM,EAAE;MACzE,IAAI2D,OAAO,CAACG,QAAQ,KAAK,QAAQ,EAAE;QACjC;QACA,IAAI,CAACC,WAAW,GAAG1D,0CAA2B;MAChD,CAAC,MAAM;QACL;QACA,IAAI,CAAC0D,WAAW,GAAGhE,wCAAyB;MAC9C;IACF,CAAC,MAAM,IAAI8D,mBAAmB,CAACxE,cAAc,KAAKJ,sBAAgB,CAACsB,KAAK,EAAE;MACxE,IAAI,CAACwD,WAAW,GAAGzD,sCAAuB;IAC5C,CAAC,MAAM;MACL,MAAM,IAAIU,KAAK,CAAE,oCAAmC6C,mBAAmB,CAACxE,cAAe,EAAC,CAAC;IAC3F;IAEA,IAAI,CAAC,IAAI,CAACsE,OAAO,CAACnC,QAAQ,EAAE,IAAI,CAACmC,OAAO,CAACnC,QAAQ,GAAG,CAAC,CAAC;IACtD,IAAI,CAAC,IAAI,CAACmC,OAAO,CAACnC,QAAQ,CAACwC,eAAe,EAAE,IAAI,CAACL,OAAO,CAACnC,QAAQ,CAACwC,eAAe,GAAGX,sCAAe,CAAC,IAAI,CAACM,OAAO,CAACnC,QAAQ,CAACwC,eAAe,CAAC;IAC1I,IAAI,CAAC,IAAI,CAACL,OAAO,CAACnC,QAAQ,CAACyC,IAAI,EAAE,IAAI,CAACN,OAAO,CAACnC,QAAQ,CAACyC,IAAI,GAAG,MAAM;IAEpE,IAAI,CAACC,UAAU,GAAG,IAAIX,6BAAU,CAAA1B,uBAAA,CAAAA,uBAAA,KAC3B,IAAI,CAAC8B,OAAO,CAACnC,QAAQ;MACxB2C,eAAe,EAAE;IAAI,EACtB,CAAC;IACF,IAAI,CAACC,2BAA2B,CAAC,CAAC;EACpC;EAEA,MAAaC,SAASA,CAACnD,MAAmE,EAAiB;IACzG,KAAK,CAACoD,qBAAqB,CAAC,CAAC;IAC7B,MAAM,IAAI,CAACJ,UAAU,CAACG,SAAS,CAAC,CAAC;IACjC,MAAMR,mBAAmB,GAAG,IAAI,CAACF,OAAO,CAAC/C,WAAW;;IAEpD;IACA,MAAM2D,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG/C,MAAM,CAACgD,IAAI,CAAC,IAAI,CAACV,WAAW,CAACxE,QAAQ,IAAI,CAAC,CAAC,CAAC,EAAE,GAAGkC,MAAM,CAACgD,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IAExH,MAAMC,4BAA4B,GAAGJ,WAAW,CAACK,GAAG,CAAC,MAAOC,WAAW,IAAK;MAAA,IAAAC,qBAAA,EAAAC,mBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MAC1E;MACA,IAAIC,aAAa,GAAG,EAAAJ,qBAAA,OAAI,CAACf,WAAW,CAACxE,QAAQ,cAAAuF,qBAAA,uBAAzBA,qBAAA,CAA4BD,WAAW,CAAC,KAAI;QAC9DpF,KAAK,EAAEoF,WAAW;QAClBnF,WAAW,EAAE,IAAI;QACjBC,YAAY,EAAE,IAAI;QAClBC,aAAa,EAAE;MACjB,CAAC;;MAED;MACA,IAAIsB,MAAM,aAANA,MAAM,gBAAA6D,mBAAA,GAAN7D,MAAM,CAAE6C,WAAW,cAAAgB,mBAAA,eAAnBA,mBAAA,CAAsBF,WAAW,CAAC,EAAE;QACtCK,aAAa,GAAArD,uBAAA,CAAAA,uBAAA,KAAQqD,aAAa,GAAKhE,MAAM,CAAC6C,WAAW,CAACc,WAAW,CAAC,CAAE;MAC1E;MACC,IAAI,CAACd,WAAW,CAACxE,QAAQ,CAA8CsF,WAAW,CAAC,GAAGK,aAA4B;;MAEnH;MACA,MAAMlD,OAAO,GAAG,IAAI,CAAC0C,cAAc,CAACG,WAAW,CAAC;MAChD5B,SAAG,CAACkC,KAAK,CAAC,gBAAgB,EAAEN,WAAW,GAAAG,sBAAA,GAAE,IAAI,CAACjB,WAAW,CAACxE,QAAQ,cAAAyF,sBAAA,uBAAzBA,sBAAA,CAA4BH,WAAW,CAAC,CAACnF,WAAW,EAAEsC,OAAO,CAAC;;MAEvG;MACA;MACA,IAAI,CAACA,OAAO,KAAAiD,sBAAA,GAAI,IAAI,CAAClB,WAAW,CAACxE,QAAQ,cAAA0F,sBAAA,eAAzBA,sBAAA,CAA4BJ,WAAW,CAAC,CAACnF,WAAW,EAAE;QACpE;QACA,MAAM0F,EAAE,GAAG,MAAMnE,uBAAuB,CAAC;UACvCE,IAAI,EAAE0D,WAAW;UACjBzD,iBAAiB,EAAE,IAAI,CAACuC,OAAO,CAAC/C,WAAW;UAC3CS,QAAQ,EAAE,IAAI,CAACsC,OAAO,CAACtC,QAAQ;UAC/BC,WAAW,EAAE,IAAI,CAACqC,OAAO,CAACrC,WAAW;UACrCC,eAAe,EAAE,IAAI,CAACoC,OAAO,CAACpC,eAAe;UAC7CC,QAAQ,EAAE,IAAI,CAACmC,OAAO,CAACnC;QACzB,CAAC,CAAC;QAEF,IAAI,CAACkD,cAAc,CAACG,WAAW,CAAC,GAAGO,EAAE;QACrC,OAAOP,WAAW;MACpB,CAAC,MAAM,IAAI,CAAA7C,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqD,IAAI,MAAKvC,sBAAgB,CAACwC,MAAM,IAAI,CAAAtD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqD,IAAI,MAAKvC,sBAAgB,CAACyC,QAAQ,IAAIV,WAAW,KAAK,IAAI,CAACW,aAAa,EAAE;QAAA,IAAAC,sBAAA;QACzI,IAAI,GAAAA,sBAAA,GAAC,IAAI,CAAC1B,WAAW,CAACxE,QAAQ,cAAAkG,sBAAA,eAAzBA,sBAAA,CAA4BZ,WAAW,CAAC,CAACnF,WAAW,GAAE;QAC3D;QACA;QACA,IAAI,CAACgF,cAAc,CAACG,WAAW,CAAC,CAACa,kBAAkB,CAAC;UAClDrE,QAAQ,EAAE,IAAI,CAACsC,OAAO,CAACtC,QAAQ;UAC/BC,WAAW,EAAE,IAAI,CAACqC,OAAO,CAACrC,WAAW;UACrCC,eAAe,EAAE,IAAI,CAACoC,OAAO,CAACpC;QAChC,CAAC,CAAC;;QAEF;QACA;QACA,IAAI,CAACS,OAAO,CAAC2D,gBAAgB,EAAE;UAAA,IAAAC,qBAAA;UAC7B,MAAMhF,WAAW,GAAAiB,uBAAA,CAAAA,uBAAA,KACZrB,wBAAc,CAACqD,mBAAmB,CAACxE,cAAc,GAAAuG,qBAAA,GAAE,IAAI,CAACC,WAAW,CAACjF,WAAW,cAAAgF,qBAAA,uBAA5BA,qBAAA,CAA8B9D,OAAO,CAAC,GACzF,IAAI,CAAC+D,WAAW,CAACjF,WAAW,CACX;UACtB,IAAI,CAAC8D,cAAc,CAACG,WAAW,CAAC,CAACa,kBAAkB,CAAC;YAAE9E;UAAY,CAAC,CAAC;QACtE;QAEA,IAAIiE,WAAW,KAAKpE,qBAAe,CAACZ,SAAS,EAAE;UAC7C,MAAMiG,gBAAgB,GAAG,IAAI,CAACpB,cAAc,CAACG,WAAW,CAAqB;UAC7E,IAAI,CAACiB,gBAAgB,CAACpD,kBAAkB,EAAE;YACxC,MAAMqD,yBAAyB,GAAG,MAAMpF,qBAAqB,CAACmF,gBAAgB,CAACH,gBAAqC,CAAC;YACrHG,gBAAgB,CAACJ,kBAAkB,CAAC;cAAEhD,kBAAkB,EAAEqD,yBAAyB;cAAElD,UAAU,EAAE,IAAI,CAACc,OAAO,CAACnC;YAAS,CAAC,CAAC;UAC3H;QACF;QAEA,OAAOqD,WAAW;MACpB;IACF,CAAC,CAAC;IAEF,MAAMmB,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACvB,4BAA4B,CAAC;IACpE,MAAMwB,eAAe,GAAG1E,MAAM,CAACC,MAAM,CAAC,IAAI,CAACgD,cAAc,CAAC,CAAC0B,IAAI,CAAEpE,OAAO,IAAK;MAAA,IAAAqE,sBAAA,EAAAC,sBAAA,EAAAC,aAAA;MAC3E,IAAIvE,OAAO,CAACqD,IAAI,KAAKvC,sBAAgB,CAACwC,MAAM,EAAE,OAAO,KAAK;MAC1D,IAAI,EAAAe,sBAAA,OAAI,CAACtC,WAAW,CAACxE,QAAQ,cAAA8G,sBAAA,gBAAAA,sBAAA,GAAzBA,sBAAA,CAA4BrE,OAAO,CAACb,IAAI,CAAC,cAAAkF,sBAAA,uBAAzCA,sBAAA,CAA2C3G,WAAW,MAAK,IAAI,EAAE,OAAO,KAAK;MACjF,IAAI,GAAA4G,sBAAA,GAAC,IAAI,CAACvC,WAAW,CAACxE,QAAQ,cAAA+G,sBAAA,gBAAAA,sBAAA,GAAzBA,sBAAA,CAA4BtE,OAAO,CAACb,IAAI,CAAC,cAAAmF,sBAAA,eAAzCA,sBAAA,CAA2CE,YAAY,GAAE,OAAO,IAAI;MACzE,MAAMC,kBAAkB,GAAGrD,6CAAsB,CAC/CpB,OAAO,CAACb,IAAI,GAAAoF,aAAA,GACX,IAAI,CAACxC,WAAW,CAACxE,QAAQ,CAA8CyC,OAAO,CAACb,IAAI,CAAC,cAAAoF,aAAA,uBAArFA,aAAA,CAAuFC,YACzF,CAAC;MACD,IAAI/E,MAAM,CAACC,MAAM,CAAC+E,kBAAkB,CAAC,CAACL,IAAI,CAAEM,MAAkD,IAAKA,MAAM,CAAChH,WAAW,CAAC,EAAE,OAAO,IAAI;MACnI,OAAO,KAAK;IACd,CAAC,CAAC;IACFuD,SAAG,CAACkC,KAAK,CAACgB,eAAe,EAAE,IAAI,CAACzB,cAAc,EAAEsB,YAAY,EAAE,iBAAiB,CAAC;;IAEhF;IACA,MAAMW,YAAY,GAAGX,YAAY,CAACpB,GAAG,CAAC,MAAOC,WAAW,IAAK;MAC3D,IAAI,CAACA,WAAW,EAAE;MAClB,IAAI;QACF,MAAM7C,OAAO,GAAG,IAAI,CAAC0C,cAAc,CAACG,WAAW,CAAC;QAChD;QACA,IAAI,IAAI,CAACW,aAAa,KAAKX,WAAW,IAAI7C,OAAO,CAACqD,IAAI,KAAKvC,sBAAgB,CAACyC,QAAQ,EAAE;UACpF;QACF;QACA;QACA;QACA;QACA,IAAI,CAACqB,wBAAwB,CAAC5E,OAAO,CAAC;QACtC,IAAIA,OAAO,CAAC6E,MAAM,KAAK7D,oBAAc,CAAC8D,SAAS,EAAE,MAAM9E,OAAO,CAAC+E,IAAI,CAAC;UAAEC,WAAW,EAAE,IAAI,CAACxB,aAAa,KAAKX;QAAY,CAAC,CAAC;QACxH;QACA;QACA,IAAI7C,OAAO,CAACqD,IAAI,KAAKvC,sBAAgB,CAACwC,MAAM,EAAE;UAC5C,IAAI,CAAC2B,qBAAqB,CAACpC,WAAW,CAAC;QACzC;MACF,CAAC,CAAC,OAAOqC,KAAK,EAAE;QACdjE,SAAG,CAACiE,KAAK,CAACA,KAAK,EAAE,kCAAkC,CAAC;MACtD;IACF,CAAC,CAAC;IAEF,IAAI,CAACC,kBAAkB,GAAG,MAAMjE,gDAAkB,CAACkE,mBAAmB,CAAC;MAAExG,WAAW,EAAE,IAAI,CAACiF,WAAW,CAACjF;IAAiC,CAAC,CAAC;IAC1I,IAAI,CAACiG,MAAM,GAAG7D,oBAAc,CAACqE,KAAK;IAClC,MAAMpB,OAAO,CAACC,GAAG,CAACS,YAAY,CAAC;IAE/B,MAAMW,kBAAkB,GAAG/C,WAAW,CAAC6B,IAAI,CAAEvB,WAAW,IAAK;MAAA,IAAA0C,qBAAA,EAAAC,sBAAA;MAC3D,OAAO,EAAAD,qBAAA,OAAI,CAAC7C,cAAc,CAACG,WAAW,CAAC,cAAA0C,qBAAA,uBAAhCA,qBAAA,CAAkClC,IAAI,MAAKvC,sBAAgB,CAACyC,QAAQ,MAAAiC,sBAAA,GAAI,IAAI,CAACzD,WAAW,CAACxE,QAAQ,cAAAiI,sBAAA,uBAAzBA,sBAAA,CAA4B3C,WAAW,CAAC,CAACnF,WAAW;IACrI,CAAC,CAAC;IAEF,IAAI4H,kBAAkB,EAAE;MACtB,IAAI,CAACpD,UAAU,CAACuD,2BAA2B,CAAC,CAAC;IAC/C;;IAEA;IACA;IACA,IAAI,CAACtB,eAAe,IAAImB,kBAAkB,EAAE;MAC1C;MACA,MAAM,IAAI,CAACI,0BAA0B,CAAC,KAAK,EAAE;QAAEC,uBAAuB,EAAE;MAAK,CAAC,CAAC;IACjF;EACF;EAEA,MAAaC,OAAOA,CAAA,EAA8B;IAChD;IACA;IACA,IAAI,IAAI,CAACC,oBAAoB,IAAI,IAAI,CAAChB,MAAM,KAAK7D,oBAAc,CAAC8E,SAAS,IAAI,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI,CAACA,QAAQ;IAChH,IAAI,CAAC7D,UAAU,CAAC8D,IAAI,CAAC,CAAC;IACtB,OAAO,IAAI/B,OAAO,CAAC,CAACgC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAACC,IAAI,CAACpF,oBAAc,CAAC+E,SAAS,EAAE,MAAM;QACxC,OAAOG,OAAO,CAAC,IAAI,CAACF,QAAQ,CAAC;MAC/B,CAAC,CAAC;MACF,IAAI,CAACI,IAAI,CAACpF,oBAAc,CAACqF,OAAO,EAAGC,GAAY,IAAK;QAClD,OAAOH,MAAM,CAACG,GAAG,CAAC;MACpB,CAAC,CAAC;MACF,IAAI,CAACF,IAAI,CAAC7E,qCAAkB,CAACgF,gBAAgB,EAAGC,UAAmB,IAAK;QACtE;QACA,IAAI,CAACA,UAAU,IAAI,IAAI,CAAC1B,MAAM,KAAK7D,oBAAc,CAAC8E,SAAS,EAAE;UAC3D,OAAOI,MAAM,CAAC,IAAIlH,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACnD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,MAAc0G,0BAA0BA,CAACc,0BAAmC,EAAE7E,OAA8C,EAAiB;IAC3I,IAAI6E,0BAA0B,EAAE;IAChC,MAAMC,cAAiD,GAAG,CAAC,CAAC;IAC5DhH,MAAM,CAACgD,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAACgE,OAAO,CAAC,MAAO7D,WAAW,IAAK;MAC9D,MAAM7C,OAAO,GAAG,IAAI,CAAC0C,cAAc,CAACG,WAAW,CAAC;MAChD,IAAI,CAAA7C,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqD,IAAI,MAAKvC,sBAAgB,CAACyC,QAAQ,EAAE;QAC/CtC,SAAG,CAACkC,KAAK,CAAC,sBAAsB,EAAE,IAAI,CAACK,aAAa,EAAEX,WAAW,CAAC;QAClE,IAAI,CAAC+B,wBAAwB,CAAC5E,OAAO,CAAC;QACtC;QACA,IAAI,IAAI,CAACwD,aAAa,KAAKX,WAAW,EAAE;UACtC;QACF;QACA,IAAI7C,OAAO,CAAC6E,MAAM,KAAK7D,oBAAc,CAAC8D,SAAS,EAAE;UAC/C,MAAM9E,OAAO,CACV+E,IAAI,CAAC;YAAEC,WAAW,EAAE,IAAI,CAACxB,aAAa,KAAKX;UAAY,CAAC,CAAC,CACzD8D,IAAI,CAAC,MAAM;YACVF,cAAc,CAAC5D,WAAW,CAAC,GAAI,IAAI,CAACd,WAAW,CAACxE,QAAQ,CAA8CsF,WAAW,CAAC;YAClH,IAAI,CAACX,UAAU,CAAC0E,eAAe,CAACH,cAAc,EAAE;cAAEd,uBAAuB,EAAE,CAAC,EAAChE,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEgE,uBAAuB;YAAC,CAAC,CAAC;YAChH,OAAOkB,SAAS;UAClB,CAAC,CAAC,CACDC,KAAK,CAAE5B,KAAK,IAAKjE,SAAG,CAACiE,KAAK,CAACA,KAAK,EAAE,kCAAkC,CAAC,CAAC;QAC3E,CAAC,MAAM,IAAIlF,OAAO,CAAC6E,MAAM,KAAK7D,oBAAc,CAACqE,KAAK,EAAE;UAClDoB,cAAc,CAAC5D,WAAW,CAAC,GAAI,IAAI,CAACd,WAAW,CAACxE,QAAQ,CAA8CsF,WAAW,CAAC;UAClH,IAAI,CAACX,UAAU,CAAC0E,eAAe,CAACH,cAAc,EAAE;YAAEd,uBAAuB,EAAE,CAAC,EAAChE,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEgE,uBAAuB;UAAC,CAAC,CAAC;QAClH;MACF;IACF,CAAC,CAAC;EACJ;EAEQV,qBAAqBA,CAACpC,WAAmB,EAAQ;IACvD5B,SAAG,CAAC8F,IAAI,CAAC,oBAAoB,EAAElE,WAAW,CAAC;IAC3C,IAAI,IAAI,CAACH,cAAc,CAACG,WAAW,CAAC,CAACQ,IAAI,KAAKvC,sBAAgB,CAACwC,MAAM,EAAE;MAAA,IAAA0D,YAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACrE,IAAI,CAACjF,UAAU,CAACkF,eAAe,CAC7BvE,WAAW,EACXzB,6CAAsB,CAACyB,WAAW,GAAAmE,YAAA,GAAG,IAAI,CAACjF,WAAW,CAACxE,QAAQ,CAA8CsF,WAAW,CAAC,cAAAmE,YAAA,uBAApFA,YAAA,CAAsFxC,YAAY,CAAC,EACvI,EAAAyC,qBAAA,OAAI,CAACtF,OAAO,CAACnC,QAAQ,cAAAyH,qBAAA,uBAArBA,qBAAA,CAAuBI,iBAAiB,KAAI7F,sCAAmB,EAAA3B,uBAAA,CAAAA,uBAAA,KAE1D,IAAI,CAAC8B,OAAO,CAACnC,QAAQ;QACxB8H,YAAY,EAAE,EAAAJ,sBAAA,OAAI,CAACvF,OAAO,CAACnC,QAAQ,cAAA0H,sBAAA,uBAArBA,sBAAA,CAAuBI,YAAY,KAAI,CAAC;QACtDC,aAAa,EAAE,EAAAJ,sBAAA,OAAI,CAACxF,OAAO,CAACnC,QAAQ,cAAA2H,sBAAA,uBAArBA,sBAAA,CAAuBI,aAAa,KAAI;MAAa,EAExE,CAAC;IACH;EACF;EAEQnF,2BAA2BA,CAAA,EAAS;IAC1C,IAAI,CAACF,UAAU,CAACsF,EAAE,CAAClG,qCAAkB,CAACmG,KAAK,EAAE,MAAOvI,MAA8D,IAAK;MACrH,IAAI;QACF,MAAM,IAAI,CAACwI,SAAS,CAAUxI,MAAM,CAACc,OAAO,EAAEd,MAAM,CAACyI,WAAW,CAAC;MACnE,CAAC,CAAC,OAAOzC,KAAK,EAAE;QACdjE,SAAG,CAACiE,KAAK,CAAE,sCAAqChG,MAAM,CAACc,OAAQ,EAAC,EAAEkF,KAAK,CAAC;MAC1E;IACF,CAAC,CAAC;IACF,IAAI,CAAChD,UAAU,CAACsF,EAAE,CAAClG,qCAAkB,CAACsG,qBAAqB,EAAE,MAAO1I,MAA+C,IAAK;MACtH,MAAM,IAAI,CAACwG,0BAA0B,CAACxG,MAAM,CAACsH,0BAA0B,CAAC;IAC1E,CAAC,CAAC;IACF,IAAI,CAACtE,UAAU,CAACsF,EAAE,CAAClG,qCAAkB,CAACuG,UAAU,EAAE,YAAY;MAC5D,IAAI;QACF,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MACrB,CAAC,CAAC,OAAO5C,KAAK,EAAE;QACdjE,SAAG,CAACiE,KAAK,CAAE,2BAA0B,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC;IACF,IAAI,CAAChD,UAAU,CAACsF,EAAE,CAAClG,qCAAkB,CAACgF,gBAAgB,EAAE,MAAOC,UAAmB,IAAK;MACrFtF,SAAG,CAACkC,KAAK,CAAC,wBAAwB,EAAEoD,UAAU,CAAC;MAC/C,IAAI,CAACwB,IAAI,CAACzG,qCAAkB,CAACgF,gBAAgB,EAAEC,UAAU,CAAC;MAC1D,MAAMvG,OAAO,GAAG,IAAI,CAAC0C,cAAc,CAACjE,qBAAe,CAACN,iBAAiB,CAAC;MACtE,IAAI6B,OAAO,EAAE;QACX,MAAMgI,mBAAmB,GAAGhI,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE6E,MAAM;QAC3C5D,SAAG,CAACkC,KAAK,CAAC,8BAA8B,EAAEoD,UAAU,EAAEyB,mBAAmB,CAAC;QAC1E,IAAIzB,UAAU,KAAKyB,mBAAmB,KAAKhH,oBAAc,CAACqE,KAAK,IAAI2C,mBAAmB,KAAKhH,oBAAc,CAACiH,UAAU,CAAC,EAAE;UACrHhH,SAAG,CAACkC,KAAK,CAAC,uBAAuB,CAAC;;UAElC;UACA,IAAI;YACFnD,OAAO,CAAC4F,OAAO,CAAC,CAAC;UACnB,CAAC,CAAC,OAAOV,KAAK,EAAE;YACdjE,SAAG,CAACiE,KAAK,CAAE,qDAAoD,EAAEA,KAAK,CAAC;UACzE;QACF;QACA,IACE,CAACqB,UAAU,IACX,IAAI,CAAC1B,MAAM,KAAK7D,oBAAc,CAAC8E,SAAS,KACvCkC,mBAAmB,KAAKhH,oBAAc,CAACqE,KAAK,IAAI2C,mBAAmB,KAAKhH,oBAAc,CAACiH,UAAU,CAAC,EACnG;UACAhH,SAAG,CAACkC,KAAK,CAAC,sEAAsE,CAAC;UACjFnD,OAAO,CAAC6E,MAAM,GAAG7D,oBAAc,CAACqE,KAAK;QACvC;MACF;IACF,CAAC,CAAC;EACJ;AACF;;;;;;;;AC7UA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNyB;AACG","sources":["webpack://@web3auth/modal/./src/config.ts","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/base-provider\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/no-modal\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/ui\"","webpack://@web3auth/modal/./src/default.ts","webpack://@web3auth/modal/./src/modalManager.ts","webpack://@web3auth/modal/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/ethereum-provider\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/metamask-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/openlogin-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/phantom-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/torus-evm-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/torus-solana-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/wallet-connect-v2-adapter\"","webpack://@web3auth/modal/webpack/bootstrap","webpack://@web3auth/modal/webpack/runtime/compat get default export","webpack://@web3auth/modal/webpack/runtime/create fake namespace object","webpack://@web3auth/modal/webpack/runtime/define property getters","webpack://@web3auth/modal/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/modal/webpack/runtime/make namespace object","webpack://@web3auth/modal/./src/index.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, EVM_ADAPTERS, SOLANA_ADAPTERS } from \"@web3auth/base\";\n\nimport { AdaptersModalConfig } from \"./interface\";\n\nexport const defaultSolanaDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V2]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultSolanaWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultOtherModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.OTHER,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectSpread2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-provider\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/no-modal\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ui\");","import type { OPENLOGIN_NETWORK_TYPE, OpenLoginOptions } from \"@toruslabs/openlogin-utils\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, IAdapter, IBaseProvider, WALLET_ADAPTER_TYPE, WALLET_ADAPTERS } from \"@web3auth/base\";\nimport { CommonPrivateKeyProvider } from \"@web3auth/base-provider\";\nimport { UIConfig } from \"@web3auth/ui\";\n\nexport async function getPrivateKeyProvider(chainConfig: CustomChainConfig): Promise<IBaseProvider<string>> {\n  if (chainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    const { SolanaPrivateKeyProvider } = await import(\"@web3auth/solana-provider\");\n    return new SolanaPrivateKeyProvider({ config: { chainConfig } });\n  } else if (chainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    const { EthereumPrivateKeyProvider } = await import(\"@web3auth/ethereum-provider\");\n    return new EthereumPrivateKeyProvider({ config: { chainConfig } });\n  } else if (chainConfig.chainNamespace === CHAIN_NAMESPACES.OTHER) {\n    // Modal doesn't support ripple provider\n    // Can always override this with a custom provider\n    return new CommonPrivateKeyProvider({ config: { chainConfig } });\n  }\n  throw new Error(`Invalid chainNamespace: ${chainConfig.chainNamespace} found while connecting to wallet`);\n}\n\n// warning: this function is not compatible with \"OTHER\" chain namespace.\nexport const getDefaultAdapterModule = async (params: {\n  name: WALLET_ADAPTER_TYPE;\n  clientId: string;\n  customChainConfig: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  sessionTime?: number;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n  uiConfig?: Omit<UIConfig, \"adapterListener\">;\n}): Promise<IAdapter<unknown>> => {\n  const { name, customChainConfig, clientId, sessionTime, web3AuthNetwork, uiConfig } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace))\n    throw new Error(`Invalid chainNamespace: ${customChainConfig.chainNamespace}`);\n  const finalChainConfig = {\n    ...(getChainConfig(customChainConfig.chainNamespace, customChainConfig?.chainId) as CustomChainConfig),\n    ...(customChainConfig || {}),\n  };\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const { TorusWalletAdapter } = await import(\"@web3auth/torus-evm-adapter\");\n    const adapter = new TorusWalletAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const { SolanaWalletAdapter } = await import(\"@web3auth/torus-solana-adapter\");\n    const adapter = new SolanaWalletAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const { MetamaskAdapter } = await import(\"@web3auth/metamask-adapter\");\n    const adapter = new MetamaskAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const { PhantomAdapter } = await import(\"@web3auth/phantom-adapter\");\n    const adapter = new PhantomAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V2) {\n    const { WalletConnectV2Adapter } = await import(\"@web3auth/wallet-connect-v2-adapter\");\n    const adapter = new WalletConnectV2Adapter({\n      chainConfig: finalChainConfig,\n      clientId,\n      sessionTime,\n      web3AuthNetwork,\n      adapterSettings: {\n        walletConnectInitOptions: {\n          // Using a default wallet connect project id for web3auth modal integration\n          projectId: \"d3c63f19f9582f8ba48e982057eb096b\",\n        },\n      },\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const { OpenloginAdapter, getOpenloginDefaultOptions } = await import(\"@web3auth/openlogin-adapter\");\n\n    const privateKeyProvider: IBaseProvider<string> = await getPrivateKeyProvider(finalChainConfig);\n\n    const defaultOptions = getOpenloginDefaultOptions();\n    const adapter = new OpenloginAdapter({\n      ...defaultOptions,\n      clientId,\n      chainConfig: { ...finalChainConfig },\n      adapterSettings: { ...(defaultOptions.adapterSettings as OpenLoginOptions), clientId, network: web3AuthNetwork, whiteLabel: uiConfig },\n      sessionTime,\n      web3AuthNetwork,\n      privateKeyProvider,\n    });\n    return adapter;\n  }\n  throw new Error(\"Invalid wallet adapter name\");\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  BaseAdapterConfig,\n  CHAIN_NAMESPACES,\n  CustomChainConfig,\n  getChainConfig,\n  IProvider,\n  log,\n  LoginMethodConfig,\n  WALLET_ADAPTER_TYPE,\n  WALLET_ADAPTERS,\n} from \"@web3auth/base\";\nimport { CommonJRPCProvider } from \"@web3auth/base-provider\";\nimport { Web3AuthNoModal, Web3AuthNoModalOptions } from \"@web3auth/no-modal\";\nimport type { OpenloginAdapter } from \"@web3auth/openlogin-adapter\";\nimport { getAdapterSocialLogins, getUserLanguage, LOGIN_MODAL_EVENTS, LoginModal, OPENLOGIN_PROVIDERS, UIConfig } from \"@web3auth/ui\";\n\nimport {\n  defaultEvmDappModalConfig,\n  defaultEvmWalletModalConfig,\n  defaultOtherModalConfig,\n  defaultSolanaDappModalConfig,\n  defaultSolanaWalletModalConfig,\n} from \"./config\";\nimport { getDefaultAdapterModule, getPrivateKeyProvider } from \"./default\";\nimport { AdaptersModalConfig, IWeb3AuthModal, ModalConfig } from \"./interface\";\n\nexport interface Web3AuthOptions extends Web3AuthNoModalOptions {\n  /**\n   * web3auth instance provides different adapters for different type of usages. If you are dapp and want to\n   * use external wallets like metamask, then you can use the `DAPP` authMode.\n   * If you are a wallet and only want to use you own wallet implementations along with openlogin,\n   * then you should use `WALLET` authMode.\n   *\n   * @defaultValue `DAPP`\n   */\n  authMode?: \"DAPP\" | \"WALLET\";\n  /**\n   * Config for configuring modal ui display properties\n   */\n  uiConfig?: Omit<UIConfig, \"adapterListener\">;\n}\n\nexport class Web3Auth extends Web3AuthNoModal implements IWeb3AuthModal {\n  public loginModal: LoginModal;\n\n  readonly options: Web3AuthOptions;\n\n  private modalConfig: AdaptersModalConfig = defaultEvmDappModalConfig;\n\n  constructor(options: Web3AuthOptions) {\n    super(options);\n    this.options = { ...options };\n    const providedChainConfig = this.options.chainConfig;\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.modalConfig = defaultOtherModalConfig;\n    } else {\n      throw new Error(`Invalid chainNamespace provided: ${providedChainConfig.chainNamespace}`);\n    }\n\n    if (!this.options.uiConfig) this.options.uiConfig = {};\n    if (!this.options.uiConfig.defaultLanguage) this.options.uiConfig.defaultLanguage = getUserLanguage(this.options.uiConfig.defaultLanguage);\n    if (!this.options.uiConfig.mode) this.options.uiConfig.mode = \"auto\";\n\n    this.loginModal = new LoginModal({\n      ...this.options.uiConfig,\n      adapterListener: this,\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  public async initModal(params?: { modalConfig?: Record<WALLET_ADAPTER_TYPE, ModalConfig> }): Promise<void> {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig;\n\n    // merge default adapters with the custom configured adapters.\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n\n    const adapterConfigurationPromises = allAdapters.map(async (adapterName) => {\n      // start with the default config of adapter.\n      let adapterConfig = this.modalConfig.adapters?.[adapterName] || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true,\n      };\n\n      // override the default config of adapter if some config is being provided by the user.\n      if (params?.modalConfig?.[adapterName]) {\n        adapterConfig = { ...adapterConfig, ...params.modalConfig[adapterName] };\n      }\n      (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName] = adapterConfig as ModalConfig;\n\n      // check if adapter is configured/added by user and exist in walletAdapters map.\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, this.modalConfig.adapters?.[adapterName].showOnModal, adapter);\n\n      // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n      if (!adapter && this.modalConfig.adapters?.[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId,\n          sessionTime: this.options.sessionTime,\n          web3AuthNetwork: this.options.web3AuthNetwork,\n          uiConfig: this.options.uiConfig,\n        });\n\n        this.walletAdapters[adapterName] = ad;\n        return adapterName;\n      } else if (adapter?.type === ADAPTER_CATEGORY.IN_APP || adapter?.type === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        if (!this.modalConfig.adapters?.[adapterName].showOnModal) return;\n        // add client id to adapter, same web3auth client id can be used in adapter.\n        // this id is being overridden if user is also passing client id in adapter's constructor.\n        this.walletAdapters[adapterName].setAdapterSettings({\n          clientId: this.options.clientId,\n          sessionTime: this.options.sessionTime,\n          web3AuthNetwork: this.options.web3AuthNetwork,\n        });\n\n        // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n        if (!adapter.chainConfigProxy) {\n          const chainConfig = {\n            ...getChainConfig(providedChainConfig.chainNamespace, this.coreOptions.chainConfig?.chainId),\n            ...this.coreOptions.chainConfig,\n          } as CustomChainConfig;\n          this.walletAdapters[adapterName].setAdapterSettings({ chainConfig });\n        }\n\n        if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n          const openloginAdapter = this.walletAdapters[adapterName] as OpenloginAdapter;\n          if (!openloginAdapter.privateKeyProvider) {\n            const currentPrivateKeyProvider = await getPrivateKeyProvider(openloginAdapter.chainConfigProxy as CustomChainConfig);\n            openloginAdapter.setAdapterSettings({ privateKeyProvider: currentPrivateKeyProvider, whiteLabel: this.options.uiConfig });\n          }\n        }\n\n        return adapterName;\n      }\n    });\n\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some((adapter) => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters?.[adapter.name]?.showOnModal !== true) return false;\n      if (!this.modalConfig.adapters?.[adapter.name]?.loginMethods) return true;\n      const mergedLoginMethods = getAdapterSocialLogins(\n        adapter.name,\n        (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapter.name]?.loginMethods\n      );\n      if (Object.values(mergedLoginMethods).some((method: LoginMethodConfig[keyof LoginMethodConfig]) => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, adapterNames, \"hasInAppWallets\");\n\n    // Now, initialize the adapters.\n    const initPromises = adapterNames.map(async (adapterName) => {\n      if (!adapterName) return;\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        // only initialize a external adapter here if it is a cached adapter.\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        }\n        // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({ autoConnect: this.cachedAdapter === adapterName });\n        // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    this.commonJRPCProvider = await CommonJRPCProvider.getProviderInstance({ chainConfig: this.coreOptions.chainConfig as CustomChainConfig });\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n\n    const hasExternalWallets = allAdapters.some((adapterName) => {\n      return this.walletAdapters[adapterName]?.type === ADAPTER_CATEGORY.EXTERNAL && this.modalConfig.adapters?.[adapterName].showOnModal;\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    }\n\n    // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, { showExternalWalletsOnly: true });\n    }\n  }\n\n  public async connect(): Promise<IProvider | null> {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.connectedAdapterName && this.status === ADAPTER_STATUS.CONNECTED && this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, (err: unknown) => {\n        return reject(err);\n      });\n      this.once(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, (visibility: boolean) => {\n        // modal is closed but user is not connected to any wallet.\n        if (!visibility && this.status !== ADAPTER_STATUS.CONNECTED) {\n          return reject(new Error(\"User closed the modal\"));\n        }\n      });\n    });\n  }\n\n  private async initExternalWalletAdapters(externalWalletsInitialized: boolean, options?: { showExternalWalletsOnly: boolean }): Promise<void> {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig: Record<string, BaseAdapterConfig> = {};\n    Object.keys(this.walletAdapters).forEach(async (adapterName) => {\n      const adapter = this.walletAdapters[adapterName];\n      if (adapter?.type === ADAPTER_CATEGORY.EXTERNAL) {\n        log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n        this.subscribeToAdapterEvents(adapter);\n        // we are not initializing cached adapter here as it is already being initialized in initModal before.\n        if (this.cachedAdapter === adapterName) {\n          return;\n        }\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) {\n          await adapter\n            .init({ autoConnect: this.cachedAdapter === adapterName })\n            .then(() => {\n              adaptersConfig[adapterName] = (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName];\n              this.loginModal.addWalletLogins(adaptersConfig, { showExternalWalletsOnly: !!options?.showExternalWalletsOnly });\n              return undefined;\n            })\n            .catch((error) => log.error(error, \"error while initializing adapter\"));\n        } else if (adapter.status === ADAPTER_STATUS.READY) {\n          adaptersConfig[adapterName] = (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName];\n          this.loginModal.addWalletLogins(adaptersConfig, { showExternalWalletsOnly: !!options?.showExternalWalletsOnly });\n        }\n      }\n    });\n  }\n\n  private initializeInAppWallet(adapterName: string): void {\n    log.info(\"adapterInitResults\", adapterName);\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      this.loginModal.addSocialLogins(\n        adapterName,\n        getAdapterSocialLogins(adapterName, (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName]?.loginMethods),\n        this.options.uiConfig?.loginMethodsOrder || OPENLOGIN_PROVIDERS,\n        {\n          ...this.options.uiConfig,\n          loginGridCol: this.options.uiConfig?.loginGridCol || 3,\n          primaryButton: this.options.uiConfig?.primaryButton || \"socialLogin\",\n        }\n      );\n    }\n  }\n\n  private subscribeToLoginModalEvents(): void {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async (params: { adapter: WALLET_ADAPTER_TYPE; loginParams: unknown }) => {\n      try {\n        await this.connectTo<unknown>(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(`Error while connecting to adapter: ${params.adapter}`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async (params: { externalWalletsInitialized: boolean }) => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(`Error while disconnecting`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async (visibility: boolean) => {\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const adapter = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V2];\n      if (adapter) {\n        const walletConnectStatus = adapter?.status;\n        log.debug(\"trying refreshing wc session\", visibility, walletConnectStatus);\n        if (visibility && (walletConnectStatus === ADAPTER_STATUS.READY || walletConnectStatus === ADAPTER_STATUS.CONNECTING)) {\n          log.debug(\"refreshing wc session\");\n\n          // refreshing session for wallet connect whenever modal is opened.\n          try {\n            adapter.connect();\n          } catch (error) {\n            log.error(`Error while disconnecting to wallet connect in core`, error);\n          }\n        }\n        if (\n          !visibility &&\n          this.status === ADAPTER_STATUS.CONNECTED &&\n          (walletConnectStatus === ADAPTER_STATUS.READY || walletConnectStatus === ADAPTER_STATUS.CONNECTING)\n        ) {\n          log.debug(\"this stops wc adapter from trying to reconnect once proposal expires\");\n          adapter.status = ADAPTER_STATUS.READY;\n        }\n      }\n    });\n  }\n}\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@web3auth/ethereum-provider\");","module.exports = require(\"@web3auth/metamask-adapter\");","module.exports = require(\"@web3auth/openlogin-adapter\");","module.exports = require(\"@web3auth/phantom-adapter\");","module.exports = require(\"@web3auth/solana-provider\");","module.exports = require(\"@web3auth/torus-evm-adapter\");","module.exports = require(\"@web3auth/torus-solana-adapter\");","module.exports = require(\"@web3auth/wallet-connect-v2-adapter\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./modalManager\";\n"],"names":["CHAIN_NAMESPACES","EVM_ADAPTERS","SOLANA_ADAPTERS","defaultSolanaDappModalConfig","chainNamespace","SOLANA","adapters","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","TORUS_EVM","METAMASK","WALLET_CONNECT_V2","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","defaultOtherModalConfig","OTHER","getChainConfig","WALLET_ADAPTERS","CommonPrivateKeyProvider","getPrivateKeyProvider","chainConfig","SolanaPrivateKeyProvider","config","EthereumPrivateKeyProvider","Error","getDefaultAdapterModule","params","name","customChainConfig","clientId","sessionTime","web3AuthNetwork","uiConfig","Object","values","includes","finalChainConfig","_objectSpread","chainId","TorusWalletAdapter","adapter","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV2Adapter","adapterSettings","walletConnectInitOptions","projectId","OpenloginAdapter","getOpenloginDefaultOptions","privateKeyProvider","defaultOptions","network","whiteLabel","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_STATUS","log","CommonJRPCProvider","Web3AuthNoModal","getAdapterSocialLogins","getUserLanguage","LOGIN_MODAL_EVENTS","LoginModal","OPENLOGIN_PROVIDERS","Web3Auth","constructor","options","_defineProperty","providedChainConfig","authMode","modalConfig","defaultLanguage","mode","loginModal","adapterListener","subscribeToLoginModalEvents","initModal","checkInitRequirements","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterName","_this$modalConfig$ada","_params$modalConfig","_this$modalConfig$ada2","_this$modalConfig$ada3","adapterConfig","debug","ad","type","IN_APP","EXTERNAL","cachedAdapter","_this$modalConfig$ada4","setAdapterSettings","chainConfigProxy","_this$coreOptions$cha","coreOptions","openloginAdapter","currentPrivateKeyProvider","adapterNames","Promise","all","hasInAppWallets","some","_this$modalConfig$ada5","_this$modalConfig$ada6","_adapter$name","loginMethods","mergedLoginMethods","method","initPromises","subscribeToAdapterEvents","status","NOT_READY","init","autoConnect","initializeInAppWallet","error","commonJRPCProvider","getProviderInstance","READY","hasExternalWallets","_this$walletAdapters$","_this$modalConfig$ada7","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","connect","connectedAdapterName","CONNECTED","provider","open","resolve","reject","once","ERRORED","err","MODAL_VISIBILITY","visibility","externalWalletsInitialized","adaptersConfig","forEach","then","addWalletLogins","undefined","catch","info","_adapterName","_this$options$uiConfi","_this$options$uiConfi2","_this$options$uiConfi3","addSocialLogins","loginMethodsOrder","loginGridCol","primaryButton","on","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","emit","walletConnectStatus","CONNECTING"],"sourceRoot":""}