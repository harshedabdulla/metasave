{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's 'Drop' contracts are distribution mechanisms for tokens.  A contract admin (i.e. a holder of `DEFAULT_ADMIN_ROLE`) can set a series of claim conditions,  ordered by their respective `startTimestamp`. A claim condition defines criteria under which  accounts can mint tokens. Claim conditions can be overwritten or added to by the contract admin.  At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":\"IClaimCondition_V1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":{\"keccak256\":\"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6\",\"dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX\"]},\"contracts/lib/BitMaps.sol\":{\"keccak256\":\"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d\",\"dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol":"IClaimCondition_V1"},"evmVersion":"london","libraries":{}},"sources":{"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol":{"keccak256":"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452","urls":["bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6","dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX"],"license":"Apache-2.0"},"contracts/lib/BitMaps.sol":{"keccak256":"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17","urls":["bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d","dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol","id":58430,"exportedSymbols":{"BitMaps":[65358],"IClaimCondition_V1":[58429]},"nodeType":"SourceUnit","src":"39:2371:276","nodes":[{"id":58408,"nodeType":"PragmaDirective","src":"39:23:276","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":58409,"nodeType":"ImportDirective","src":"86:34:276","nodes":[],"absolutePath":"contracts/lib/BitMaps.sol","file":"../../../lib/BitMaps.sol","nameLocation":"-1:-1:-1","scope":58430,"sourceUnit":65359,"symbolAliases":[],"unitAlias":""},{"id":58429,"nodeType":"ContractDefinition","src":"564:1845:276","nodes":[{"id":58428,"nodeType":"StructDefinition","src":"2101:306:276","nodes":[],"canonicalName":"IClaimCondition_V1.ClaimCondition","documentation":{"id":58411,"nodeType":"StructuredDocumentation","src":"599:1497:276","text":"  @notice The criteria that make up a claim condition.\n  @param startTimestamp                 The unix timestamp after which the claim condition applies.\n                                        The same claim condition applies until the `startTimestamp`\n                                        of the next claim condition.\n  @param maxClaimableSupply             The maximum total number of tokens that can be claimed under\n                                        the claim condition.\n  @param supplyClaimed                  At any given point, the number of tokens that have been claimed\n                                        under the claim condition.\n  @param quantityLimitPerTransaction    The maximum number of tokens that can be claimed in a single\n                                        transaction.\n  @param waitTimeInSecondsBetweenClaims The least number of seconds an account must wait after claiming\n                                        tokens, to be able to claim tokens again.\n  @param merkleRoot                     The allowlist of addresses that can claim tokens under the claim\n                                        condition.\n  @param pricePerToken                  The price required to pay per token claimed.\n  @param currency                       The currency in which the `pricePerToken` must be paid."},"members":[{"constant":false,"id":58413,"mutability":"mutable","name":"startTimestamp","nameLocation":"2141:14:276","nodeType":"VariableDeclaration","scope":58428,"src":"2133:22:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:276","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58415,"mutability":"mutable","name":"maxClaimableSupply","nameLocation":"2173:18:276","nodeType":"VariableDeclaration","scope":58428,"src":"2165:26:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:276","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58417,"mutability":"mutable","name":"supplyClaimed","nameLocation":"2209:13:276","nodeType":"VariableDeclaration","scope":58428,"src":"2201:21:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:276","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58419,"mutability":"mutable","name":"quantityLimitPerTransaction","nameLocation":"2240:27:276","nodeType":"VariableDeclaration","scope":58428,"src":"2232:35:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2232:7:276","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58421,"mutability":"mutable","name":"waitTimeInSecondsBetweenClaims","nameLocation":"2285:30:276","nodeType":"VariableDeclaration","scope":58428,"src":"2277:38:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:276","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58423,"mutability":"mutable","name":"merkleRoot","nameLocation":"2333:10:276","nodeType":"VariableDeclaration","scope":58428,"src":"2325:18:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":58422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2325:7:276","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":58425,"mutability":"mutable","name":"pricePerToken","nameLocation":"2361:13:276","nodeType":"VariableDeclaration","scope":58428,"src":"2353:21:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2353:7:276","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58427,"mutability":"mutable","name":"currency","nameLocation":"2392:8:276","nodeType":"VariableDeclaration","scope":58428,"src":"2384:16:276","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58426,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:276","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ClaimCondition","nameLocation":"2108:14:276","scope":58429,"visibility":"public"}],"abstract":false,"baseContracts":[],"canonicalName":"IClaimCondition_V1","contractDependencies":[],"contractKind":"interface","documentation":{"id":58410,"nodeType":"StructuredDocumentation","src":"122:440:276","text":"  Thirdweb's 'Drop' contracts are distribution mechanisms for tokens.\n  A contract admin (i.e. a holder of `DEFAULT_ADMIN_ROLE`) can set a series of claim conditions,\n  ordered by their respective `startTimestamp`. A claim condition defines criteria under which\n  accounts can mint tokens. Claim conditions can be overwritten or added to by the contract admin.\n  At any moment, there is only one active claim condition."},"fullyImplemented":true,"linearizedBaseContracts":[58429],"name":"IClaimCondition_V1","nameLocation":"574:18:276","scope":58430,"usedErrors":[],"usedEvents":[]}],"license":"Apache-2.0"},"id":276}