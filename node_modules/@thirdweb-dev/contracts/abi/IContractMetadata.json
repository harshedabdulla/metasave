{"abi":[{"type":"function","name":"contractURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setContractURI","inputs":[{"name":"_uri","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ContractURIUpdated","inputs":[{"name":"prevURI","type":"string","indexed":false,"internalType":"string"},{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"contractURI()":"e8a3d485","setContractURI(string)":"938e3d7b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"setContractURI(string)\":{\"details\":\"Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI  for you contract.  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IContractMetadata.sol\":\"IContractMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"prevURI","type":"string","indexed":false},{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"ContractURIUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setContractURI"}],"devdoc":{"kind":"dev","methods":{"contractURI()":{"details":"Returns the metadata URI of the contract."},"setContractURI(string)":{"details":"Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/interface/IContractMetadata.sol":"IContractMetadata"},"evmVersion":"london","libraries":{}},"sources":{"contracts/extension/interface/IContractMetadata.sol":{"keccak256":"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2","urls":["bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a","dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/interface/IContractMetadata.sol","id":33404,"exportedSymbols":{"IContractMetadata":[33403]},"nodeType":"SourceUnit","src":"39:797:109","nodes":[{"id":33382,"nodeType":"PragmaDirective","src":"39:23:109","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":33403,"nodeType":"ContractDefinition","src":"352:483:109","nodes":[{"id":33389,"nodeType":"FunctionDefinition","src":"441:61:109","nodes":[],"documentation":{"id":33384,"nodeType":"StructuredDocumentation","src":"386:50:109","text":"@dev Returns the metadata URI of the contract."},"functionSelector":"e8a3d485","implemented":false,"kind":"function","modifiers":[],"name":"contractURI","nameLocation":"450:11:109","parameters":{"id":33385,"nodeType":"ParameterList","parameters":[],"src":"461:2:109"},"returnParameters":{"id":33388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":33389,"src":"487:13:109","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33386,"name":"string","nodeType":"ElementaryTypeName","src":"487:6:109","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"486:15:109"},"scope":33403,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":33395,"nodeType":"FunctionDefinition","src":"661:55:109","nodes":[],"documentation":{"id":33390,"nodeType":"StructuredDocumentation","src":"508:148:109","text":"  @dev Sets contract URI for the storefront-level metadata of the contract.\n       Only module admin can call this function."},"functionSelector":"938e3d7b","implemented":false,"kind":"function","modifiers":[],"name":"setContractURI","nameLocation":"670:14:109","parameters":{"id":33393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33392,"mutability":"mutable","name":"_uri","nameLocation":"701:4:109","nodeType":"VariableDeclaration","scope":33395,"src":"685:20:109","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33391,"name":"string","nodeType":"ElementaryTypeName","src":"685:6:109","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"684:22:109"},"returnParameters":{"id":33394,"nodeType":"ParameterList","parameters":[],"src":"715:0:109"},"scope":33403,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":33402,"nodeType":"EventDefinition","src":"777:56:109","nodes":[],"anonymous":false,"documentation":{"id":33396,"nodeType":"StructuredDocumentation","src":"722:50:109","text":"@dev Emitted when the contract URI is updated."},"eventSelector":"c9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16","name":"ContractURIUpdated","nameLocation":"783:18:109","parameters":{"id":33401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33398,"indexed":false,"mutability":"mutable","name":"prevURI","nameLocation":"809:7:109","nodeType":"VariableDeclaration","scope":33402,"src":"802:14:109","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33397,"name":"string","nodeType":"ElementaryTypeName","src":"802:6:109","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33400,"indexed":false,"mutability":"mutable","name":"newURI","nameLocation":"825:6:109","nodeType":"VariableDeclaration","scope":33402,"src":"818:13:109","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":33399,"name":"string","nodeType":"ElementaryTypeName","src":"818:6:109","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"801:31:109"}}],"abstract":false,"baseContracts":[],"canonicalName":"IContractMetadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":33383,"nodeType":"StructuredDocumentation","src":"86:264:109","text":"  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n  for you contract.\n  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."},"fullyImplemented":false,"linearizedBaseContracts":[33403],"name":"IContractMetadata","nameLocation":"362:17:109","scope":33404,"usedErrors":[],"usedEvents":[33402]}],"license":"Apache-2.0"},"id":109}