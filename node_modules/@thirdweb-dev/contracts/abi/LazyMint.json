{"abi":[{"type":"function","name":"batchFrozen","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getBaseURICount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBatchIdAtIndex","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"lazyMint","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_baseURIForTokens","type":"string","internalType":"string"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"batchId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"BatchMetadataUpdate","inputs":[{"name":"_fromTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_toTokenId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MetadataFrozen","inputs":[],"anonymous":false},{"type":"event","name":"TokensLazyMinted","inputs":[{"name":"startTokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"endTokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"baseURI","type":"string","indexed":false,"internalType":"string"},{"name":"encryptedBaseURI","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"error","name":"BatchMintInvalidBatchId","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BatchMintInvalidTokenId","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BatchMintMetadataFrozen","inputs":[{"name":"batchId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"LazyMintInvalidAmount","inputs":[]},{"type":"error","name":"LazyMintUnauthorized","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"batchFrozen(uint256)":"83040532","getBaseURICount()":"63b45e2d","getBatchIdAtIndex(uint256)":"2419f51b","lazyMint(uint256,string,bytes)":"d37c353b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"BatchMintInvalidBatchId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMintInvalidTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"BatchMintMetadataFrozen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LazyMintInvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LazyMintUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MetadataFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BatchMintInvalidBatchId(uint256)\":[{\"details\":\"Invalid index for batch\"}],\"BatchMintInvalidTokenId(uint256)\":[{\"details\":\"Invalid token\"}],\"BatchMintMetadataFrozen(uint256)\":[{\"details\":\"Metadata frozen\"}],\"LazyMintUnauthorized()\":[{\"details\":\"The sender is not authorized to perform the action\"}]},\"events\":{\"MetadataFrozen()\":{\"details\":\"This event emits when the metadata of all tokens are frozen. While not currently supported by marketplaces, this event allows future indexing if desired.\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"}},\"kind\":\"dev\",\"methods\":{\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"Index of the desired batch in batchIds array.\"}},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"notice\":\"So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"}},\"kind\":\"user\",\"methods\":{\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens at the given index.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"}},\"notice\":\"The `LazyMint` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs  at once. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract, without actually  minting a non-zero balance of NFTs of those tokenIds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/LazyMint.sol\":\"LazyMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0x97bf86276ecd830c41636c93b1aff2bd2271b5ca1e5b6ccd2813fbce240f96d1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e6db0f351255c37e0a9cce1357b7adb93c321e16651d2ba1cefbc47e126e90a1\",\"dweb:/ipfs/QmfNpmBBU5K8N4aGV8kTHvdD1oaP8XiWekizvEDyfeGDMw\"]},\"contracts/extension/LazyMint.sol\":{\"keccak256\":\"0x54403018bf34bae1a06be6692ea49c2694e969925a4ab55442089f99a902b6df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://395276b4c28c68abecc49c20b63d118ec40ad82769008124c07c8c0bb24cd1e4\",\"dweb:/ipfs/QmUNdwffH6msk4Cb9zcUdHbKUByiRNTZ9XfUD3DzPax7Nh\"]},\"contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"type":"error","name":"BatchMintInvalidBatchId"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"type":"error","name":"BatchMintInvalidTokenId"},{"inputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}],"type":"error","name":"BatchMintMetadataFrozen"},{"inputs":[],"type":"error","name":"LazyMintInvalidAmount"},{"inputs":[],"type":"error","name":"LazyMintUnauthorized"},{"inputs":[{"internalType":"uint256","name":"_fromTokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"_toTokenId","type":"uint256","indexed":false}],"type":"event","name":"BatchMetadataUpdate","anonymous":false},{"inputs":[],"type":"event","name":"MetadataFrozen","anonymous":false},{"inputs":[{"internalType":"uint256","name":"startTokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"endTokenId","type":"uint256","indexed":false},{"internalType":"string","name":"baseURI","type":"string","indexed":false},{"internalType":"bytes","name":"encryptedBaseURI","type":"bytes","indexed":false}],"type":"event","name":"TokensLazyMinted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"batchFrozen","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBaseURICount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBatchIdAtIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_baseURIForTokens","type":"string"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"lazyMint","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getBaseURICount()":{"details":"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."},"getBatchIdAtIndex(uint256)":{"details":"See {getBaseURICount}.","params":{"_index":"Index of the desired batch in batchIds array."}},"lazyMint(uint256,string,bytes)":{"params":{"_amount":"The number of NFTs to lazy mint.","_baseURIForTokens":"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.","_data":"Additional bytes data to be used at the discretion of the consumer of the contract."},"returns":{"batchId":"         A unique integer identifier for the batch of NFTs lazy minted together."}}},"version":1},"userdoc":{"kind":"user","methods":{"getBaseURICount()":{"notice":"Returns the count of batches of NFTs."},"getBatchIdAtIndex(uint256)":{"notice":"Returns the ID for the batch of tokens at the given index."},"lazyMint(uint256,string,bytes)":{"notice":"Lets an authorized address lazy mint a given amount of NFTs."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/LazyMint.sol":"LazyMint"},"evmVersion":"london","libraries":{}},"sources":{"contracts/extension/BatchMintMetadata.sol":{"keccak256":"0x97bf86276ecd830c41636c93b1aff2bd2271b5ca1e5b6ccd2813fbce240f96d1","urls":["bzz-raw://e6db0f351255c37e0a9cce1357b7adb93c321e16651d2ba1cefbc47e126e90a1","dweb:/ipfs/QmfNpmBBU5K8N4aGV8kTHvdD1oaP8XiWekizvEDyfeGDMw"],"license":"Apache-2.0"},"contracts/extension/LazyMint.sol":{"keccak256":"0x54403018bf34bae1a06be6692ea49c2694e969925a4ab55442089f99a902b6df","urls":["bzz-raw://395276b4c28c68abecc49c20b63d118ec40ad82769008124c07c8c0bb24cd1e4","dweb:/ipfs/QmUNdwffH6msk4Cb9zcUdHbKUByiRNTZ9XfUD3DzPax7Nh"],"license":"Apache-2.0"},"contracts/extension/interface/ILazyMint.sol":{"keccak256":"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec","urls":["bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3","dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/LazyMint.sol","id":21061,"exportedSymbols":{"BatchMintMetadata":[17890],"ILazyMint":[33782],"LazyMint":[21060]},"nodeType":"SourceUnit","src":"39:2122:63","nodes":[{"id":20981,"nodeType":"PragmaDirective","src":"39:23:63","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":20982,"nodeType":"ImportDirective","src":"86:35:63","nodes":[],"absolutePath":"contracts/extension/interface/ILazyMint.sol","file":"./interface/ILazyMint.sol","nameLocation":"-1:-1:-1","scope":21061,"sourceUnit":33783,"symbolAliases":[],"unitAlias":""},{"id":20983,"nodeType":"ImportDirective","src":"122:33:63","nodes":[],"absolutePath":"contracts/extension/BatchMintMetadata.sol","file":"./BatchMintMetadata.sol","nameLocation":"-1:-1:-1","scope":21061,"sourceUnit":17891,"symbolAliases":[],"unitAlias":""},{"id":21060,"nodeType":"ContractDefinition","src":"459:1701:63","nodes":[{"id":20991,"nodeType":"ErrorDefinition","src":"588:29:63","nodes":[],"documentation":{"id":20989,"nodeType":"StructuredDocumentation","src":"524:59:63","text":"@dev The sender is not authorized to perform the action"},"errorSelector":"f409ec73","name":"LazyMintUnauthorized","nameLocation":"594:20:63","parameters":{"id":20990,"nodeType":"ParameterList","parameters":[],"src":"614:2:63"}},{"id":20993,"nodeType":"ErrorDefinition","src":"622:30:63","nodes":[],"errorSelector":"8fd36a9b","name":"LazyMintInvalidAmount","nameLocation":"628:21:63","parameters":{"id":20992,"nodeType":"ParameterList","parameters":[],"src":"649:2:63"}},{"id":20996,"nodeType":"VariableDeclaration","src":"734:38:63","nodes":[],"constant":false,"documentation":{"id":20994,"nodeType":"StructuredDocumentation","src":"658:71:63","text":"@notice The tokenId assigned to the next new NFT to be lazy minted."},"mutability":"mutable","name":"nextTokenIdToLazyMint","nameLocation":"751:21:63","scope":21060,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20995,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":21053,"nodeType":"FunctionDefinition","src":"1388:612:63","nodes":[],"body":{"id":21052,"nodeType":"Block","src":"1560:440:63","nodes":[],"statements":[{"condition":{"id":21011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1574:15:63","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":21009,"name":"_canLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21059,"src":"1575:12:63","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":21010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:14:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":21016,"nodeType":"IfStatement","src":"1570:75:63","trueBody":{"id":21015,"nodeType":"Block","src":"1591:54:63","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":21012,"name":"LazyMintUnauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20991,"src":"1612:20:63","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":21013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1612:22:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21014,"nodeType":"RevertStatement","src":"1605:29:63"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":21019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":21017,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20999,"src":"1659:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":21018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1670:1:63","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1659:12:63","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":21024,"nodeType":"IfStatement","src":"1655:73:63","trueBody":{"id":21023,"nodeType":"Block","src":"1673:55:63","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":21020,"name":"LazyMintInvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20993,"src":"1694:21:63","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":21021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:23:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21022,"nodeType":"RevertStatement","src":"1687:30:63"}]}},{"assignments":[21026],"declarations":[{"constant":false,"id":21026,"mutability":"mutable","name":"startId","nameLocation":"1746:7:63","nodeType":"VariableDeclaration","scope":21052,"src":"1738:15:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":21028,"initialValue":{"id":21027,"name":"nextTokenIdToLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20996,"src":"1756:21:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1738:39:63"},{"expression":{"id":21037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":21029,"name":"nextTokenIdToLazyMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20996,"src":"1789:21:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":21030,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21007,"src":"1812:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":21031,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1788:32:63","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":21033,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21026,"src":"1842:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":21034,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20999,"src":"1851:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":21035,"name":"_baseURIForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21001,"src":"1860:17:63","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":21032,"name":"_batchMintMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17889,"src":"1823:18:63","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,string memory) returns (uint256,uint256)"}},"id":21036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:55:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"1788:90:63","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21038,"nodeType":"ExpressionStatement","src":"1788:90:63"},{"eventCall":{"arguments":[{"id":21040,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21026,"src":"1911:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":21045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":21043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":21041,"name":"startId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21026,"src":"1920:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":21042,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20999,"src":"1930:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1920:17:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":21044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:63","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1920:21:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":21046,"name":"_baseURIForTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21001,"src":"1943:17:63","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":21047,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21003,"src":"1962:5:63","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":21039,"name":"TokensLazyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33769,"src":"1894:16:63","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory,bytes memory)"}},"id":21048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1894:74:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21049,"nodeType":"EmitStatement","src":"1889:79:63"},{"expression":{"id":21050,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21007,"src":"1986:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":21008,"id":21051,"nodeType":"Return","src":"1979:14:63"}]},"baseFunctions":[33781],"documentation":{"id":20997,"nodeType":"StructuredDocumentation","src":"779:604:63","text":"  @notice                  Lets an authorized address lazy mint a given amount of NFTs.\n  @param _amount           The number of NFTs to lazy mint.\n  @param _baseURIForTokens The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each\n                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\n  @param _data             Additional bytes data to be used at the discretion of the consumer of the contract.\n  @return batchId          A unique integer identifier for the batch of NFTs lazy minted together."},"functionSelector":"d37c353b","implemented":true,"kind":"function","modifiers":[],"name":"lazyMint","nameLocation":"1397:8:63","overrides":{"id":21005,"nodeType":"OverrideSpecifier","overrides":[],"src":"1525:8:63"},"parameters":{"id":21004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20999,"mutability":"mutable","name":"_amount","nameLocation":"1423:7:63","nodeType":"VariableDeclaration","scope":21053,"src":"1415:15:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1415:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":21001,"mutability":"mutable","name":"_baseURIForTokens","nameLocation":"1456:17:63","nodeType":"VariableDeclaration","scope":21053,"src":"1440:33:63","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":21000,"name":"string","nodeType":"ElementaryTypeName","src":"1440:6:63","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":21003,"mutability":"mutable","name":"_data","nameLocation":"1498:5:63","nodeType":"VariableDeclaration","scope":21053,"src":"1483:20:63","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":21002,"name":"bytes","nodeType":"ElementaryTypeName","src":"1483:5:63","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1405:104:63"},"returnParameters":{"id":21008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21007,"mutability":"mutable","name":"batchId","nameLocation":"1551:7:63","nodeType":"VariableDeclaration","scope":21053,"src":"1543:15:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1542:17:63"},"scope":21060,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":21059,"nodeType":"FunctionDefinition","src":"2097:61:63","nodes":[],"documentation":{"id":21054,"nodeType":"StructuredDocumentation","src":"2006:86:63","text":"@dev Returns whether lazy minting can be performed in the given execution context."},"implemented":false,"kind":"function","modifiers":[],"name":"_canLazyMint","nameLocation":"2106:12:63","parameters":{"id":21055,"nodeType":"ParameterList","parameters":[],"src":"2118:2:63"},"returnParameters":{"id":21058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21059,"src":"2152:4:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":21056,"name":"bool","nodeType":"ElementaryTypeName","src":"2152:4:63","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2151:6:63"},"scope":21060,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":20985,"name":"ILazyMint","nameLocations":["489:9:63"],"nodeType":"IdentifierPath","referencedDeclaration":33782,"src":"489:9:63"},"id":20986,"nodeType":"InheritanceSpecifier","src":"489:9:63"},{"baseName":{"id":20987,"name":"BatchMintMetadata","nameLocations":["500:17:63"],"nodeType":"IdentifierPath","referencedDeclaration":17890,"src":"500:17:63"},"id":20988,"nodeType":"InheritanceSpecifier","src":"500:17:63"}],"canonicalName":"LazyMint","contractDependencies":[],"contractKind":"contract","documentation":{"id":20984,"nodeType":"StructuredDocumentation","src":"157:300:63","text":"  The `LazyMint` is a contract extension for any base NFT contract. It lets you 'lazy mint' any number of NFTs\n  at once. Here, 'lazy mint' means defining the metadata for particular tokenIds of your NFT contract, without actually\n  minting a non-zero balance of NFTs of those tokenIds."},"fullyImplemented":false,"linearizedBaseContracts":[21060,17890,33782],"name":"LazyMint","nameLocation":"477:8:63","scope":21061,"usedErrors":[17550,17555,17560,20991,20993],"usedEvents":[17577,17584,33769]}],"license":"Apache-2.0"},"id":63}