{"abi":[{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"proofs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"proofMaxQuantityForWallet","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim(address,uint256,bytes32[],uint256)":"3b4b57b0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensClaimed(address,address,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,bytes32[],uint256)\":{\"params\":{\"proofMaxQuantityForWallet\":\"The maximum number of NFTs an address included in an                                        allowlist can claim.\",\"proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"quantity\":\"The quantity of NFTs to claim.\",\"receiver\":\"The receiver of the NFTs to claim.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"}},\"notice\":\"Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism  to drop tokens.  `AirdropERC721Claimable` contract is an airdrop contract for ERC721 tokens. It follows a  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from  the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC721Claimable.sol\":\"IAirdropERC721Claimable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC721Claimable.sol\":{\"keccak256\":\"0xd0249a1d03983d6d057a6adcf68ed49e9105584af7319daf9c86e5717a926367\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d496f73449cf44c3703d43985ee13822f1d2ae9e4ef61caddb6400de77e0399c\",\"dweb:/ipfs/QmUkHCNCSohjrAevcEP8B9rKJKs7uJVBvJbVszfQ5Co93U\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityForWallet","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claim"}],"devdoc":{"kind":"dev","methods":{"claim(address,uint256,bytes32[],uint256)":{"params":{"proofMaxQuantityForWallet":"The maximum number of NFTs an address included in an                                        allowlist can claim.","proofs":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","quantity":"The quantity of NFTs to claim.","receiver":"The receiver of the NFTs to claim."}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,bytes32[],uint256)":{"notice":"Lets an account claim a given quantity of NFTs."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/prebuilts/interface/airdrop/IAirdropERC721Claimable.sol":"IAirdropERC721Claimable"},"evmVersion":"london","libraries":{}},"sources":{"contracts/prebuilts/interface/airdrop/IAirdropERC721Claimable.sol":{"keccak256":"0xd0249a1d03983d6d057a6adcf68ed49e9105584af7319daf9c86e5717a926367","urls":["bzz-raw://d496f73449cf44c3703d43985ee13822f1d2ae9e4ef61caddb6400de77e0399c","dweb:/ipfs/QmUkHCNCSohjrAevcEP8B9rKJKs7uJVBvJbVszfQ5Co93U"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/prebuilts/interface/airdrop/IAirdropERC721Claimable.sol","id":77685,"exportedSymbols":{"IAirdropERC721Claimable":[77684]},"nodeType":"SourceUnit","src":"39:1302:349","nodes":[{"id":77660,"nodeType":"PragmaDirective","src":"39:24:349","nodes":[],"literals":["solidity","^","0.8",".11"]},{"id":77684,"nodeType":"ContractDefinition","src":"385:955:349","nodes":[{"id":77670,"nodeType":"EventDefinition","src":"471:96:349","nodes":[],"anonymous":false,"documentation":{"id":77662,"nodeType":"StructuredDocumentation","src":"425:41:349","text":"@dev Emitted when tokens are claimed."},"eventSelector":"a86305abc2db271df4609aa86a8d044bc11fb36939841bfdad6c1ab2b26e9471","name":"TokensClaimed","nameLocation":"477:13:349","parameters":{"id":77669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77664,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"507:7:349","nodeType":"VariableDeclaration","scope":77670,"src":"491:23:349","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77663,"name":"address","nodeType":"ElementaryTypeName","src":"491:7:349","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77666,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"532:8:349","nodeType":"VariableDeclaration","scope":77670,"src":"516:24:349","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77665,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:349","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77668,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"550:15:349","nodeType":"VariableDeclaration","scope":77670,"src":"542:23:349","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77667,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:349","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"490:76:349"}},{"id":77683,"nodeType":"FunctionDefinition","src":"1178:160:349","nodes":[],"documentation":{"id":77671,"nodeType":"StructuredDocumentation","src":"573:600:349","text":"  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFTs to claim.\n  @param quantity                       The quantity of NFTs to claim.\n  @param proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param proofMaxQuantityForWallet      The maximum number of NFTs an address included in an\n                                        allowlist can claim."},"functionSelector":"3b4b57b0","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1187:5:349","parameters":{"id":77681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77673,"mutability":"mutable","name":"receiver","nameLocation":"1210:8:349","nodeType":"VariableDeclaration","scope":77683,"src":"1202:16:349","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77672,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:349","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77675,"mutability":"mutable","name":"quantity","nameLocation":"1236:8:349","nodeType":"VariableDeclaration","scope":77683,"src":"1228:16:349","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:349","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77678,"mutability":"mutable","name":"proofs","nameLocation":"1273:6:349","nodeType":"VariableDeclaration","scope":77683,"src":"1254:25:349","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":77676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:349","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":77677,"nodeType":"ArrayTypeName","src":"1254:9:349","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":77680,"mutability":"mutable","name":"proofMaxQuantityForWallet","nameLocation":"1297:25:349","nodeType":"VariableDeclaration","scope":77683,"src":"1289:33:349","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:349","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1192:136:349"},"returnParameters":{"id":77682,"nodeType":"ParameterList","parameters":[],"src":"1337:0:349"},"scope":77684,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAirdropERC721Claimable","contractDependencies":[],"contractKind":"interface","documentation":{"id":77661,"nodeType":"StructuredDocumentation","src":"65:318:349","text":"  Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism\n  to drop tokens.\n  `AirdropERC721Claimable` contract is an airdrop contract for ERC721 tokens. It follows a\n  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from\n  the contract."},"fullyImplemented":false,"linearizedBaseContracts":[77684],"name":"IAirdropERC721Claimable","nameLocation":"395:23:349","scope":77685,"usedErrors":[],"usedEvents":[77670]}],"license":"Apache-2.0"},"id":349}