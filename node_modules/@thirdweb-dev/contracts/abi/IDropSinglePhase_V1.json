{"abi":[{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"allowlistProof","type":"tuple","internalType":"struct IDropSinglePhase_V1.AllowlistProof","components":[{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"},{"name":"maxQuantityInAllowlist","type":"uint256","internalType":"uint256"}]},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setClaimConditions","inputs":[{"name":"phase","type":"tuple","internalType":"struct IClaimCondition_V1.ClaimCondition","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"resetClaimEligibility","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ClaimConditionUpdated","inputs":[{"name":"condition","type":"tuple","indexed":false,"internalType":"struct IClaimCondition_V1.ClaimCondition","components":[{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"maxClaimableSupply","type":"uint256","internalType":"uint256"},{"name":"supplyClaimed","type":"uint256","internalType":"uint256"},{"name":"quantityLimitPerTransaction","type":"uint256","internalType":"uint256"},{"name":"waitTimeInSecondsBetweenClaims","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"pricePerToken","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"}]},{"name":"resetEligibility","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"startTokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)":"5ab31c1a","setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)":"77312a9e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantityInAllowlist\",\"type\":\"uint256\"}],\"internalType\":\"struct IDropSinglePhase_V1.AllowlistProof\",\"name\":\"allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"waitTimeInSecondsBetweenClaims\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IClaimCondition_V1.ClaimCondition\",\"name\":\"phase\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimConditionUpdated((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"details\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"params\":{\"allowlistProof\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"currency\":\"The currency in which to pay for the claim.\",\"data\":\"Arbitrary bytes data that can be leveraged in the implementation of this interface.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"quantity\":\"The quantity of NFTs to claim.\",\"receiver\":\"The receiver of the NFTs to claim.\"}},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"params\":{\"phase\":\"Claim condition to set.\",\"resetClaimEligibility\":\"Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new                                  claim conditions.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol\":\"IDropSinglePhase_V1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol\":{\"keccak256\":\"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6\",\"dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX\"]},\"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol\":{\"keccak256\":\"0x1952ba0cb02f12130a85c2781116c48bafc8fac1195689298e94f838e2456bf7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab95b5826cb7d7ea84d6dbde83b14e83e18ee305730d01be99bdcf36f919e717\",\"dweb:/ipfs/QmYjcAvQJbJrP5TxuWZyVB1wdSgau37Qm4z5tNTDyiZhhn\"]},\"contracts/lib/BitMaps.sol\":{\"keccak256\":\"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d\",\"dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct IClaimCondition_V1.ClaimCondition","name":"condition","type":"tuple","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}],"indexed":false},{"internalType":"bool","name":"resetEligibility","type":"bool","indexed":false}],"type":"event","name":"ClaimConditionUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"startTokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"struct IDropSinglePhase_V1.AllowlistProof","name":"allowlistProof","type":"tuple","components":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"uint256","name":"maxQuantityInAllowlist","type":"uint256"}]},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"claim"},{"inputs":[{"internalType":"struct IClaimCondition_V1.ClaimCondition","name":"phase","type":"tuple","components":[{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxClaimableSupply","type":"uint256"},{"internalType":"uint256","name":"supplyClaimed","type":"uint256"},{"internalType":"uint256","name":"quantityLimitPerTransaction","type":"uint256"},{"internalType":"uint256","name":"waitTimeInSecondsBetweenClaims","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"pricePerToken","type":"uint256"},{"internalType":"address","name":"currency","type":"address"}]},{"internalType":"bool","name":"resetClaimEligibility","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setClaimConditions"}],"devdoc":{"kind":"dev","methods":{"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)":{"params":{"allowlistProof":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","currency":"The currency in which to pay for the claim.","data":"Arbitrary bytes data that can be leveraged in the implementation of this interface.","pricePerToken":"The price per token to pay for the claim.","quantity":"The quantity of NFTs to claim.","receiver":"The receiver of the NFTs to claim."}},"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)":{"params":{"phase":"Claim condition to set.","resetClaimEligibility":"Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new                                  claim conditions."}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,address,uint256,(bytes32[],uint256),bytes)":{"notice":"Lets an account claim a given quantity of NFTs."},"setClaimConditions((uint256,uint256,uint256,uint256,uint256,bytes32,uint256,address),bool)":{"notice":"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol":"IDropSinglePhase_V1"},"evmVersion":"london","libraries":{}},"sources":{"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol":{"keccak256":"0xd9cc63e6264de2cddb2f4a000847b0781ddcf4b808137fcfef3a4f4d903da452","urls":["bzz-raw://864374d2e65bcd0ab6f054f67a01a73938a624f60cf9f5aea2c4f8c777d247e6","dweb:/ipfs/QmfJ1fK5KeebMtp9yJMWbefxUuRYJoTD1bjCUbWQvcMfhX"],"license":"Apache-2.0"},"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol":{"keccak256":"0x1952ba0cb02f12130a85c2781116c48bafc8fac1195689298e94f838e2456bf7","urls":["bzz-raw://ab95b5826cb7d7ea84d6dbde83b14e83e18ee305730d01be99bdcf36f919e717","dweb:/ipfs/QmYjcAvQJbJrP5TxuWZyVB1wdSgau37Qm4z5tNTDyiZhhn"],"license":"Apache-2.0"},"contracts/lib/BitMaps.sol":{"keccak256":"0x57bcd40ce09b6f61a8643b4f97631ad929c7c0ac00dedb5ad62f9375052a9d17","urls":["bzz-raw://8da26049d81a82f6d45034fd596bb0f2eea790fc568d4df98cf439fe03bb350d","dweb:/ipfs/QmV1PqxvWM9RvDfP4JsSYF666rjX3ow5VyYUszG9UqMohL"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/legacy-contracts/extension/interface/IDropSinglePhase_V1.sol","id":58550,"exportedSymbols":{"BitMaps":[65358],"IClaimCondition_V1":[58429],"IDropSinglePhase_V1":[58549]},"nodeType":"SourceUnit","src":"39:2080:278","nodes":[{"id":58494,"nodeType":"PragmaDirective","src":"39:23:278","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":58495,"nodeType":"ImportDirective","src":"86:34:278","nodes":[],"absolutePath":"contracts/legacy-contracts/extension/interface/IClaimCondition_V1.sol","file":"./IClaimCondition_V1.sol","nameLocation":"-1:-1:-1","scope":58550,"sourceUnit":58430,"symbolAliases":[],"unitAlias":""},{"id":58549,"nodeType":"ContractDefinition","src":"122:1996:278","nodes":[{"id":58503,"nodeType":"StructDefinition","src":"180:94:278","nodes":[],"canonicalName":"IDropSinglePhase_V1.AllowlistProof","members":[{"constant":false,"id":58500,"mutability":"mutable","name":"proof","nameLocation":"222:5:278","nodeType":"VariableDeclaration","scope":58503,"src":"212:15:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":58498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"212:7:278","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":58499,"nodeType":"ArrayTypeName","src":"212:9:278","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":58502,"mutability":"mutable","name":"maxQuantityInAllowlist","nameLocation":"245:22:278","nodeType":"VariableDeclaration","scope":58503,"src":"237:30:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58501,"name":"uint256","nodeType":"ElementaryTypeName","src":"237:7:278","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AllowlistProof","nameLocation":"187:14:278","scope":58549,"visibility":"public"},{"id":58514,"nodeType":"EventDefinition","src":"338:164:278","nodes":[],"anonymous":false,"documentation":{"id":58504,"nodeType":"StructuredDocumentation","src":"280:53:278","text":"@dev Emitted when tokens are claimed via `claim`."},"eventSelector":"ff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6","name":"TokensClaimed","nameLocation":"344:13:278","parameters":{"id":58513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58506,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"383:7:278","nodeType":"VariableDeclaration","scope":58514,"src":"367:23:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58505,"name":"address","nodeType":"ElementaryTypeName","src":"367:7:278","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58508,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"416:8:278","nodeType":"VariableDeclaration","scope":58514,"src":"400:24:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58507,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:278","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58510,"indexed":true,"mutability":"mutable","name":"startTokenId","nameLocation":"450:12:278","nodeType":"VariableDeclaration","scope":58514,"src":"434:28:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58509,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:278","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58512,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"480:15:278","nodeType":"VariableDeclaration","scope":58514,"src":"472:23:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58511,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:278","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"357:144:278"}},{"id":58522,"nodeType":"EventDefinition","src":"579:77:278","nodes":[],"anonymous":false,"documentation":{"id":58515,"nodeType":"StructuredDocumentation","src":"508:66:278","text":"@dev Emitted when the contract's claim conditions are updated."},"eventSelector":"583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd79080","name":"ClaimConditionUpdated","nameLocation":"585:21:278","parameters":{"id":58521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58518,"indexed":false,"mutability":"mutable","name":"condition","nameLocation":"622:9:278","nodeType":"VariableDeclaration","scope":58522,"src":"607:24:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58428_memory_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"},"typeName":{"id":58517,"nodeType":"UserDefinedTypeName","pathNode":{"id":58516,"name":"ClaimCondition","nameLocations":["607:14:278"],"nodeType":"IdentifierPath","referencedDeclaration":58428,"src":"607:14:278"},"referencedDeclaration":58428,"src":"607:14:278","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58428_storage_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"}},"visibility":"internal"},{"constant":false,"id":58520,"indexed":false,"mutability":"mutable","name":"resetEligibility","nameLocation":"638:16:278","nodeType":"VariableDeclaration","scope":58522,"src":"633:21:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58519,"name":"bool","nodeType":"ElementaryTypeName","src":"633:4:278","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"606:49:278"}},{"id":58539,"nodeType":"FunctionDefinition","src":"1409:222:278","nodes":[],"documentation":{"id":58523,"nodeType":"StructuredDocumentation","src":"662:742:278","text":"  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFTs to claim.\n  @param quantity                       The quantity of NFTs to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface."},"functionSelector":"5ab31c1a","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1418:5:278","parameters":{"id":58537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58525,"mutability":"mutable","name":"receiver","nameLocation":"1441:8:278","nodeType":"VariableDeclaration","scope":58539,"src":"1433:16:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58524,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:278","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58527,"mutability":"mutable","name":"quantity","nameLocation":"1467:8:278","nodeType":"VariableDeclaration","scope":58539,"src":"1459:16:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:278","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58529,"mutability":"mutable","name":"currency","nameLocation":"1493:8:278","nodeType":"VariableDeclaration","scope":58539,"src":"1485:16:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58528,"name":"address","nodeType":"ElementaryTypeName","src":"1485:7:278","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58531,"mutability":"mutable","name":"pricePerToken","nameLocation":"1519:13:278","nodeType":"VariableDeclaration","scope":58539,"src":"1511:21:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1511:7:278","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58534,"mutability":"mutable","name":"allowlistProof","nameLocation":"1566:14:278","nodeType":"VariableDeclaration","scope":58539,"src":"1542:38:278","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AllowlistProof_$58503_calldata_ptr","typeString":"struct IDropSinglePhase_V1.AllowlistProof"},"typeName":{"id":58533,"nodeType":"UserDefinedTypeName","pathNode":{"id":58532,"name":"AllowlistProof","nameLocations":["1542:14:278"],"nodeType":"IdentifierPath","referencedDeclaration":58503,"src":"1542:14:278"},"referencedDeclaration":58503,"src":"1542:14:278","typeDescriptions":{"typeIdentifier":"t_struct$_AllowlistProof_$58503_storage_ptr","typeString":"struct IDropSinglePhase_V1.AllowlistProof"}},"visibility":"internal"},{"constant":false,"id":58536,"mutability":"mutable","name":"data","nameLocation":"1603:4:278","nodeType":"VariableDeclaration","scope":58539,"src":"1590:17:278","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58535,"name":"bytes","nodeType":"ElementaryTypeName","src":"1590:5:278","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1423:190:278"},"returnParameters":{"id":58538,"nodeType":"ParameterList","parameters":[],"src":"1630:0:278"},"scope":58549,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":58548,"nodeType":"FunctionDefinition","src":"2020:96:278","nodes":[],"documentation":{"id":58540,"nodeType":"StructuredDocumentation","src":"1637:378:278","text":"  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param phase                    Claim condition to set.\n  @param resetClaimEligibility    Whether to reset `limitLastClaimTimestamp` and `limitMerkleProofClaim` values when setting new\n                                  claim conditions."},"functionSelector":"77312a9e","implemented":false,"kind":"function","modifiers":[],"name":"setClaimConditions","nameLocation":"2029:18:278","parameters":{"id":58546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58543,"mutability":"mutable","name":"phase","nameLocation":"2072:5:278","nodeType":"VariableDeclaration","scope":58548,"src":"2048:29:278","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58428_calldata_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"},"typeName":{"id":58542,"nodeType":"UserDefinedTypeName","pathNode":{"id":58541,"name":"ClaimCondition","nameLocations":["2048:14:278"],"nodeType":"IdentifierPath","referencedDeclaration":58428,"src":"2048:14:278"},"referencedDeclaration":58428,"src":"2048:14:278","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimCondition_$58428_storage_ptr","typeString":"struct IClaimCondition_V1.ClaimCondition"}},"visibility":"internal"},{"constant":false,"id":58545,"mutability":"mutable","name":"resetClaimEligibility","nameLocation":"2084:21:278","nodeType":"VariableDeclaration","scope":58548,"src":"2079:26:278","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58544,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:278","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2047:59:278"},"returnParameters":{"id":58547,"nodeType":"ParameterList","parameters":[],"src":"2115:0:278"},"scope":58549,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":58496,"name":"IClaimCondition_V1","nameLocations":["155:18:278"],"nodeType":"IdentifierPath","referencedDeclaration":58429,"src":"155:18:278"},"id":58497,"nodeType":"InheritanceSpecifier","src":"155:18:278"}],"canonicalName":"IDropSinglePhase_V1","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[58549,58429],"name":"IDropSinglePhase_V1","nameLocation":"132:19:278","scope":58550,"usedErrors":[],"usedEvents":[58514,58522]}],"license":"Apache-2.0"},"id":278}