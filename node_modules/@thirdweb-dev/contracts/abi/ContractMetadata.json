{"abi":[{"type":"function","name":"contractURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setContractURI","inputs":[{"name":"_uri","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ContractURIUpdated","inputs":[{"name":"prevURI","type":"string","indexed":false,"internalType":"string"},{"name":"newURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"error","name":"ContractMetadataUnauthorized","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"contractURI()":"e8a3d485","setContractURI(string)":"938e3d7b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ContractMetadataUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ContractMetadataUnauthorized()\":[{\"details\":\"The sender is not authorized to perform the action\"}]},\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"title\":\"Contract Metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI           for you contract.           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/ContractMetadata.sol\":\"ContractMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0x0752a8a6eeb7e61acfe50e39344c16258a89cfaa55fc9db9289dc6e18ae7af66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ca1ffdbc96af19fa17e23fd8a1aebe2d5849e63ded33805228b26f1901125e8\",\"dweb:/ipfs/QmckQ7iwwm9LuywfpuYP7Y7AcUW8yNy1eDL741ug8w1wyv\"]},\"contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ContractMetadataUnauthorized"},{"inputs":[{"internalType":"string","name":"prevURI","type":"string","indexed":false},{"internalType":"string","name":"newURI","type":"string","indexed":false}],"type":"event","name":"ContractURIUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setContractURI"}],"devdoc":{"kind":"dev","methods":{"setContractURI(string)":{"details":"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.","params":{"_uri":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"}}},"version":1},"userdoc":{"kind":"user","methods":{"contractURI()":{"notice":"Returns the contract metadata URI."},"setContractURI(string)":{"notice":"Lets a contract admin set the URI for contract-level metadata."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/extension/ContractMetadata.sol":"ContractMetadata"},"evmVersion":"london","libraries":{}},"sources":{"contracts/extension/ContractMetadata.sol":{"keccak256":"0x0752a8a6eeb7e61acfe50e39344c16258a89cfaa55fc9db9289dc6e18ae7af66","urls":["bzz-raw://6ca1ffdbc96af19fa17e23fd8a1aebe2d5849e63ded33805228b26f1901125e8","dweb:/ipfs/QmckQ7iwwm9LuywfpuYP7Y7AcUW8yNy1eDL741ug8w1wyv"],"license":"Apache-2.0"},"contracts/extension/interface/IContractMetadata.sol":{"keccak256":"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2","urls":["bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a","dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/extension/ContractMetadata.sol","id":18146,"exportedSymbols":{"ContractMetadata":[18145],"IContractMetadata":[33403]},"nodeType":"SourceUnit","src":"39:1705:56","nodes":[{"id":18087,"nodeType":"PragmaDirective","src":"39:23:56","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":18088,"nodeType":"ImportDirective","src":"86:43:56","nodes":[],"absolutePath":"contracts/extension/interface/IContractMetadata.sol","file":"./interface/IContractMetadata.sol","nameLocation":"-1:-1:-1","scope":18146,"sourceUnit":33404,"symbolAliases":[],"unitAlias":""},{"id":18145,"nodeType":"ContractDefinition","src":"452:1291:56","nodes":[{"id":18094,"nodeType":"ErrorDefinition","src":"578:37:56","nodes":[],"documentation":{"id":18092,"nodeType":"StructuredDocumentation","src":"514:59:56","text":"@dev The sender is not authorized to perform the action"},"errorSelector":"9f7f0925","name":"ContractMetadataUnauthorized","nameLocation":"584:28:56","parameters":{"id":18093,"nodeType":"ParameterList","parameters":[],"src":"612:2:56"}},{"id":18098,"nodeType":"VariableDeclaration","src":"672:34:56","nodes":[],"baseFunctions":[33389],"constant":false,"documentation":{"id":18095,"nodeType":"StructuredDocumentation","src":"621:46:56","text":"@notice Returns the contract metadata URI."},"functionSelector":"e8a3d485","mutability":"mutable","name":"contractURI","nameLocation":"695:11:56","overrides":{"id":18097,"nodeType":"OverrideSpecifier","overrides":[],"src":"686:8:56"},"scope":18145,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":18096,"name":"string","nodeType":"ElementaryTypeName","src":"672:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"id":18118,"nodeType":"FunctionDefinition","src":"1110:201:56","nodes":[],"body":{"id":18117,"nodeType":"Block","src":"1172:139:56","nodes":[],"statements":[{"condition":{"id":18107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1186:21:56","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":18105,"name":"_canSetContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18144,"src":"1187:18:56","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":18106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1187:20:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18112,"nodeType":"IfStatement","src":"1182:89:56","trueBody":{"id":18111,"nodeType":"Block","src":"1209:62:56","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":18108,"name":"ContractMetadataUnauthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18094,"src":"1230:28:56","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":18109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:30:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18110,"nodeType":"RevertStatement","src":"1223:37:56"}]}},{"expression":{"arguments":[{"id":18114,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18101,"src":"1299:4:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":18113,"name":"_setupContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18138,"src":"1281:17:56","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":18115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1281:23:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18116,"nodeType":"ExpressionStatement","src":"1281:23:56"}]},"baseFunctions":[33395],"documentation":{"id":18099,"nodeType":"StructuredDocumentation","src":"713:392:56","text":"  @notice         Lets a contract admin set the URI for contract-level metadata.\n  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\n                  See {_canSetContractURI}.\n                  Emits {ContractURIUpdated Event}.\n  @param _uri     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"},"functionSelector":"938e3d7b","implemented":true,"kind":"function","modifiers":[],"name":"setContractURI","nameLocation":"1119:14:56","overrides":{"id":18103,"nodeType":"OverrideSpecifier","overrides":[],"src":"1163:8:56"},"parameters":{"id":18102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18101,"mutability":"mutable","name":"_uri","nameLocation":"1148:4:56","nodeType":"VariableDeclaration","scope":18118,"src":"1134:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18100,"name":"string","nodeType":"ElementaryTypeName","src":"1134:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1133:20:56"},"returnParameters":{"id":18104,"nodeType":"ParameterList","parameters":[],"src":"1172:0:56"},"scope":18145,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18138,"nodeType":"FunctionDefinition","src":"1393:185:56","nodes":[],"body":{"id":18137,"nodeType":"Block","src":"1449:129:56","nodes":[],"statements":[{"assignments":[18125],"declarations":[{"constant":false,"id":18125,"mutability":"mutable","name":"prevURI","nameLocation":"1473:7:56","nodeType":"VariableDeclaration","scope":18137,"src":"1459:21:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18124,"name":"string","nodeType":"ElementaryTypeName","src":"1459:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":18127,"initialValue":{"id":18126,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18098,"src":"1483:11:56","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1459:35:56"},{"expression":{"id":18130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18128,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18098,"src":"1504:11:56","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18129,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18121,"src":"1518:4:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1504:18:56","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":18131,"nodeType":"ExpressionStatement","src":"1504:18:56"},{"eventCall":{"arguments":[{"id":18133,"name":"prevURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18125,"src":"1557:7:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":18134,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18121,"src":"1566:4:56","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":18132,"name":"ContractURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33402,"src":"1538:18:56","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":18135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1538:33:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18136,"nodeType":"EmitStatement","src":"1533:38:56"}]},"documentation":{"id":18119,"nodeType":"StructuredDocumentation","src":"1317:71:56","text":"@dev Lets a contract admin set the URI for contract-level metadata."},"implemented":true,"kind":"function","modifiers":[],"name":"_setupContractURI","nameLocation":"1402:17:56","parameters":{"id":18122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18121,"mutability":"mutable","name":"_uri","nameLocation":"1434:4:56","nodeType":"VariableDeclaration","scope":18138,"src":"1420:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18120,"name":"string","nodeType":"ElementaryTypeName","src":"1420:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1419:20:56"},"returnParameters":{"id":18123,"nodeType":"ParameterList","parameters":[],"src":"1449:0:56"},"scope":18145,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":18144,"nodeType":"FunctionDefinition","src":"1674:67:56","nodes":[],"documentation":{"id":18139,"nodeType":"StructuredDocumentation","src":"1584:85:56","text":"@dev Returns whether contract metadata can be set in the given execution context."},"implemented":false,"kind":"function","modifiers":[],"name":"_canSetContractURI","nameLocation":"1683:18:56","parameters":{"id":18140,"nodeType":"ParameterList","parameters":[],"src":"1701:2:56"},"returnParameters":{"id":18143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18144,"src":"1735:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18141,"name":"bool","nodeType":"ElementaryTypeName","src":"1735:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1734:6:56"},"scope":18145,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":18090,"name":"IContractMetadata","nameLocations":["490:17:56"],"nodeType":"IdentifierPath","referencedDeclaration":33403,"src":"490:17:56"},"id":18091,"nodeType":"InheritanceSpecifier","src":"490:17:56"}],"canonicalName":"ContractMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":18089,"nodeType":"StructuredDocumentation","src":"131:319:56","text":"  @title   Contract Metadata\n  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n           for you contract.\n           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."},"fullyImplemented":false,"linearizedBaseContracts":[18145,33403],"name":"ContractMetadata","nameLocation":"470:16:56","scope":18146,"usedErrors":[18094],"usedEvents":[33402]}],"license":"Apache-2.0"},"id":56}