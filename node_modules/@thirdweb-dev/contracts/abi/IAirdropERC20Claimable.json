{"abi":[{"type":"function","name":"claim","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"quantity","type":"uint256","internalType":"uint256"},{"name":"proofs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"proofMaxQuantityForWallet","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"quantityClaimed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim(address,uint256,bytes32[],uint256)":"3b4b57b0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokensClaimed(address,address,uint256)\":{\"details\":\"Emitted when tokens are claimed.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,bytes32[],uint256)\":{\"params\":{\"proofMaxQuantityForWallet\":\"The maximum number of NFTs an address included in an                                        allowlist can claim.\",\"proofs\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"quantity\":\"The quantity of NFTs to claim.\",\"receiver\":\"The receiver of the NFTs to claim.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,bytes32[],uint256)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"}},\"notice\":\"Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism  to drop tokens.  `AirdropERC20Claimable` contract is an airdrop contract for ERC20 tokens. It follows a  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from  the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol\":\"IAirdropERC20Claimable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@ds-test/=lib/ds-test/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":contracts/=contracts/\",\":ds-test/=lib/ds-test/src/\",\":dynamic-contracts/=lib/dynamic-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":erc721a/=lib/ERC721A/\",\":forge-std/=lib/forge-std/src/\",\":lib/sstore2/=lib/dynamic-contracts/lib/sstore2/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol\":{\"keccak256\":\"0xec4f3d9c3689f3aceb5aff11a6ced7a01b57ef60c53c15239b83652d654e3ccc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f75157bb36ca34a35726b4960d857090f2900554bd9461a16ebfcbafd47f3da7\",\"dweb:/ipfs/QmXfqrHNJ3nAkkpdnSL5b1jGQuPi5vqa53F8HoCrMTfNfH\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"quantityClaimed","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityForWallet","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claim"}],"devdoc":{"kind":"dev","methods":{"claim(address,uint256,bytes32[],uint256)":{"params":{"proofMaxQuantityForWallet":"The maximum number of NFTs an address included in an                                        allowlist can claim.","proofs":"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.","quantity":"The quantity of NFTs to claim.","receiver":"The receiver of the NFTs to claim."}}},"version":1},"userdoc":{"kind":"user","methods":{"claim(address,uint256,bytes32[],uint256)":{"notice":"Lets an account claim a given quantity of NFTs."}},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@ds-test/=lib/ds-test/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@std/=lib/forge-std/src/","@thirdweb-dev/dynamic-contracts/=lib/dynamic-contracts/","ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/","ERC721A/=lib/ERC721A/contracts/","chainlink/=lib/chainlink/contracts/","contracts/=contracts/","ds-test/=lib/ds-test/src/","dynamic-contracts/=lib/dynamic-contracts/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=lib/ERC721A-Upgradeable/","erc721a/=lib/ERC721A/","forge-std/=lib/forge-std/src/","lib/sstore2/=lib/dynamic-contracts/lib/sstore2/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","sstore2/=lib/dynamic-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":20},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol":"IAirdropERC20Claimable"},"evmVersion":"london","libraries":{}},"sources":{"contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol":{"keccak256":"0xec4f3d9c3689f3aceb5aff11a6ced7a01b57ef60c53c15239b83652d654e3ccc","urls":["bzz-raw://f75157bb36ca34a35726b4960d857090f2900554bd9461a16ebfcbafd47f3da7","dweb:/ipfs/QmXfqrHNJ3nAkkpdnSL5b1jGQuPi5vqa53F8HoCrMTfNfH"],"license":"Apache-2.0"}},"version":1},"ast":{"absolutePath":"contracts/prebuilts/interface/airdrop/IAirdropERC20Claimable.sol","id":77626,"exportedSymbols":{"IAirdropERC20Claimable":[77625]},"nodeType":"SourceUnit","src":"39:1299:347","nodes":[{"id":77601,"nodeType":"PragmaDirective","src":"39:24:347","nodes":[],"literals":["solidity","^","0.8",".11"]},{"id":77625,"nodeType":"ContractDefinition","src":"383:954:347","nodes":[{"id":77611,"nodeType":"EventDefinition","src":"468:96:347","nodes":[],"anonymous":false,"documentation":{"id":77603,"nodeType":"StructuredDocumentation","src":"422:41:347","text":"@dev Emitted when tokens are claimed."},"eventSelector":"a86305abc2db271df4609aa86a8d044bc11fb36939841bfdad6c1ab2b26e9471","name":"TokensClaimed","nameLocation":"474:13:347","parameters":{"id":77610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77605,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"504:7:347","nodeType":"VariableDeclaration","scope":77611,"src":"488:23:347","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77604,"name":"address","nodeType":"ElementaryTypeName","src":"488:7:347","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77607,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"529:8:347","nodeType":"VariableDeclaration","scope":77611,"src":"513:24:347","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77606,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:347","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77609,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"547:15:347","nodeType":"VariableDeclaration","scope":77611,"src":"539:23:347","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77608,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:347","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:76:347"}},{"id":77624,"nodeType":"FunctionDefinition","src":"1175:160:347","nodes":[],"documentation":{"id":77612,"nodeType":"StructuredDocumentation","src":"570:600:347","text":"  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFTs to claim.\n  @param quantity                       The quantity of NFTs to claim.\n  @param proofs                         The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param proofMaxQuantityForWallet      The maximum number of NFTs an address included in an\n                                        allowlist can claim."},"functionSelector":"3b4b57b0","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1184:5:347","parameters":{"id":77622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77614,"mutability":"mutable","name":"receiver","nameLocation":"1207:8:347","nodeType":"VariableDeclaration","scope":77624,"src":"1199:16:347","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77613,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:347","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77616,"mutability":"mutable","name":"quantity","nameLocation":"1233:8:347","nodeType":"VariableDeclaration","scope":77624,"src":"1225:16:347","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1225:7:347","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77619,"mutability":"mutable","name":"proofs","nameLocation":"1270:6:347","nodeType":"VariableDeclaration","scope":77624,"src":"1251:25:347","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":77617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1251:7:347","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":77618,"nodeType":"ArrayTypeName","src":"1251:9:347","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":77621,"mutability":"mutable","name":"proofMaxQuantityForWallet","nameLocation":"1294:25:347","nodeType":"VariableDeclaration","scope":77624,"src":"1286:33:347","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:347","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1189:136:347"},"returnParameters":{"id":77623,"nodeType":"ParameterList","parameters":[],"src":"1334:0:347"},"scope":77625,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAirdropERC20Claimable","contractDependencies":[],"contractKind":"interface","documentation":{"id":77602,"nodeType":"StructuredDocumentation","src":"65:316:347","text":"  Thirdweb's `Airdrop` contracts provide a lightweight and easy to use mechanism\n  to drop tokens.\n  `AirdropERC20Claimable` contract is an airdrop contract for ERC20 tokens. It follows a\n  pull mechanism for transfer of tokens, where allowlisted recipients can claim tokens from\n  the contract."},"fullyImplemented":false,"linearizedBaseContracts":[77625],"name":"IAirdropERC20Claimable","nameLocation":"393:22:347","scope":77626,"usedErrors":[],"usedEvents":[77611]}],"license":"Apache-2.0"},"id":347}