{"version":3,"file":"torus.esm.js","sources":["../src/interfaces.ts","../src/supportedCurrencies.ts","../src/config.ts","../src/embedUtils.ts","../src/isStream.ts","../src/loglevel.ts","../src/messages.ts","../src/utils.ts","../src/inpage-provider.ts","../src/PopupHandler.ts","../src/siteMetadata.ts","../src/embed.ts"],"sourcesContent":["import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\",\n} as const;\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  RAMPNETWORK: \"rampnetwork\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\",\n} as const;\n\nexport const SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n  ARBITRUM_MAINNET: \"arbitrum_mainnet\",\n  OPTIMISM_MAINNET: \"optimism_mainnet\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\",\n  ALPHA: \"alpha\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = (typeof PAYMENT_PROVIDER)[keyof typeof PAYMENT_PROVIDER];\n\nexport type SUPPORTED_PAYMENT_NETWORK_TYPE = (typeof SUPPORTED_PAYMENT_NETWORK)[keyof typeof SUPPORTED_PAYMENT_NETWORK];\n\nexport type TORUS_BUILD_ENV_TYPE = (typeof TORUS_BUILD_ENV)[keyof typeof TORUS_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrenciesByChain: Partial<Record<string, { value: string; display: string }[]>>;\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\nexport type ETHEREUM_NETWORK_TYPE = \"sepolia\" | \"mainnet\" | \"goerli\" | \"localhost\" | \"matic\" | \"mumbai\" | \"xdai\" | \"bsc_mainnet\" | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\"\n  | \"wechat\"\n  | \"kakao\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Size of the widget button\n   * @defaultValue 56\n   */\n  buttonSize?: number;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface TorusLoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Chain Network to use\n   */\n  chainNetwork?: SUPPORTED_PAYMENT_NETWORK_TYPE;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * Returns if the logged in user is new\n   */\n  isNewUser: boolean;\n\n  /**\n   * login type of the logged in user (google, facebook etc)\n   */\n  typeOfLogin: LOGIN_TYPE;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\n\nexport interface TorusParams {\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * bnb uses https://bnb.tor.us,\n   *\n   * polygon uses https://polygon.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n\n  /**\n   * Setting `useWalletConnect` to true allows to display wallet connect qr scanner from torus-embed.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useWalletConnect?: boolean;\n\n  /**\n   * Setting mfa level to `default` will present mfa screen to user on every third login\n   * Setting mfa level to `optional` will present mfa screen to user on every login but user can skip it\n   * Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login\n   * Setting mfa level to`none` will make the user skip the mfa setup screen\n   *\n   * Defaults to default\n   * @defaultValue default\n   */\n  mfaLevel?: \"none\" | \"default\" | \"optional\" | \"mandatory\";\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n","import { PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE } from \"./interfaces\";\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nexport const CRYPTO_COMPARE_CURRENCIES = [\n  \"ETH\",\n  \"USDT\",\n  \"USDC\",\n  \"TUSD\",\n  \"EOSDT\",\n  \"USD\",\n  \"DAI\",\n  \"GUSD\",\n  \"DKKT\",\n  \"PAX\",\n  \"ILS\",\n  \"RUB\",\n  \"BYN\",\n  \"EUR\",\n  \"GBP\",\n  \"JPY\",\n  \"KRW\",\n  \"PLN\",\n  \"MXN\",\n  \"AUD\",\n  \"BRL\",\n  \"CAD\",\n  \"CHF\",\n  \"KPW\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"XOF\",\n  \"CNHT\",\n  \"DOGE\",\n  \"UAH\",\n  \"TRY\",\n  \"HKD\",\n  \"XJP\",\n  \"SGD\",\n  \"USC\",\n  \"NZD\",\n  \"NGN\",\n  \"RUR\",\n  \"COP\",\n  \"GHS\",\n  \"EGP\",\n  \"IDR\",\n  \"BHD\",\n  \"CRC\",\n  \"PEN\",\n  \"AED\",\n  \"DOP\",\n  \"PKR\",\n  \"HUF\",\n  \"VND\",\n  \"XAR\",\n  \"LTC\",\n  \"RON\",\n  \"OMR\",\n  \"MYR\",\n  \"DKK\",\n  \"UGX\",\n  \"ZMW\",\n  \"SAR\",\n  \"SEK\",\n  \"GEL\",\n  \"RWF\",\n  \"IRR\",\n  \"TZS\",\n  \"CNY\",\n  \"VEF\",\n  \"BDT\",\n  \"HRK\",\n  \"CLP\",\n  \"THB\",\n  \"XAF\",\n  \"ARS\",\n  \"UYU\",\n  \"SZL\",\n  \"KZT\",\n  \"NOK\",\n  \"KES\",\n  \"PAB\",\n  \"INR\",\n  \"CZK\",\n  \"MAD\",\n  \"TWD\",\n  \"PHP\",\n  \"ZAR\",\n  \"BOB\",\n  \"CDF\",\n  \"DASH\",\n  \"VES\",\n  \"ISK\",\n  \"MWK\",\n  \"BAM\",\n  \"TTD\",\n  \"XRP\",\n  \"JOD\",\n  \"RSD\",\n  \"HNL\",\n  \"BGN\",\n  \"GTQ\",\n  \"BWP\",\n  \"XMR\",\n  \"MMK\",\n  \"QAR\",\n  \"AOA\",\n  \"KWD\",\n  \"MUR\",\n  \"WUSD\",\n  \"WEUR\",\n  \"WAVES\",\n  \"WTRY\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"AWG\",\n  \"MDL\",\n  \"BTO\",\n  \"EURS\",\n  \"CHFT\",\n  \"MKD\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MVR\",\n  \"VOLLAR\",\n  \"CKUSD\",\n  \"KHR\",\n  \"VUV\",\n  \"BITCNY\",\n  \"QC\",\n  \"BBD\",\n  \"NAD\",\n  \"NPR\",\n  \"PGK\",\n  \"PYG\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"XLM\",\n  \"BNB\",\n  \"SCR\",\n  \"BAT\",\n  \"CRO\",\n  \"HT\",\n  \"KCS\",\n  \"LEO\",\n  \"LINK\",\n  \"MKR\",\n  \"NPXS\",\n  \"OMG\",\n  \"REP\",\n  \"ZB\",\n  \"ZIL\",\n  \"ZRX\",\n  \"BCH\",\n  \"BZD\",\n  \"CUP\",\n  \"CVE\",\n  \"DJF\",\n  \"DZD\",\n  \"ERN\",\n  \"ETB\",\n  \"FJD\",\n  \"FKP\",\n  \"BUSD\",\n  \"ANCT\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"CNYX\",\n  \"IQD\",\n  \"UZS\",\n  \"TND\",\n  \"GGP\",\n  \"XAU\",\n  \"KGS\",\n  \"GIP\",\n  \"JMD\",\n  \"ZEC\",\n  \"USDP\",\n  \"BSV\",\n  \"EMC2\",\n  \"SNT\",\n  \"GTO\",\n  \"POWR\",\n  \"EUSD\",\n  \"EURT\",\n  \"BCY\",\n  \"BTS\",\n  \"ATM\",\n  \"BLOCKPAY\",\n  \"ARDR\",\n  \"AMP\",\n  \"B2X\",\n  \"BITGOLD\",\n  \"BITEUR\",\n  \"ATB\",\n  \"BITUSD\",\n  \"AGRS\",\n  \"DFXT\",\n  \"HIKEN\",\n  \"BIX\",\n  \"KNC\",\n  \"EOS\",\n  \"COB\",\n  \"COSS\",\n  \"BMH\",\n  \"NANO\",\n  \"BDG\",\n  \"BNT\",\n  \"XVG\",\n  \"LKK1Y\",\n  \"LKK\",\n  \"USDK\",\n  \"EURN\",\n  \"NZDT\",\n  \"JSE\",\n  \"GMD\",\n  \"GNF\",\n  \"GYD\",\n  \"YER\",\n  \"XPF\",\n  \"HTG\",\n  \"SLL\",\n  \"SOS\",\n  \"WST\",\n  \"SVC\",\n  \"SYP\",\n  \"NEO\",\n  \"KMF\",\n  \"JUMP\",\n  \"AYA\",\n  \"BLAST\",\n  \"WGR\",\n  \"BCN\",\n  \"BTG\",\n  \"URALS\",\n  \"INN\",\n  \"USDQ\",\n  \"CNH\",\n  \"HUSD\",\n  \"BKRW\",\n  \"NZDX\",\n  \"EURX\",\n  \"CADX\",\n  \"USDEX\",\n  \"JPYX\",\n  \"AUDX\",\n  \"VNDC\",\n  \"EON\",\n  \"GBPX\",\n  \"CHFX\",\n  \"USDJ\",\n  \"IDRT\",\n  \"USDS\",\n  \"USDN\",\n  \"BIDR\",\n  \"IDK\",\n  \"BSD\",\n  \"BTN\",\n  \"KYD\",\n  \"NIO\",\n  \"SBD\",\n  \"SDG\",\n  \"SHP\",\n  \"TOP\",\n  \"XCD\",\n  \"XCHF\",\n  \"CNYT\",\n  \"GYEN\",\n  \"ZUSD\",\n  \"GOLD\",\n  \"TRX\",\n  \"TRYB\",\n  \"PLATC\",\n  \"STRAX\",\n  \"UST\",\n  \"GLM\",\n  \"VAI\",\n  \"BRZ\",\n  \"DDRST\",\n  \"XAUT\",\n  \"MIM\",\n];\n\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\n    \"AUD\",\n    \"BGN\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CNY\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EGP\",\n    \"EUR\",\n    \"GBP\",\n    \"HKD\",\n    \"HRK\",\n    \"IDR\",\n    \"ILS\",\n    \"JPY\",\n    \"JOD\",\n    \"KES\",\n    \"KRW\",\n    \"KWD\",\n    \"LKR\",\n    \"MAD\",\n    \"MXN\",\n    \"MYR\",\n    \"NGN\",\n    \"NOK\",\n    \"NZD\",\n    \"OMR\",\n    \"PEN\",\n    \"PKR\",\n    \"PLN\",\n    \"RON\",\n    \"RUB\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TWD\",\n    \"USD\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  // https://support.ramp.network/en/articles/471-supported-fiat-currencies\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"BMD\",\n    \"BAM\",\n    \"BWP\",\n    \"BRL\",\n    \"BGN\",\n    \"COP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"GEL\",\n    \"GTQ\",\n    \"HNL\",\n    \"HUF\",\n    \"ISK\",\n    \"INR\",\n    \"ILS\",\n    \"KZT\",\n    \"KES\",\n    \"KWD\",\n    \"LAK\",\n    \"MKD\",\n    \"MYR\",\n    \"MXN\",\n    \"MDL\",\n    \"MZN\",\n    \"NZD\",\n    \"NGN\",\n    \"PYG\",\n    \"PEN\",\n    \"PLN\",\n    \"RON\",\n    \"RSD\",\n    \"SGD\",\n    \"ZAR\",\n    \"LKR\",\n    \"SEK\",\n    \"CHF\",\n    \"TJS\",\n    \"THB\",\n    \"UYU\",\n  ],\n  // https://help.mercuryo.io/en/articles/6121246-which-fiat-currencies-are-supported\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\n    \"EUR\",\n    \"USD\",\n    \"GBP\",\n    \"TRY\",\n    \"JPY\",\n    \"BRL\",\n    \"NGN\",\n    \"VND\",\n    \"MXN\",\n    \"KRW\",\n    \"PLN\",\n    \"SEK\",\n    \"CHF\",\n    \"CAD\",\n    \"CZK\",\n    \"DKK\",\n    \"BGN\",\n    \"HKD\",\n    \"AUD\",\n    \"INR\",\n  ],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\n    \"ARS\",\n    \"AUD\",\n    \"BBD\",\n    \"BGN\",\n    \"BMD\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CLP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GIP\",\n    \"HRK\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"ISK\",\n    \"JMD\",\n    \"JPY\",\n    \"KES\",\n    \"KRW\",\n    \"MDL\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"NZD\",\n    \"PEN\",\n    \"PHP\",\n    \"PLN\",\n    \"PYG\",\n    \"RON\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TZS\",\n    \"USD\",\n    \"ZAR\",\n  ],\n  [PAYMENT_PROVIDER.BANXA]: [\"AUD\", \"CAD\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"NOK\", \"NZD\", \"NZD\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"TRY\", \"USD\"],\n};\n\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nexport function supportedFiatCurrencies(provider: PAYMENT_PROVIDER_TYPE) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter((currency) => cryptoCompareCurrenciesSet.has(currency));\n}\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, WALLET_VERIFIERS } from \"./interfaces\";\nimport { supportedFiatCurrencies } from \"./supportedCurrencies\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"aave\", display: \"AAVE\" },\n        { value: \"bat\", display: \"BAT\" },\n        { value: \"dai\", display: \"DAI\" },\n        { value: \"eth\", display: \"ETH\" },\n        { value: \"mkr\", display: \"MKR\" },\n        { value: \"matic\", display: \"MATIC\" },\n        { value: \"usdt\", display: \"USDT\" },\n        { value: \"uni\", display: \"UNI\" },\n        { value: \"usdc\", display: \"USDC\" },\n        { value: \"weth\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"eth_polygon\", display: \"ETH\" },\n        { value: \"matic_polygon\", display: \"MATIC\" },\n        { value: \"usdc_polygon\", display: \"USDC\" },\n        { value: \"usdt_polygon\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"bnb_bsc\", display: \"BNB\" },\n        { value: \"busd_bsc\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"avax_cchain\", display: \"AVAX\" },\n        { value: \"usdc_cchain\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"eth_arbitrum\", display: \"ETH\" },\n        { value: \"usdc_arbitrum\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"eth_optimism\", display: \"ETH\" },\n        { value: \"usdc_optimism\", display: \"USDC\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"MATIC_BAT\", display: \"BAT\" },\n        { value: \"MATIC_DAI\", display: \"DAI\" },\n        { value: \"MATIC_MATIC\", display: \"MATIC\" },\n        { value: \"MATIC_USDC\", display: \"USDC\" },\n        { value: \"MATIC_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"AVAX_AVAX\", display: \"AVAX\" },\n        { value: \"AVAX_USDC\", display: \"USDC\" },\n        { value: \"AVAX_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"ARBITRUM_ETH\", display: \"ETH\" },\n        { value: \"ARBITRUM_USDC.e\t\", display: \"USDC\" },\n        { value: \"ARBITRUM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"OPTIMISM_DAI\", display: \"DAI\" },\n        { value: \"OPTIMISM_OPTIMISM\", display: \"OPTIMISM\" },\n        { value: \"OPTIMISM_USDC\", display: \"USDC\" },\n        { value: \"OPTIMISM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BSC_BNB\", display: \"BNB\" },\n        { value: \"BSC_BUSD\", display: \"BUSD\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"DAI\", display: \"DAI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"1INCH\", display: \"1INCH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"1INCH\", display: \"1INCH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"WETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"ETH\", display: \"ETH\" },\n      ],\n    },\n    includeFees: true,\n    enforceMax: true,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"UNI\", display: \"UNI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n      // [BSC_MAINNET]: [{ value: 'BNB', display: 'BNB' }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  },\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`,\n};\n","import { Stream } from \"pump\";\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function isStream(stream: any) {\n  return stream !== null && typeof stream === \"object\" && typeof stream.pipe === \"function\";\n}\n\nexport function isWritableStream(stream: any) {\n  return isStream(stream) && stream.writable !== false && typeof stream._write === \"function\" && typeof stream._writableState === \"object\";\n}\n\nexport function isReadableStream(stream: any) {\n  return isStream(stream) && stream.readable !== false && typeof stream._read === \"function\" && typeof stream._readableState === \"object\";\n}\n\nexport function isDuplexStream(stream: any) {\n  return isWritableStream(stream) && isReadableStream(stream);\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n  },\n};\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { IntegrityParams, PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE, PaymentParams, TORUS_BUILD_ENV_TYPE } from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider as PAYMENT_PROVIDER_TYPE]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider as PAYMENT_PROVIDER_TYPE];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain)\n      .flat()\n      .map((currency) => currency.value);\n\n    const finalCryptoCurrency =\n      provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency))\n      errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: { ...(req || {}), cause: \"The request 'method' must be a non-empty string.\" },\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (\n  buildEnv: TORUS_BUILD_ENV_TYPE,\n  integrity: IntegrityParams\n): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // Do not change this line\n  const version = process.env.TORUS_EMBED_VERSION;\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response: { data: string };\n      if (!config.prodTorusUrl)\n        response = await get(`${config.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, { useAPIKey: true });\n      else response = { data: config.prodTorusUrl };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      config.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    case \"alpha\":\n      torusUrl = \"https://alpha.tor.us\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { EthereumProviderError, rpcErrors } from \"@metamask/rpc-errors\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport dequal from \"fast-deep-equal\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport { isDuplexStream } from \"./isStream\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve: (value: Partial<unknown> | PromiseLike<Partial<unknown>>) => void, reject: (reason?: unknown) => void, unwrapResult = true) =>\n  (error: Error, response: { result?: unknown; error?: unknown }) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isTorus: true;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...TorusInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback as (...args: unknown[]) => void);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = ((err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        }) as (...args: unknown[]) => void;\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false) as (...args: unknown[]) => void\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInpageProvider;\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { getPopupFeatures } from \"./utils\";\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: URL; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { get, setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport { handleStream, htmlToElement } from \"./embedUtils\";\nimport TorusInpageProvider from \"./inpage-provider\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  LocaleLinks,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getTorusUrl,\n  getUserLanguage,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n  \"wallet_addEthereumChain\",\n  \"wallet_switchEthereumChain\",\n];\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\", { version: \"\" });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  buttonSize: number;\n\n  torusUrl: string;\n\n  torusIframe: HTMLIFrameElement;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusWidgetVisibility: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: TorusInpageProvider;\n\n  provider: TorusInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isLoginCallback: () => void;\n\n  paymentProviders = configuration.paymentProviders;\n\n  private loginHint = \"\";\n\n  private useWalletConnect: boolean;\n\n  private isCustomLogin = false;\n\n  constructor({ buttonPosition = BUTTON_POSITION.BOTTOM_LEFT, buttonSize = 56, modalZIndex = 99999, apiKey = \"torus-default\" }: TorusCtorArgs = {}) {\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network = {\n      host: \"mainnet\",\n      chainId: null,\n      networkName: \"\",\n      blockExplorer: \"\",\n      ticker: \"\",\n      tickerName: \"\",\n    },\n    loginConfig = {},\n    showTorusButton = true,\n    integrity = {\n      version: \"\",\n    },\n    whiteLabel,\n    useWalletConnect = false,\n    mfaLevel = \"default\",\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";\n    else torusIframeUrl.pathname += \"/popup\";\n\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations =\n      mergedTranslations[defaultLanguage as keyof LocaleLinks<unknown>] ||\n      configuration.translations[getUserLanguage() as keyof LocaleLinks<unknown>];\n    this.embedTranslations = languageTranslations.embed;\n\n    return new Promise((resolve, reject) => {\n      this.torusIframe.onload = async () => {\n        // only do this if iframe is not full screen\n        this._setupWeb3();\n        const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n        initStream.on(\"data\", (chunk) => {\n          const { name, data, error } = chunk;\n          if (name === \"init_complete\" && data.success) {\n            // resolve promise\n            this.isInitialized = true;\n            this._displayIframe(this.isIframeFullScreen);\n            resolve(undefined);\n          } else if (error) {\n            reject(new Error(error));\n          }\n        });\n        initStream.write({\n          name: \"init_stream\",\n          data: {\n            loginConfig,\n            whiteLabel: this.whiteLabel,\n            buttonPosition: this.buttonPosition,\n            buttonSize: this.buttonSize,\n            torusWidgetVisibility: this.torusWidgetVisibility,\n            apiKey: this.apiKey,\n            network,\n            mfaLevel,\n          },\n        });\n      };\n      window.document.head.appendChild(this.styleLink);\n      window.document.body.appendChild(this.torusIframe);\n      window.document.body.appendChild(this.torusAlertContainer);\n    });\n  }\n\n  login({ verifier = \"\", login_hint: loginHint = \"\" }: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (arg: unknown) => {\n        const status = arg as { loggedIn: boolean };\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest }: NetworkInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (arg: unknown) => {\n        const chunk = arg as { data: { err: string; success: boolean } };\n        const { err, success } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occurred\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW,\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (arg: unknown) => {\n      const chunk = arg as { name: string; data: { instanceId: string } };\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(\n      url.href,\n      {\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n      },\n      { useAPIKey: true }\n    );\n  }\n\n  getUserInfo(message: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { approved: boolean; payload: UserInfo; rejected: boolean; newRequest: boolean } };\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (arg2: unknown) => {\n                const handlerChunk = arg2 as { name: string; data: { approved: boolean; payload: UserInfo } };\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: Omit<UserInfo, \"isNewUser\"> }): Promise<boolean> {\n    const { privateKey, userInfo } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\") as Substream;\n        const loginHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({ name: \"login_with_private_key_request\", data: { privateKey, userInfo } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner(): Promise<boolean> {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\") as Substream;\n        const walletConnectHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({ name: \"wallet_connect_stream_req\" });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;\n      else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }: { preopenInstanceId: string; close: boolean }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\") as Substream;\n    torusWidgetVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected _setupWeb3(): void {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m: any) => {\n      // @ts-ignore\n      const originalMethod = inpageProvider[m];\n      // @ts-ignore\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void): void {\n    const loginHandler = (arg: unknown) => {\n      const data = arg as { err: Error; selectedAddress: string };\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({ name: \"oauth_modal\", data: { calledFromEmbed } });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: { calledFromEmbed, verifier: this.requestedVerifier, preopenInstanceId, login_hint: this.loginHint },\n      });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    this._setEmbedWhiteLabel(torusAlert);\n\n    this.torusAlertContainer.style.display = \"block\";\n    this.torusAlertContainer.appendChild(torusAlert);\n\n    successAlert.addEventListener(\"click\", () => {\n      this._handleWindow(preopenInstanceId, {\n        url,\n        target: \"_blank\",\n        features: FEATURES_CONFIRM_WINDOW,\n      });\n      torusAlert.remove();\n\n      if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n    });\n  }\n}\n\nexport default Torus;\n"],"names":["WALLET_VERIFIERS","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","RAMPNETWORK","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","ARBITRUM_MAINNET","OPTIMISM_MAINNET","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","ALPHA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","htmlToElement","html","template","window","document","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleStream","handle","eventName","handler","handlerWrapper","chunk","removeListener","on","isStream","stream","pipe","isWritableStream","writable","_write","_writableState","isReadableStream","readable","_read","_readableState","isDuplexStream","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","config","validatePaymentProvider","params","isValid","keys","length","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","rpcErrors","invalidRequest","message","data","_objectSpread","cause","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","versionUsed","response","get","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","SafeEventEmitter","defaultMaxListeners","getRpcPromiseCallback","resolve","reject","unwrapResult","arguments","Array","isArray","result","TorusInpageProvider","constructor","connectionStream","jsonRpcStreamName","_defineProperty","Error","messages","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_initializeState","request","send","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","isConnected","jsonRpcConnection","createStreamMiddleware","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcEngine","events","payload","type","args","Promise","callback","accounts","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumProviderError","streamName","isEthAccounts","finalAccounts","account","dequal","hasEmittedConnection","PopupHandler","_ref","url","target","timeout","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","open","_this$window","href","focus","close","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","engine","domainMetadata","originalError","UNSAFE_METHODS","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","Torus","buttonPosition","buttonSize","modalZIndex","apiKey","configuration","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","setAPIKey","alertZIndex","isIframeFullScreen","init","enableLogging","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","hash","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","body","login","verifier","login_hint","loginHint","ethereum","enable","logout","logOutStream","statusStream","statusStreamHandler","arg","status","loggedIn","cleanUp","clearInit","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","_objectWithoutProperties","_excluded","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","forEach","x","walletWindow","getPublicAddress","_ref2","verifierId","isExtended","walletVerifier","openloginVerifier","headers","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","arg2","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","once","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","_this$whiteLabel","logoUrl","_this$whiteLabel2","logoLight","_this$whiteLabel3","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","_len","_key","apply","handleLoginCb","then","_","_showLoginPopup","catch","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","addEventListener","children"],"mappings":"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"}