{"version":3,"file":"torus.cjs.js","mappings":"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","sources":["webpack://@toruslabs/torus-embed/webpack/bootstrap","webpack://@toruslabs/torus-embed/webpack/runtime/compat get default export","webpack://@toruslabs/torus-embed/webpack/runtime/define property getters","webpack://@toruslabs/torus-embed/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/torus-embed/webpack/runtime/make namespace object","webpack://@toruslabs/torus-embed/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@toruslabs/torus-embed/external commonjs2 \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@toruslabs/torus-embed/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/torus-embed/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@toruslabs/torus-embed/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@toruslabs/torus-embed/external commonjs2 \"lodash.merge\"","webpack://@toruslabs/torus-embed/./src/interfaces.ts","webpack://@toruslabs/torus-embed/./src/supportedCurrencies.ts","webpack://@toruslabs/torus-embed/./src/config.ts","webpack://@toruslabs/torus-embed/./src/embedUtils.ts","webpack://@toruslabs/torus-embed/external commonjs2 \"@metamask/rpc-errors\"","webpack://@toruslabs/torus-embed/external commonjs2 \"fast-deep-equal\"","webpack://@toruslabs/torus-embed/external commonjs2 \"pump\"","webpack://@toruslabs/torus-embed/./src/isStream.ts","webpack://@toruslabs/torus-embed/external commonjs2 \"loglevel\"","webpack://@toruslabs/torus-embed/./src/loglevel.ts","webpack://@toruslabs/torus-embed/./src/messages.ts","webpack://@toruslabs/torus-embed/./src/utils.ts","webpack://@toruslabs/torus-embed/./src/inpage-provider.ts","webpack://@toruslabs/torus-embed/./src/PopupHandler.ts","webpack://@toruslabs/torus-embed/./src/siteMetadata.ts","webpack://@toruslabs/torus-embed/./src/embed.ts","webpack://@toruslabs/torus-embed/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectSpread2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\",\n} as const;\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  RAMPNETWORK: \"rampnetwork\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\",\n} as const;\n\nexport const SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n  ARBITRUM_MAINNET: \"arbitrum_mainnet\",\n  OPTIMISM_MAINNET: \"optimism_mainnet\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\",\n  ALPHA: \"alpha\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = (typeof PAYMENT_PROVIDER)[keyof typeof PAYMENT_PROVIDER];\n\nexport type SUPPORTED_PAYMENT_NETWORK_TYPE = (typeof SUPPORTED_PAYMENT_NETWORK)[keyof typeof SUPPORTED_PAYMENT_NETWORK];\n\nexport type TORUS_BUILD_ENV_TYPE = (typeof TORUS_BUILD_ENV)[keyof typeof TORUS_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrenciesByChain: Partial<Record<string, { value: string; display: string }[]>>;\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\nexport type ETHEREUM_NETWORK_TYPE = \"sepolia\" | \"mainnet\" | \"goerli\" | \"localhost\" | \"matic\" | \"mumbai\" | \"xdai\" | \"bsc_mainnet\" | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\"\n  | \"wechat\"\n  | \"kakao\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Size of the widget button\n   * @defaultValue 56\n   */\n  buttonSize?: number;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface TorusLoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Chain Network to use\n   */\n  chainNetwork?: SUPPORTED_PAYMENT_NETWORK_TYPE;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * Returns if the logged in user is new\n   */\n  isNewUser: boolean;\n\n  /**\n   * login type of the logged in user (google, facebook etc)\n   */\n  typeOfLogin: LOGIN_TYPE;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\n\nexport interface TorusParams {\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * bnb uses https://bnb.tor.us,\n   *\n   * polygon uses https://polygon.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n\n  /**\n   * Setting `useWalletConnect` to true allows to display wallet connect qr scanner from torus-embed.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useWalletConnect?: boolean;\n\n  /**\n   * Setting mfa level to `default` will present mfa screen to user on every third login\n   * Setting mfa level to `optional` will present mfa screen to user on every login but user can skip it\n   * Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login\n   * Setting mfa level to`none` will make the user skip the mfa setup screen\n   *\n   * Defaults to default\n   * @defaultValue default\n   */\n  mfaLevel?: \"none\" | \"default\" | \"optional\" | \"mandatory\";\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n","import { PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE } from \"./interfaces\";\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nexport const CRYPTO_COMPARE_CURRENCIES = [\n  \"ETH\",\n  \"USDT\",\n  \"USDC\",\n  \"TUSD\",\n  \"EOSDT\",\n  \"USD\",\n  \"DAI\",\n  \"GUSD\",\n  \"DKKT\",\n  \"PAX\",\n  \"ILS\",\n  \"RUB\",\n  \"BYN\",\n  \"EUR\",\n  \"GBP\",\n  \"JPY\",\n  \"KRW\",\n  \"PLN\",\n  \"MXN\",\n  \"AUD\",\n  \"BRL\",\n  \"CAD\",\n  \"CHF\",\n  \"KPW\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"XOF\",\n  \"CNHT\",\n  \"DOGE\",\n  \"UAH\",\n  \"TRY\",\n  \"HKD\",\n  \"XJP\",\n  \"SGD\",\n  \"USC\",\n  \"NZD\",\n  \"NGN\",\n  \"RUR\",\n  \"COP\",\n  \"GHS\",\n  \"EGP\",\n  \"IDR\",\n  \"BHD\",\n  \"CRC\",\n  \"PEN\",\n  \"AED\",\n  \"DOP\",\n  \"PKR\",\n  \"HUF\",\n  \"VND\",\n  \"XAR\",\n  \"LTC\",\n  \"RON\",\n  \"OMR\",\n  \"MYR\",\n  \"DKK\",\n  \"UGX\",\n  \"ZMW\",\n  \"SAR\",\n  \"SEK\",\n  \"GEL\",\n  \"RWF\",\n  \"IRR\",\n  \"TZS\",\n  \"CNY\",\n  \"VEF\",\n  \"BDT\",\n  \"HRK\",\n  \"CLP\",\n  \"THB\",\n  \"XAF\",\n  \"ARS\",\n  \"UYU\",\n  \"SZL\",\n  \"KZT\",\n  \"NOK\",\n  \"KES\",\n  \"PAB\",\n  \"INR\",\n  \"CZK\",\n  \"MAD\",\n  \"TWD\",\n  \"PHP\",\n  \"ZAR\",\n  \"BOB\",\n  \"CDF\",\n  \"DASH\",\n  \"VES\",\n  \"ISK\",\n  \"MWK\",\n  \"BAM\",\n  \"TTD\",\n  \"XRP\",\n  \"JOD\",\n  \"RSD\",\n  \"HNL\",\n  \"BGN\",\n  \"GTQ\",\n  \"BWP\",\n  \"XMR\",\n  \"MMK\",\n  \"QAR\",\n  \"AOA\",\n  \"KWD\",\n  \"MUR\",\n  \"WUSD\",\n  \"WEUR\",\n  \"WAVES\",\n  \"WTRY\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"AWG\",\n  \"MDL\",\n  \"BTO\",\n  \"EURS\",\n  \"CHFT\",\n  \"MKD\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MVR\",\n  \"VOLLAR\",\n  \"CKUSD\",\n  \"KHR\",\n  \"VUV\",\n  \"BITCNY\",\n  \"QC\",\n  \"BBD\",\n  \"NAD\",\n  \"NPR\",\n  \"PGK\",\n  \"PYG\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"XLM\",\n  \"BNB\",\n  \"SCR\",\n  \"BAT\",\n  \"CRO\",\n  \"HT\",\n  \"KCS\",\n  \"LEO\",\n  \"LINK\",\n  \"MKR\",\n  \"NPXS\",\n  \"OMG\",\n  \"REP\",\n  \"ZB\",\n  \"ZIL\",\n  \"ZRX\",\n  \"BCH\",\n  \"BZD\",\n  \"CUP\",\n  \"CVE\",\n  \"DJF\",\n  \"DZD\",\n  \"ERN\",\n  \"ETB\",\n  \"FJD\",\n  \"FKP\",\n  \"BUSD\",\n  \"ANCT\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"CNYX\",\n  \"IQD\",\n  \"UZS\",\n  \"TND\",\n  \"GGP\",\n  \"XAU\",\n  \"KGS\",\n  \"GIP\",\n  \"JMD\",\n  \"ZEC\",\n  \"USDP\",\n  \"BSV\",\n  \"EMC2\",\n  \"SNT\",\n  \"GTO\",\n  \"POWR\",\n  \"EUSD\",\n  \"EURT\",\n  \"BCY\",\n  \"BTS\",\n  \"ATM\",\n  \"BLOCKPAY\",\n  \"ARDR\",\n  \"AMP\",\n  \"B2X\",\n  \"BITGOLD\",\n  \"BITEUR\",\n  \"ATB\",\n  \"BITUSD\",\n  \"AGRS\",\n  \"DFXT\",\n  \"HIKEN\",\n  \"BIX\",\n  \"KNC\",\n  \"EOS\",\n  \"COB\",\n  \"COSS\",\n  \"BMH\",\n  \"NANO\",\n  \"BDG\",\n  \"BNT\",\n  \"XVG\",\n  \"LKK1Y\",\n  \"LKK\",\n  \"USDK\",\n  \"EURN\",\n  \"NZDT\",\n  \"JSE\",\n  \"GMD\",\n  \"GNF\",\n  \"GYD\",\n  \"YER\",\n  \"XPF\",\n  \"HTG\",\n  \"SLL\",\n  \"SOS\",\n  \"WST\",\n  \"SVC\",\n  \"SYP\",\n  \"NEO\",\n  \"KMF\",\n  \"JUMP\",\n  \"AYA\",\n  \"BLAST\",\n  \"WGR\",\n  \"BCN\",\n  \"BTG\",\n  \"URALS\",\n  \"INN\",\n  \"USDQ\",\n  \"CNH\",\n  \"HUSD\",\n  \"BKRW\",\n  \"NZDX\",\n  \"EURX\",\n  \"CADX\",\n  \"USDEX\",\n  \"JPYX\",\n  \"AUDX\",\n  \"VNDC\",\n  \"EON\",\n  \"GBPX\",\n  \"CHFX\",\n  \"USDJ\",\n  \"IDRT\",\n  \"USDS\",\n  \"USDN\",\n  \"BIDR\",\n  \"IDK\",\n  \"BSD\",\n  \"BTN\",\n  \"KYD\",\n  \"NIO\",\n  \"SBD\",\n  \"SDG\",\n  \"SHP\",\n  \"TOP\",\n  \"XCD\",\n  \"XCHF\",\n  \"CNYT\",\n  \"GYEN\",\n  \"ZUSD\",\n  \"GOLD\",\n  \"TRX\",\n  \"TRYB\",\n  \"PLATC\",\n  \"STRAX\",\n  \"UST\",\n  \"GLM\",\n  \"VAI\",\n  \"BRZ\",\n  \"DDRST\",\n  \"XAUT\",\n  \"MIM\",\n];\n\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\n    \"AUD\",\n    \"BGN\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CNY\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EGP\",\n    \"EUR\",\n    \"GBP\",\n    \"HKD\",\n    \"HRK\",\n    \"IDR\",\n    \"ILS\",\n    \"JPY\",\n    \"JOD\",\n    \"KES\",\n    \"KRW\",\n    \"KWD\",\n    \"LKR\",\n    \"MAD\",\n    \"MXN\",\n    \"MYR\",\n    \"NGN\",\n    \"NOK\",\n    \"NZD\",\n    \"OMR\",\n    \"PEN\",\n    \"PKR\",\n    \"PLN\",\n    \"RON\",\n    \"RUB\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TWD\",\n    \"USD\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  // https://support.ramp.network/en/articles/471-supported-fiat-currencies\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"BMD\",\n    \"BAM\",\n    \"BWP\",\n    \"BRL\",\n    \"BGN\",\n    \"COP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"GEL\",\n    \"GTQ\",\n    \"HNL\",\n    \"HUF\",\n    \"ISK\",\n    \"INR\",\n    \"ILS\",\n    \"KZT\",\n    \"KES\",\n    \"KWD\",\n    \"LAK\",\n    \"MKD\",\n    \"MYR\",\n    \"MXN\",\n    \"MDL\",\n    \"MZN\",\n    \"NZD\",\n    \"NGN\",\n    \"PYG\",\n    \"PEN\",\n    \"PLN\",\n    \"RON\",\n    \"RSD\",\n    \"SGD\",\n    \"ZAR\",\n    \"LKR\",\n    \"SEK\",\n    \"CHF\",\n    \"TJS\",\n    \"THB\",\n    \"UYU\",\n  ],\n  // https://help.mercuryo.io/en/articles/6121246-which-fiat-currencies-are-supported\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\n    \"EUR\",\n    \"USD\",\n    \"GBP\",\n    \"TRY\",\n    \"JPY\",\n    \"BRL\",\n    \"NGN\",\n    \"VND\",\n    \"MXN\",\n    \"KRW\",\n    \"PLN\",\n    \"SEK\",\n    \"CHF\",\n    \"CAD\",\n    \"CZK\",\n    \"DKK\",\n    \"BGN\",\n    \"HKD\",\n    \"AUD\",\n    \"INR\",\n  ],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\n    \"ARS\",\n    \"AUD\",\n    \"BBD\",\n    \"BGN\",\n    \"BMD\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CLP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GIP\",\n    \"HRK\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"ISK\",\n    \"JMD\",\n    \"JPY\",\n    \"KES\",\n    \"KRW\",\n    \"MDL\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"NZD\",\n    \"PEN\",\n    \"PHP\",\n    \"PLN\",\n    \"PYG\",\n    \"RON\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TZS\",\n    \"USD\",\n    \"ZAR\",\n  ],\n  [PAYMENT_PROVIDER.BANXA]: [\"AUD\", \"CAD\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"NOK\", \"NZD\", \"NZD\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"TRY\", \"USD\"],\n};\n\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nexport function supportedFiatCurrencies(provider: PAYMENT_PROVIDER_TYPE) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter((currency) => cryptoCompareCurrenciesSet.has(currency));\n}\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, WALLET_VERIFIERS } from \"./interfaces\";\nimport { supportedFiatCurrencies } from \"./supportedCurrencies\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"aave\", display: \"AAVE\" },\n        { value: \"bat\", display: \"BAT\" },\n        { value: \"dai\", display: \"DAI\" },\n        { value: \"eth\", display: \"ETH\" },\n        { value: \"mkr\", display: \"MKR\" },\n        { value: \"matic\", display: \"MATIC\" },\n        { value: \"usdt\", display: \"USDT\" },\n        { value: \"uni\", display: \"UNI\" },\n        { value: \"usdc\", display: \"USDC\" },\n        { value: \"weth\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"eth_polygon\", display: \"ETH\" },\n        { value: \"matic_polygon\", display: \"MATIC\" },\n        { value: \"usdc_polygon\", display: \"USDC\" },\n        { value: \"usdt_polygon\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"bnb_bsc\", display: \"BNB\" },\n        { value: \"busd_bsc\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"avax_cchain\", display: \"AVAX\" },\n        { value: \"usdc_cchain\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"eth_arbitrum\", display: \"ETH\" },\n        { value: \"usdc_arbitrum\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"eth_optimism\", display: \"ETH\" },\n        { value: \"usdc_optimism\", display: \"USDC\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"MATIC_BAT\", display: \"BAT\" },\n        { value: \"MATIC_DAI\", display: \"DAI\" },\n        { value: \"MATIC_MATIC\", display: \"MATIC\" },\n        { value: \"MATIC_USDC\", display: \"USDC\" },\n        { value: \"MATIC_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"AVAX_AVAX\", display: \"AVAX\" },\n        { value: \"AVAX_USDC\", display: \"USDC\" },\n        { value: \"AVAX_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"ARBITRUM_ETH\", display: \"ETH\" },\n        { value: \"ARBITRUM_USDC.e\t\", display: \"USDC\" },\n        { value: \"ARBITRUM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"OPTIMISM_DAI\", display: \"DAI\" },\n        { value: \"OPTIMISM_OPTIMISM\", display: \"OPTIMISM\" },\n        { value: \"OPTIMISM_USDC\", display: \"USDC\" },\n        { value: \"OPTIMISM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BSC_BNB\", display: \"BNB\" },\n        { value: \"BSC_BUSD\", display: \"BUSD\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"DAI\", display: \"DAI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"1INCH\", display: \"1INCH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"1INCH\", display: \"1INCH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"WETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"ETH\", display: \"ETH\" },\n      ],\n    },\n    includeFees: true,\n    enforceMax: true,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"UNI\", display: \"UNI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n      // [BSC_MAINNET]: [{ value: 'BNB', display: 'BNB' }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  },\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`,\n};\n","import { Stream } from \"pump\";\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/rpc-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-deep-equal\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function isStream(stream: any) {\n  return stream !== null && typeof stream === \"object\" && typeof stream.pipe === \"function\";\n}\n\nexport function isWritableStream(stream: any) {\n  return isStream(stream) && stream.writable !== false && typeof stream._write === \"function\" && typeof stream._writableState === \"object\";\n}\n\nexport function isReadableStream(stream: any) {\n  return isStream(stream) && stream.readable !== false && typeof stream._read === \"function\" && typeof stream._readableState === \"object\";\n}\n\nexport function isDuplexStream(stream: any) {\n  return isWritableStream(stream) && isReadableStream(stream);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n  },\n};\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { IntegrityParams, PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE, PaymentParams, TORUS_BUILD_ENV_TYPE } from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider as PAYMENT_PROVIDER_TYPE]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider as PAYMENT_PROVIDER_TYPE];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain)\n      .flat()\n      .map((currency) => currency.value);\n\n    const finalCryptoCurrency =\n      provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency))\n      errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: { ...(req || {}), cause: \"The request 'method' must be a non-empty string.\" },\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (\n  buildEnv: TORUS_BUILD_ENV_TYPE,\n  integrity: IntegrityParams\n): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // Do not change this line\n  const version = process.env.TORUS_EMBED_VERSION;\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response: { data: string };\n      if (!config.prodTorusUrl)\n        response = await get(`${config.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, { useAPIKey: true });\n      else response = { data: config.prodTorusUrl };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      config.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    case \"alpha\":\n      torusUrl = \"https://alpha.tor.us\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { EthereumProviderError, rpcErrors } from \"@metamask/rpc-errors\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport dequal from \"fast-deep-equal\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport { isDuplexStream } from \"./isStream\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve: (value: Partial<unknown> | PromiseLike<Partial<unknown>>) => void, reject: (reason?: unknown) => void, unwrapResult = true) =>\n  (error: Error, response: { result?: unknown; error?: unknown }) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isTorus: true;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...TorusInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject) as (...args: unknown[]) => void);\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback as (...args: unknown[]) => void);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = ((err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        }) as (...args: unknown[]) => void;\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false) as (...args: unknown[]) => void\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInpageProvider;\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { getPopupFeatures } from \"./utils\";\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: URL; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { get, setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport { handleStream, htmlToElement } from \"./embedUtils\";\nimport TorusInpageProvider from \"./inpage-provider\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  LocaleLinks,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getTorusUrl,\n  getUserLanguage,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n  \"wallet_addEthereumChain\",\n  \"wallet_switchEthereumChain\",\n];\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\", { version: \"\" });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  buttonSize: number;\n\n  torusUrl: string;\n\n  torusIframe: HTMLIFrameElement;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusWidgetVisibility: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: TorusInpageProvider;\n\n  provider: TorusInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isLoginCallback: () => void;\n\n  paymentProviders = configuration.paymentProviders;\n\n  private loginHint = \"\";\n\n  private useWalletConnect: boolean;\n\n  private isCustomLogin = false;\n\n  constructor({ buttonPosition = BUTTON_POSITION.BOTTOM_LEFT, buttonSize = 56, modalZIndex = 99999, apiKey = \"torus-default\" }: TorusCtorArgs = {}) {\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network = {\n      host: \"mainnet\",\n      chainId: null,\n      networkName: \"\",\n      blockExplorer: \"\",\n      ticker: \"\",\n      tickerName: \"\",\n    },\n    loginConfig = {},\n    showTorusButton = true,\n    integrity = {\n      version: \"\",\n    },\n    whiteLabel,\n    useWalletConnect = false,\n    mfaLevel = \"default\",\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";\n    else torusIframeUrl.pathname += \"/popup\";\n\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations =\n      mergedTranslations[defaultLanguage as keyof LocaleLinks<unknown>] ||\n      configuration.translations[getUserLanguage() as keyof LocaleLinks<unknown>];\n    this.embedTranslations = languageTranslations.embed;\n\n    return new Promise((resolve, reject) => {\n      this.torusIframe.onload = async () => {\n        // only do this if iframe is not full screen\n        this._setupWeb3();\n        const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n        initStream.on(\"data\", (chunk) => {\n          const { name, data, error } = chunk;\n          if (name === \"init_complete\" && data.success) {\n            // resolve promise\n            this.isInitialized = true;\n            this._displayIframe(this.isIframeFullScreen);\n            resolve(undefined);\n          } else if (error) {\n            reject(new Error(error));\n          }\n        });\n        initStream.write({\n          name: \"init_stream\",\n          data: {\n            loginConfig,\n            whiteLabel: this.whiteLabel,\n            buttonPosition: this.buttonPosition,\n            buttonSize: this.buttonSize,\n            torusWidgetVisibility: this.torusWidgetVisibility,\n            apiKey: this.apiKey,\n            network,\n            mfaLevel,\n          },\n        });\n      };\n      window.document.head.appendChild(this.styleLink);\n      window.document.body.appendChild(this.torusIframe);\n      window.document.body.appendChild(this.torusAlertContainer);\n    });\n  }\n\n  login({ verifier = \"\", login_hint: loginHint = \"\" }: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (arg: unknown) => {\n        const status = arg as { loggedIn: boolean };\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest }: NetworkInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (arg: unknown) => {\n        const chunk = arg as { data: { err: string; success: boolean } };\n        const { err, success } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occurred\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW,\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (arg: unknown) => {\n      const chunk = arg as { name: string; data: { instanceId: string } };\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(\n      url.href,\n      {\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n      },\n      { useAPIKey: true }\n    );\n  }\n\n  getUserInfo(message: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { approved: boolean; payload: UserInfo; rejected: boolean; newRequest: boolean } };\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (arg2: unknown) => {\n                const handlerChunk = arg2 as { name: string; data: { approved: boolean; payload: UserInfo } };\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: Omit<UserInfo, \"isNewUser\"> }): Promise<boolean> {\n    const { privateKey, userInfo } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\") as Substream;\n        const loginHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({ name: \"login_with_private_key_request\", data: { privateKey, userInfo } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner(): Promise<boolean> {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\") as Substream;\n        const walletConnectHandler = (arg: unknown) => {\n          const chunk = arg as { name: string; data: { success: boolean; error: string } };\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({ name: \"wallet_connect_stream_req\" });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;\n      else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }: { preopenInstanceId: string; close: boolean }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\") as Substream;\n    torusWidgetVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected _setupWeb3(): void {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m: any) => {\n      // @ts-ignore\n      const originalMethod = inpageProvider[m];\n      // @ts-ignore\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void): void {\n    const loginHandler = (arg: unknown) => {\n      const data = arg as { err: Error; selectedAddress: string };\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({ name: \"oauth_modal\", data: { calledFromEmbed } });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: { calledFromEmbed, verifier: this.requestedVerifier, preopenInstanceId, login_hint: this.loginHint },\n      });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    this._setEmbedWhiteLabel(torusAlert);\n\n    this.torusAlertContainer.style.display = \"block\";\n    this.torusAlertContainer.appendChild(torusAlert);\n\n    successAlert.addEventListener(\"click\", () => {\n      this._handleWindow(preopenInstanceId, {\n        url,\n        target: \"_blank\",\n        features: FEATURES_CONFIRM_WINDOW,\n      });\n      torusAlert.remove();\n\n      if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n    });\n  }\n}\n\nexport default Torus;\n","export { default } from \"./embed\";\nexport { default as TorusInpageProvider } from \"./inpage-provider\";\nexport * from \"./interfaces\";\n"],"names":["WALLET_VERIFIERS","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","RAMPNETWORK","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","ARBITRUM_MAINNET","OPTIMISM_MAINNET","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","ALPHA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","htmlToElement","html","template","window","document","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","_len","arguments","length","handlerArgs","Array","_key","handlerWrapper","removeEventListener","addEventListener","handleStream","chunk","removeListener","on","isStream","stream","pipe","isWritableStream","writable","_write","_writableState","isReadableStream","readable","_read","_readableState","isDuplexStream","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","rpcErrors","get","config","log","validatePaymentProvider","params","isValid","keys","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","invalidRequest","message","data","_objectSpread","cause","done","getRpcPromiseCallback","resolve","reject","unwrapResult","undefined","response","isArray","result","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","process","env","TORUS_EMBED_VERSION","versionUsed","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","EthereumProviderError","createIdRemapMiddleware","createStreamMiddleware","JRPCEngine","ObjectMultiplex","SafeEventEmitter","dequal","pump","messages","defaultMaxListeners","TorusInpageProvider","constructor","connectionStream","jsonRpcStreamName","_defineProperty","Error","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_initializeState","request","send","sendAsync","mux","ignoreStream","isConnected","jsonRpcConnection","createStream","rpcEngine","push","middleware","_rpcEngine","events","payload","type","args","Promise","callback","accounts","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","streamName","isEthAccounts","finalAccounts","account","hasEmittedConnection","PopupHandler","_ref","url","target","timeout","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","open","_this$window","href","focus","close","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","engine","domainMetadata","originalError","setAPIKey","BasePostMessageStream","setupMultiplex","deepmerge","configuration","UNSAFE_METHODS","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","Torus","buttonPosition","buttonSize","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","alertZIndex","isIframeFullScreen","init","enableLogging","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","hash","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","languageTranslations","embedTranslations","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","body","login","verifier","login_hint","loginHint","ethereum","enable","logout","logOutStream","statusStream","statusStreamHandler","arg","status","loggedIn","cleanUp","clearInit","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","_objectWithoutProperties","_excluded","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","forEach","x","walletWindow","getPublicAddress","_ref2","verifierId","isExtended","walletVerifier","openloginVerifier","headers","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","arg2","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","once","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","_this$whiteLabel","logoUrl","_this$whiteLabel2","logoLight","_this$whiteLabel3","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","apply","handleLoginCb","then","_","_showLoginPopup","catch","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","children","default"],"sourceRoot":""}