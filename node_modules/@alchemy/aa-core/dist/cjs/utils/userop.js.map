{"version":3,"file":"userop.js","sourceRoot":"","sources":["../../../src/utils/userop.ts"],"names":[],"mappings":";;;AAOA,2CAAyD;AACzD,yCAA4C;AAQ5C,SAAgB,cAAc,CAC5B,OAA4B;IAG5B,OAAO,CACL,CAAC,CAAC,OAAO,CAAC,YAAY;QACtB,CAAC,CAAC,OAAO,CAAC,YAAY;QACtB,OAAO,CAAC,oBAAoB,IAAI,IAAI;QACpC,CAAC,CAAC,OAAO,CAAC,kBAAkB;QAC5B,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAC/B,CAAC;AACJ,CAAC;AAXD,wCAWC;AAED,SAAgB,mBAAmB,CACjC,KAA+B,EAC/B,QAAoC;IAEpC,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAA,yBAAc,EAAC,QAAQ,CAAC,EAAE,CAAC;QAC7B,OAAO,QAAQ,CAAC;IAClB,CAAC;SAGI,CAAC;QACJ,OAAO,KAAK,IAAI,IAAI;YAClB,CAAC,CAAC,IAAA,yBAAa,EAAC,KAAK,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;YACzD,CAAC,CAAC,KAAK,CAAC;IACZ,CAAC;AACH,CAAC;AAlBD,kDAkBC;AAED,SAAgB,oBAAoB,CAClC,KAA+B,EAC/B,SAAwC;IAExC,IAAI,SAAS,IAAI,IAAI,EAAE,CAAC;QACtB,OAAO,KAAK,IAAI,EAAE,CAAC;IACrB,CAAC;IACD,OAAO,KAAK,IAAI,IAAI;QAClB,CAAC,CAAC,IAAA,uBAAW,EACT,SAAS,CAAC,UAAU;YAClB,CAAC,CAAC,IAAA,yBAAa,EAAC,KAAK,EAAE,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;YAC1D,CAAC,CAAC,KAAK,EACT,SAAS,CAAC,GAAG,EACb,SAAS,CAAC,GAAG,CACd;QACH,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC;AAC1B,CAAC;AAhBD,oDAgBC;AAED,SAAgB,8BAA8B,CAC5C,KAA+B,EAC/B,QAAoC,EACpC,SAAwC;IAExC,OAAO,KAAK,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI;QACtC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,CAAE;QACvC,CAAC,CAAC,oBAAoB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC7C,CAAC;AARD,wEAQC","sourcesContent":["import type {\n  BigNumberish,\n  Percentage,\n  UserOperationFeeOptionsField,\n  UserOperationRequest,\n  UserOperationStruct,\n} from \"../types\";\nimport { bigIntClamp, bigIntPercent } from \"./bigint.js\";\nimport { isBigNumberish } from \"./index.js\";\n\n/**\n * Utility method for asserting a {@link UserOperationStruct} is a {@link UserOperationRequest}\n *\n * @param request a {@link UserOperationStruct} to validate\n * @returns a type guard that asserts the {@link UserOperationStruct} is a {@link UserOperationRequest}\n */\nexport function isValidRequest(\n  request: UserOperationStruct\n): request is UserOperationRequest {\n  // These are the only ones marked as optional in the interface above\n  return (\n    !!request.callGasLimit &&\n    !!request.maxFeePerGas &&\n    request.maxPriorityFeePerGas != null &&\n    !!request.preVerificationGas &&\n    !!request.verificationGasLimit\n  );\n}\n\nexport function applyUserOpOverride(\n  value: BigNumberish | undefined,\n  override?: BigNumberish | Percentage\n): BigNumberish | undefined {\n  if (override == null) {\n    return value;\n  }\n\n  if (isBigNumberish(override)) {\n    return override;\n  }\n\n  // percentage override\n  else {\n    return value != null\n      ? bigIntPercent(value, BigInt(100 + override.percentage))\n      : value;\n  }\n}\n\nexport function applyUserOpFeeOption(\n  value: BigNumberish | undefined,\n  feeOption?: UserOperationFeeOptionsField\n): BigNumberish {\n  if (feeOption == null) {\n    return value ?? 0n;\n  }\n  return value != null\n    ? bigIntClamp(\n        feeOption.percentage\n          ? bigIntPercent(value, BigInt(100 + feeOption.percentage))\n          : value,\n        feeOption.min,\n        feeOption.max\n      )\n    : feeOption.min ?? 0n;\n}\n\nexport function applyUserOpOverrideOrFeeOption(\n  value: BigNumberish | undefined,\n  override?: BigNumberish | Percentage,\n  feeOption?: UserOperationFeeOptionsField\n): BigNumberish {\n  return value != null && override != null\n    ? applyUserOpOverride(value, override)!\n    : applyUserOpFeeOption(value, feeOption);\n}\n"]}