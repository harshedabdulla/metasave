import type { ISmartAccountProvider, ISmartContractAccount, UpgradeToData } from "@alchemy/aa-core";
import type { Address, Chain } from "viem";
import { createMultiOwnerMSCA } from "./multi-owner-account.js";
/**
 * Utility method returning the default multi owner msca factory address given a {@link Chain} object
 *
 * @param chain - a {@link Chain} object
 * @returns a {@link Address} for the given chain
 * @throws if the chain doesn't have an address currently deployed
 */
export declare const getDefaultMultiOwnerMSCAFactoryAddress: (chain: Chain, excludeDefaultTokenReceiverPlugin?: boolean) => Address;
export declare const getMSCAUpgradeToData: <P extends ISmartAccountProvider<import("viem").Transport> & {
    account: ISmartContractAccount;
}>(provider: P, multiOwnerPluginAddress?: Address, tokenReceiverPluginAddress?: Address) => Promise<UpgradeToData & {
    connectFn: (rpcClient: P["rpcClient"]) => ReturnType<typeof createMultiOwnerMSCA>;
}>;
//# sourceMappingURL=utils.d.ts.map