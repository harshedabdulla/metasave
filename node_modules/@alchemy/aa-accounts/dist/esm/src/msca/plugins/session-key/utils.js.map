{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../../src/msca/plugins/session-key/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAIN,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAI/C,MAAM,CAAC,MAAM,8BAA8B,GAAG,KAAK,EAGjD,QAAW,EACX,IAA4B,EAC5B,EAAE;IACF,MAAM,QAAQ,GAAG,gBAAgB,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAClE,OAAO,CACL,MAAM,OAAO,CAAC,GAAG,CACf,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACrB,OAAO;YACL,GAAG;YACH,MAAM,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;gBAClC,MAAM,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE;gBACnC,GAAG;aACJ,CAAC;SACH,CAAC;IACJ,CAAC,CAAC,CACH,CACF,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7B,UAAU,EAAE,GAAG;QACf,WAAW;KACZ,CAAC,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["import {\n  type Address,\n  type ISmartAccountProvider,\n  type ISmartContractAccount,\n} from \"@alchemy/aa-core\";\nimport { SessionKeyPlugin } from \"./plugin.js\";\n\n// find predecessors for each keys and returned the struct `ISessionKeyPlugin.SessionKeyToRemove[]`\n// where SessionKeyToRemove = { sessionKey: Address, predecessor: Hex }\nexport const buildSessionKeysToRemoveStruct = async <\n  P extends ISmartAccountProvider & { account: ISmartContractAccount }\n>(\n  provider: P,\n  keys: ReadonlyArray<Address>\n) => {\n  const contract = SessionKeyPlugin.getContract(provider.rpcClient);\n  return (\n    await Promise.all(\n      keys.map(async (key) => {\n        return [\n          key,\n          await contract.read.findPredecessor([\n            await provider.account.getAddress(),\n            key,\n          ]),\n        ];\n      })\n    )\n  ).map(([key, predecessor]) => ({\n    sessionKey: key,\n    predecessor,\n  }));\n};\n"]}