import { encodeFunctionData, encodeFunctionResult, keccak256, } from "viem";
import { IPluginAbi } from "../abis/IPlugin.js";
import { IPluginManagerAbi } from "../abis/IPluginManager.js";
export async function installPlugin(provider, params, overrides) {
    const callData = await encodeInstallPluginUserOperation(provider, params);
    return provider.sendUserOperation(callData, overrides);
}
export async function encodeInstallPluginUserOperation(provider, params) {
    const pluginManifest = await provider.rpcClient.readContract({
        abi: IPluginAbi,
        address: params.pluginAddress,
        functionName: "pluginManifest",
    });
    const manifestHash = params.manifestHash ??
        keccak256(encodeFunctionResult({
            abi: IPluginAbi,
            functionName: "pluginManifest",
            result: pluginManifest,
        }));
    return encodeFunctionData({
        abi: IPluginManagerAbi,
        functionName: "installPlugin",
        args: [
            params.pluginAddress,
            manifestHash,
            params.pluginInitData ?? "0x",
            params.dependencies ?? [],
        ],
    });
}
//# sourceMappingURL=installPlugin.js.map