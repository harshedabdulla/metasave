import type { ISmartAccountProvider, UserOperationOverrides } from "@alchemy/aa-core";
import { type Address, type Hash } from "viem";
import type { FunctionReference } from "../account-loupe/types.js";
import type { IMSCA } from "../types.js";
export type InstallPluginParams = {
    pluginAddress: Address;
    manifestHash?: Hash;
    pluginInitData?: Hash;
    dependencies?: FunctionReference[];
};
export declare function installPlugin<P extends ISmartAccountProvider & {
    account: IMSCA<any, any, any>;
}>(provider: P, params: InstallPluginParams, overrides?: UserOperationOverrides): Promise<import("@alchemy/aa-core").SendUserOperationResult>;
export declare function encodeInstallPluginUserOperation<P extends ISmartAccountProvider & {
    account: IMSCA<any, any, any>;
}>(provider: P, params: InstallPluginParams): Promise<`0x${string}`>;
