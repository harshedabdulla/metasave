{"version":3,"file":"decorator.js","sourceRoot":"","sources":["../../../../../src/msca/account-loupe/decorator.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAI5D,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,OAA6B,EACd,EAAE,CAAC,CAAC;IACnB,0BAA0B,EAAE,KAAK,EAAE,QAA2B,EAAE,EAAE,CAChE,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;QAC/B,OAAO,EAAE,MAAM,OAAO,CAAC,UAAU,EAAE;QACnC,GAAG,EAAE,gBAAgB;QACrB,YAAY,EAAE,4BAA4B;QAC1C,IAAI,EAAE,CAAC,QAAQ,CAAC;KACjB,CAAC;IAEJ,iBAAiB,EAAE,KAAK,EAAE,QAA2B,EAAE,EAAE,CACvD,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;QAC/B,OAAO,EAAE,MAAM,OAAO,CAAC,UAAU,EAAE;QACnC,GAAG,EAAE,gBAAgB;QACrB,YAAY,EAAE,mBAAmB;QACjC,IAAI,EAAE,CAAC,QAAQ,CAAC;KACjB,CAAC;IAEJ,qBAAqB,EAAE,KAAK,EAAE,QAAc,EAAE,EAAE,CAC9C,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;QAC/B,OAAO,EAAE,MAAM,OAAO,CAAC,UAAU,EAAE;QACnC,GAAG,EAAE,gBAAgB;QACrB,YAAY,EAAE,uBAAuB;QACrC,IAAI,EAAE,CAAC,QAAQ,CAAC;KACjB,CAAC;IAEJ,mBAAmB,EAAE,KAAK,IAAI,EAAE,CAC9B,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;QAC/B,OAAO,EAAE,MAAM,OAAO,CAAC,UAAU,EAAE;QACnC,GAAG,EAAE,gBAAgB;QACrB,YAAY,EAAE,qBAAqB;KACpC,CAAC;CACL,CAAC,CAAC","sourcesContent":["import type { Hash } from \"viem\";\nimport { IAccountLoupeAbi } from \"../abis/IAccountLoupe.js\";\nimport type { IMSCA } from \"../types.js\";\nimport type { FunctionReference, IAccountLoupe } from \"./types.js\";\n\nexport const accountLoupeDecorators = (\n  account: IMSCA<any, any, any>\n): IAccountLoupe => ({\n  getExecutionFunctionConfig: async (selector: FunctionReference) =>\n    account.rpcProvider.readContract({\n      address: await account.getAddress(),\n      abi: IAccountLoupeAbi,\n      functionName: \"getExecutionFunctionConfig\",\n      args: [selector],\n    }),\n\n  getExecutionHooks: async (selector: FunctionReference) =>\n    account.rpcProvider.readContract({\n      address: await account.getAddress(),\n      abi: IAccountLoupeAbi,\n      functionName: \"getExecutionHooks\",\n      args: [selector],\n    }),\n\n  getPreValidationHooks: async (selector: Hash) =>\n    account.rpcProvider.readContract({\n      address: await account.getAddress(),\n      abi: IAccountLoupeAbi,\n      functionName: \"getPreValidationHooks\",\n      args: [selector],\n    }),\n\n  getInstalledPlugins: async () =>\n    account.rpcProvider.readContract({\n      address: await account.getAddress(),\n      abi: IAccountLoupeAbi,\n      functionName: \"getInstalledPlugins\",\n    }),\n});\n"]}