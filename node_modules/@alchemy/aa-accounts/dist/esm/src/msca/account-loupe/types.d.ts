import type { Address, Hash, Hex } from "viem";
export type FunctionId = Hex;
export type FunctionReference = Hex;
export type ExecutionFunctionConfig = {
    plugin: Address;
    userOpValidationFunction: FunctionReference;
    runtimeValidationFunction: FunctionReference;
};
export type ExecutionHooks = {
    preExecHook: FunctionReference;
    postExecHook: FunctionReference;
};
export type PreValidationHooks = [
    readonly FunctionReference[],
    readonly FunctionReference[]
];
export interface IAccountLoupe {
    getExecutionFunctionConfig(selector: FunctionReference): Promise<ExecutionFunctionConfig>;
    getExecutionHooks(selector: FunctionReference): Promise<ReadonlyArray<ExecutionHooks>>;
    getPreValidationHooks(selector: Hash): Promise<Readonly<PreValidationHooks>>;
    getInstalledPlugins(): Promise<ReadonlyArray<Address>>;
}
