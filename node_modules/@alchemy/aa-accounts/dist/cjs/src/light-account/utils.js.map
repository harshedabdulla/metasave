{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/light-account/utils.ts"],"names":[],"mappings":";;;AACA,wCAeqB;AASR,QAAA,oBAAoB,GAM7B;IACF,QAAQ,EAAE;QACR,cAAc,EACZ,4CAA4C,CAAC,WAAW,EAAa;QACvE,WAAW,EACT,4CAA4C,CAAC,WAAW,EAAa;KACxE;IACD,QAAQ,EAAE;QACR,cAAc,EACZ,4CAA4C,CAAC,WAAW,EAAa;QACvE,WAAW,EACT,4CAA4C,CAAC,WAAW,EAAa;KACxE;IACD,QAAQ,EAAE;QACR,cAAc,EACZ,4CAA4C,CAAC,WAAW,EAAa;QACvE,WAAW,EACT,4CAA4C,CAAC,WAAW,EAAa;KACxE;CACF,CAAC;AASK,MAAM,oCAAoC,GAAG,CAClD,KAAY,EACZ,UAA+B,QAAQ,EAC9B,EAAE;IACX,QAAQ,KAAK,CAAC,EAAE,EAAE,CAAC;QACjB,KAAK,gBAAO,CAAC,EAAE,CAAC;QAChB,KAAK,gBAAO,CAAC,EAAE,CAAC;QAChB,KAAK,eAAM,CAAC,EAAE,CAAC;QACf,KAAK,gBAAO,CAAC,EAAE,CAAC;QAChB,KAAK,sBAAa,CAAC,EAAE,CAAC;QACtB,KAAK,iBAAQ,CAAC,EAAE,CAAC;QACjB,KAAK,uBAAc,CAAC,EAAE,CAAC;QACvB,KAAK,wBAAe,CAAC,EAAE,CAAC;QACxB,KAAK,iBAAQ,CAAC,EAAE,CAAC;QACjB,KAAK,uBAAc,CAAC,EAAE,CAAC;QACvB,KAAK,wBAAe,CAAC,EAAE,CAAC;QACxB,KAAK,aAAI,CAAC,EAAE,CAAC;QACb,KAAK,mBAAU,CAAC,EAAE,CAAC;QACnB,KAAK,oBAAW,CAAC,EAAE;YACjB,OAAO,4BAAoB,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC;IACxD,CAAC;IAED,MAAM,IAAI,KAAK,CACb,wDAAwD,KAAK,CAAC,IAAI,EAAE,CACrE,CAAC;AACJ,CAAC,CAAC;AAzBW,QAAA,oCAAoC,wCAyB/C;AAEW,QAAA,gCAAgC,GAAG;IAC9C,4BAAoB,CAAC,QAAQ,CAAC;IAC9B,4BAAoB,CAAC,QAAQ,CAAC;CAC/B,CAAC;AAEW,QAAA,oCAAoC,GAAG,IAAI,GAAG,CACzD,wCAAgC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAC9D,CAAC","sourcesContent":["import type { Address, Chain } from \"viem\";\nimport {\n  arbitrum,\n  arbitrumGoerli,\n  arbitrumSepolia,\n  base,\n  baseGoerli,\n  baseSepolia,\n  goerli,\n  mainnet,\n  optimism,\n  optimismGoerli,\n  optimismSepolia,\n  polygon,\n  polygonMumbai,\n  sepolia,\n} from \"viem/chains\";\n\nexport type LightAccountVersion =\n  /** @deprecated This version does not support 1271 signature validation */\n  | \"v1.0.1\"\n  /** @deprecated This version has a known issue with 1271 validation, it's recommended to use v1.1.0 */\n  | \"v1.0.2\"\n  | \"v1.1.0\";\n\nexport const LightAccountVersions: Record<\n  LightAccountVersion,\n  {\n    factoryAddress: Address;\n    implAddress: Address;\n  }\n> = {\n  \"v1.0.1\": {\n    factoryAddress:\n      \"0x000000893A26168158fbeaDD9335Be5bC96592E2\".toLowerCase() as Address,\n    implAddress:\n      \"0xc1b2fc4197c9187853243e6e4eb5a4af8879a1c0\".toLowerCase() as Address,\n  },\n  \"v1.0.2\": {\n    factoryAddress:\n      \"0x00000055C0b4fA41dde26A74435ff03692292FBD\".toLowerCase() as Address,\n    implAddress:\n      \"0x5467b1947F47d0646704EB801E075e72aeAe8113\".toLowerCase() as Address,\n  },\n  \"v1.1.0\": {\n    factoryAddress:\n      \"0x00004EC70002a32400f8ae005A26081065620D20\".toLowerCase() as Address,\n    implAddress:\n      \"0xae8c656ad28F2B59a196AB61815C16A0AE1c3cba\".toLowerCase() as Address,\n  },\n};\n\n/**\n * Utility method returning the default light account factory address given a {@link Chain} object\n *\n * @param chain - a {@link Chain} object\n * @returns a {@link Address} for the given chain\n * @throws if the chain doesn't have an address currently deployed\n */\nexport const getDefaultLightAccountFactoryAddress = (\n  chain: Chain,\n  version: LightAccountVersion = \"v1.1.0\"\n): Address => {\n  switch (chain.id) {\n    case mainnet.id:\n    case sepolia.id:\n    case goerli.id:\n    case polygon.id:\n    case polygonMumbai.id:\n    case optimism.id:\n    case optimismGoerli.id:\n    case optimismSepolia.id:\n    case arbitrum.id:\n    case arbitrumGoerli.id:\n    case arbitrumSepolia.id:\n    case base.id:\n    case baseGoerli.id:\n    case baseSepolia.id:\n      return LightAccountVersions[version].factoryAddress;\n  }\n\n  throw new Error(\n    `no default light account factory contract exists for ${chain.name}`\n  );\n};\n\nexport const LightAccountUnsupported1271Impls = [\n  LightAccountVersions[\"v1.0.1\"],\n  LightAccountVersions[\"v1.0.2\"],\n];\n\nexport const LightAccountUnsupported1271Factories = new Set(\n  LightAccountUnsupported1271Impls.map((x) => x.factoryAddress)\n);\n"]}