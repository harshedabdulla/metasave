{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../../../src/light-account/provider.ts"],"names":[],"mappings":";;;AAAA,8CAAwD;AACxD,6CAAyD;AACzD,2CAA+D;AAE/D,yCAAkE;AAE3D,MAAM,0BAA0B,GAAG,CACxC,OAAmC,EAC4B,EAAE;IACjE,MAAM,MAAM,GAAG,4CAAgC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAE/D,OAAO,IAAI,8BAAoB,CAAC;QAC9B,WAAW,EAAE,MAAM,CAAC,WAAW;QAC/B,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;QAC3C,IAAI,EAAE,MAAM,CAAC,IAAI;KAClB,CAAC,CAAC,OAAO,CACR,CAAC,SAAS,EAAE,EAAE,CACZ,IAAI,sCAAyB,CAAC;QAC5B,SAAS;QACT,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;QAC3C,cAAc,EACZ,MAAM,CAAC,cAAc;YACrB,IAAA,+CAAoC,EAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;QACpE,cAAc,EAAE,MAAM,CAAC,cAAc;KACtC,CAAC,CACL,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,0BAA0B,8BAwBrC","sourcesContent":["import { SmartAccountProvider } from \"@alchemy/aa-core\";\nimport { LightSmartContractAccount } from \"./account.js\";\nimport { LightAccountProviderConfigSchema } from \"./schema.js\";\nimport type { LightAccountProviderConfig } from \"./types.js\";\nimport { getDefaultLightAccountFactoryAddress } from \"./utils.js\";\n\nexport const createLightAccountProvider = (\n  config_: LightAccountProviderConfig\n): SmartAccountProvider & { account: LightSmartContractAccount } => {\n  const config = LightAccountProviderConfigSchema.parse(config_);\n\n  return new SmartAccountProvider({\n    rpcProvider: config.rpcProvider,\n    chain: config.chain,\n    entryPointAddress: config.entryPointAddress,\n    opts: config.opts,\n  }).connect(\n    (rpcClient) =>\n      new LightSmartContractAccount({\n        rpcClient,\n        initCode: config.initCode,\n        owner: config.owner,\n        chain: config.chain,\n        entryPointAddress: config.entryPointAddress,\n        factoryAddress:\n          config.factoryAddress ??\n          getDefaultLightAccountFactoryAddress(config.chain, config.version),\n        accountAddress: config.accountAddress,\n      })\n  );\n};\n"]}