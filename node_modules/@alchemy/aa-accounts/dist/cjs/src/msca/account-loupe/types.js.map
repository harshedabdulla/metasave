{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../src/msca/account-loupe/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Address, Hash, Hex } from \"viem\";\n\nexport type FunctionId = Hex;\n\n// Treats the first 20 bytes as an address, and the last byte as a identifier.\nexport type FunctionReference = Hex;\n\nexport type ExecutionFunctionConfig = {\n  plugin: Address;\n  userOpValidationFunction: FunctionReference;\n  runtimeValidationFunction: FunctionReference;\n};\n\nexport type ExecutionHooks = {\n  preExecHook: FunctionReference;\n  postExecHook: FunctionReference;\n};\n\nexport type PreValidationHooks = [\n  readonly FunctionReference[],\n  readonly FunctionReference[]\n];\n\nexport interface IAccountLoupe {\n  /// @notice Gets the validation functions and plugin address for a selector\n  /// @dev If the selector is a native function, the plugin address will be the address of the account\n  /// @param selector The selector to get the configuration for\n  /// @return The configuration for this selector\n  getExecutionFunctionConfig(\n    selector: FunctionReference\n  ): Promise<ExecutionFunctionConfig>;\n\n  /// @notice Gets the pre and post execution hooks for a selector\n  /// @param selector The selector to get the hooks for\n  /// @return The pre and post execution hooks for this selector\n  getExecutionHooks(\n    selector: FunctionReference\n  ): Promise<ReadonlyArray<ExecutionHooks>>;\n\n  /// @notice Gets the pre user op and runtime validation hooks associated with a selector\n  /// @param selector The selector to get the hooks for\n  /// @return preUserOpValidationHooks The pre user op validation hooks for this selector\n  /// @return preRuntimeValidationHooks The pre runtime validation hooks for this selector\n  getPreValidationHooks(selector: Hash): Promise<Readonly<PreValidationHooks>>;\n\n  /// @notice Gets an array of all installed plugins\n  /// @return The addresses of all installed plugins\n  getInstalledPlugins(): Promise<ReadonlyArray<Address>>;\n}\n"]}