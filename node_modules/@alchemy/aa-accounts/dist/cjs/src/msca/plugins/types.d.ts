import type { Abi, Address, ISmartAccountProvider, PublicErc4337Client, SupportedTransports } from "@alchemy/aa-core";
import type { GetContractReturnType, HttpTransport, Transport } from "viem";
import type { IMSCA } from "../types";
export interface Plugin<AD, PD, TAbi extends Abi> {
    meta: {
        name: string;
        version: string;
        addresses: Record<number, Address>;
    };
    getContract: (rpcClient: PublicErc4337Client<HttpTransport> | PublicErc4337Client<Transport>, address?: Address) => GetContractReturnType<TAbi, typeof rpcClient, undefined, Address>;
    accountMethods: (a: IMSCA<any, any, any>) => AD;
    providerMethods: <TTransport extends SupportedTransports, P extends ISmartAccountProvider<TTransport> & {
        account: IMSCA<TTransport>;
    }>(p: P) => PD;
}
