{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../plugingen/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { NoUndefined } from \"@alchemy/aa-core\";\nimport type { Plugin } from \"@wagmi/cli\";\nimport type { GetContractReturnType, PublicClient } from \"viem\";\nimport type { PluginGenConfig } from \"../plugindefs/types\";\nimport type { IPluginAbi } from \"../src/msca/abis/IPlugin\";\n\nexport type PhaseInput = {\n  content: string[];\n  addImport: (\n    moduleName: string,\n    member: { name: string; isType?: boolean }\n  ) => void;\n  addType: (typeName: string, typeDef: string, isPublic?: boolean) => void;\n  config: PluginGenConfig;\n  contract: Parameters<NoUndefined<Plugin[\"run\"]>>[0][\"contracts\"][number];\n  plugin: GetContractReturnType<typeof IPluginAbi, PublicClient>;\n};\n\nexport type Phase = (input: PhaseInput) => Promise<PhaseInput>;\n"]}