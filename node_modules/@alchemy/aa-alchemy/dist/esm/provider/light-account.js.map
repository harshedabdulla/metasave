{"version":3,"file":"light-account.js","sourceRoot":"","sources":["../../../src/provider/light-account.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,oCAAoC,EACpC,yBAAyB,GAC1B,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,uCAAuC,EAAE,MAAM,cAAc,CAAC;AAEvE,OAAO,EAAE,eAAe,EAAE,MAAM,WAAW,CAAC;AAU5C,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAC/C,OAA0C,EACgB,EAAE;IAC5D,MAAM,MAAM,GAAG,uCAAuC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAEtE,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,OAAO,CACxC,CAAC,SAAS,EAAE,EAAE,CACZ,IAAI,yBAAyB,CAAC;QAC5B,SAAS;QACT,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;QAC3C,cAAc,EACZ,MAAM,CAAC,cAAc;YACrB,oCAAoC,CAAC,MAAM,CAAC,KAAK,CAAC;QACpD,cAAc,EAAE,MAAM,CAAC,cAAc;KACtC,CAAC,CACL,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import {\n  getDefaultLightAccountFactoryAddress,\n  LightSmartContractAccount,\n} from \"@alchemy/aa-accounts\";\nimport { LightAccountAlchemyProviderConfigSchema } from \"../schema.js\";\nimport type { LightAccountAlchemyProviderConfig } from \"../type.js\";\nimport { AlchemyProvider } from \"./base.js\";\n\n/**\n * This method improves the developer experience of connecting a Light Account to an\n * AlchemyProvider via an optional dependency on the `@alchemy/aa-accounts` package.\n * @see: https://github.com/alchemyplatform/aa-sdk/tree/development/packages/accounts\n *\n * @param config_ - the AlchemyProvider configuration with additional pamaeters for Light Account\n * @returns - a new AlchemyProvider connected to a Light Account\n */\nexport const createLightAccountAlchemyProvider = (\n  config_: LightAccountAlchemyProviderConfig\n): AlchemyProvider & { account: LightSmartContractAccount } => {\n  const config = LightAccountAlchemyProviderConfigSchema.parse(config_);\n\n  return new AlchemyProvider(config).connect(\n    (rpcClient) =>\n      new LightSmartContractAccount({\n        rpcClient,\n        initCode: config.initCode,\n        owner: config.owner,\n        chain: config.chain,\n        entryPointAddress: config.entryPointAddress,\n        factoryAddress:\n          config.factoryAddress ??\n          getDefaultLightAccountFactoryAddress(config.chain),\n        accountAddress: config.accountAddress,\n      })\n  );\n};\n"]}