import { SmartAccountProvider, type BatchUserOperationCallData, type UserOperationCallData, type UserOperationOverrides } from "@alchemy/aa-core";
import { Alchemy } from "alchemy-sdk";
import { type HttpTransport } from "viem";
import { type AlchemyGasManagerConfig } from "../middleware/gas-manager.js";
import type { AlchemyProviderConfig } from "../type.js";
export declare class AlchemyProvider extends SmartAccountProvider<HttpTransport> {
    private rpcUrl;
    constructor(config_: AlchemyProviderConfig);
    simulateUserOperationAssetChanges: (data: UserOperationCallData | BatchUserOperationCallData, overrides?: UserOperationOverrides) => Promise<import("../middleware/types/index.js").SimulateUserOperationAssetChangesResponse>;
    withAlchemyGasManager(config: AlchemyGasManagerConfig, delegateGasEstimation?: boolean): AlchemyProvider;
    withAlchemyUserOpSimulation(): this;
    withAlchemyEnhancedApis(alchemy: Alchemy): this & Alchemy;
}
